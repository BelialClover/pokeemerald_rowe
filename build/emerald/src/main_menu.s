@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.type	 gUnknown_02022D04,object
	.size	 gUnknown_02022D04,1
gUnknown_02022D04:
	.byte	0x0
	.align	1, 0
	.type	 sCurrItemAndOptionMenuCheck,object
	.size	 sCurrItemAndOptionMenuCheck,2
sCurrItemAndOptionMenuCheck:
	.short	0x0
	.section .rodata
	.align	1, 0
	.type	 sBirchSpeechBgPals,object
sBirchSpeechBgPals:
	.short	0x0
	.short	0x53ff
	.short	0x37ff
	.short	0x2f7b
	.short	0x26f7
	.short	0x1e73
	.short	0x19ef
	.short	0x116b
	.short	0x8e7
	.short	0x67f8
	.short	0x43ef
	.short	0x376e
	.short	0x2eed
	.short	0x226c
	.short	0x19eb
	.short	0x0
	.short	0x0
	.short	0x53ff
	.short	0x37ff
	.short	0x2f7b
	.short	0x26f7
	.short	0x1e73
	.short	0x19ef
	.short	0x116b
	.short	0x8e7
	.short	0x67f8
	.short	0x43ef
	.short	0x376e
	.short	0x2eed
	.short	0x226c
	.short	0x19eb
	.short	0x0
	.size	 sBirchSpeechBgPals,64
	.align	2, 0
	.type	 sBirchSpeechShadowGfx,object
sBirchSpeechShadowGfx:
	.word	0x60010
	.word	-0xfffffce
	.word	-0x66fe6fff
	.word	-0x55fe4f67
	.word	0x1b0aa49
	.word	0x1b0bbbb
	.word	0x1b0cccc
	.word	-0x4f2222dc
	.word	-0x4f1111ff
	.word	-0x6c8888ff
	.word	-0x7777fe50
	.word	-0xfe50
	.word	0x19001f0
	.word	-0xf4e0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf03fe10
	.word	-0xefe4fff
	.word	-0xffe0faf
	.word	-0x70feefff
	.word	-0x7700f788
	.word	0x17f04457
	.word	0x887888
	.word	0x45444578
	.word	0x13111234
	.word	0x11111110
	.word	-0x7770e770
	.word	0x57075778
	.word	0x23223445
	.word	0x1501700
	.word	-0x77ffe4b0
	.word	0x45777888
	.word	-0x1fdddccc
	.word	0x1f601a80
	.word	0x44550712
	.word	-0x27edcccc
	.word	0x1001cd0
	.word	0x21b008f
	.word	0x22226736
	.word	0x3be02270
	.word	0x3b100110
	.word	0x66666666
	.word	0x301ff0c0
	.word	0x23457801
	.word	0x557811
	.word	0x578f1234
	.word	0x78ff2445
	.word	-0xbaaafe
	.word	0x55778f
	.word	0xba6771
	.word	0x7b107876
	.word	0x7b102750
	.word	0x45040023
	.word	0x55040080
	.word	0x67223455
	.word	0x45065555
	.word	0x55567778
	.word	0x2b4051f0
	.word	0x27009f22
	.word	0x73f03344
	.word	0x1cf00180
	.word	0x1f001f0
	.word	-0xffe0f04
	.word	-0xffe0fff
	.word	0x7fa101
	.word	0x3558eb
	.word	0x12358fff
	.word	0x112458ff
	.word	0x13458f14
	.word	0x40121701
	.word	-0xeeecfd
	.word	-0x2cdf35ff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0x5dfe0f01
	.word	0xb02b5ce
	.word	0x4087f48f
	.word	0x7025501
	.word	-0xbf3fd89
	.word	0x2700be02
	.word	-0x2dfd500c
	.word	0x34220022
	.word	0x2800d756
	.word	0x366a602
	.word	0x55107703
	.word	-0x7cefe0b0
	.word	0x2200cc
	.word	0x344423
	.word	0x66230022
	.word	0xb13e966
	.word	0x4f522350
	.word	0x55232033
	.word	-0x1eb8cfab
	.word	-0x606dd8cb
	.word	0x4444df12
	.word	0x23104444
	.word	0x78ef12be
	.word	0x38132300
	.word	0x1f301ff0
	.word	0x4350
	.size	 sBirchSpeechShadowGfx,436
	.align	2, 0
	.type	 sBirchSpeechBgMap,object
sBirchSpeechBgMap:
	.word	0x50010
	.word	-0xfeffec3
	.word	-0xffe0fff
	.word	0x2015001
	.word	-0xf10fe10
	.word	0x6001f001
	.word	0x1f00301
	.word	0x1f001f0
	.word	0x4790160
	.word	0x1f001f0
	.word	0x16001f0
	.word	0x1f00005
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf3ffe10
	.word	0x10015001
	.word	0x12001100
	.word	0x130000
	.word	0x150014
	.word	0x17000016
	.word	0x16041700
	.word	0x1041504
	.word	0x4130414
	.word	0x1110412
	.word	0x31f0c06e
	.word	0x2001b0
	.word	0x220021
	.word	0x24002300
	.word	0x26002500
	.word	0x270000
	.word	0x4260427
	.word	0x24000425
	.word	0x22042304
	.word	0x60042104
	.word	-0x3fc00fe0
	.word	0x19001801
	.word	0x1a00
	.word	0x1c001b
	.word	0x1e001d
	.word	0x1f001f00
	.word	0x1d041e04
	.word	0x41c0400
	.word	0x41a041b
	.word	0x18043019
	.word	0x1c03ff0
	.word	0x290028
	.word	0x2b002a00
	.word	0x2d002c00
	.word	0x2e0000
	.word	0x42f002f
	.word	0x2d00042e
	.word	0x2b042c04
	.word	0x1f042a04
	.word	-0xfd7fbd7
	.word	-0xffe0fc1
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0x7fe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1e0
	.size	 sBirchSpeechBgMap,296
	.align	1, 0
	.type	 sBirchSpeechBgGradientPal,object
sBirchSpeechBgGradientPal:
	.short	0x53ff
	.short	0x37ff
	.short	0x2f7b
	.short	0x26f7
	.short	0x1e73
	.short	0x19ef
	.short	0x116b
	.short	0x8e7
	.size	 sBirchSpeechBgGradientPal,16
	.align	1, 0
	.type	 sBirchSpeechPlatformBlackPal,object
sBirchSpeechPlatformBlackPal:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sBirchSpeechPlatformBlackPal,16
	.align	2, 0
	.type	 sWindowTemplates_MainMenu,object
sWindowTemplates_MainMenu:
	.byte	0x0
	.byte	0x2
	.byte	0x1
	.byte	0x1a
	.byte	0x2
	.byte	0xf
	.short	0x1
	.byte	0x0
	.byte	0x2
	.byte	0x5
	.byte	0x1a
	.byte	0x2
	.byte	0xf
	.short	0x35
	.byte	0x0
	.byte	0x2
	.byte	0x1
	.byte	0x1a
	.byte	0x6
	.byte	0xf
	.short	0x1
	.byte	0x0
	.byte	0x2
	.byte	0x9
	.byte	0x1a
	.byte	0x2
	.byte	0xf
	.short	0x9d
	.byte	0x0
	.byte	0x2
	.byte	0xd
	.byte	0x1a
	.byte	0x2
	.byte	0xf
	.short	0xd1
	.byte	0x0
	.byte	0x2
	.byte	0x11
	.byte	0x1a
	.byte	0x2
	.byte	0xf
	.short	0x105
	.byte	0x0
	.byte	0x2
	.byte	0x15
	.byte	0x1a
	.byte	0x2
	.byte	0xf
	.short	0x139
	.byte	0x0
	.byte	0x2
	.byte	0xf
	.byte	0x1a
	.byte	0x4
	.byte	0xf
	.short	0x16d
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sWindowTemplates_MainMenu,72
	.align	2, 0
	.type	 gNewGameBirchSpeechTextWindows,object
gNewGameBirchSpeechTextWindows:
	.byte	0x0
	.byte	0x2
	.byte	0xf
	.byte	0x1b
	.byte	0x4
	.byte	0xf
	.short	0x1
	.byte	0x0
	.byte	0x3
	.byte	0x5
	.byte	0x6
	.byte	0x4
	.byte	0xf
	.short	0x6d
	.byte	0x0
	.byte	0x3
	.byte	0x2
	.byte	0x9
	.byte	0xa
	.byte	0xf
	.short	0x85
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 gNewGameBirchSpeechTextWindows,32
	.align	1, 0
	.type	 sMainMenuBgPal,object
sMainMenuBgPal:
	.short	0x7e51
	.short	0x7fff
	.short	0x28e6
	.short	0x398b
	.short	0x821
	.short	0x5672
	.short	0x7779
	.short	0x5ed6
	.short	0x6f37
	.short	0x1884
	.short	0x460f
	.short	0x3d46
	.short	0x61e5
	.short	0x6a27
	.short	0x728b
	.short	0x7b11
	.size	 sMainMenuBgPal,32
	.align	1, 0
	.type	 sMainMenuTextPal,object
sMainMenuTextPal:
	.short	0x7fff
	.short	0x7fff
	.short	0x318c
	.short	0x675a
	.short	0x43c
	.short	0x3aff
	.short	0x664
	.short	0x4bd2
	.short	0x6546
	.short	0x7b14
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sMainMenuTextPal,32
	.type	 sTextColor_Headers,object
sTextColor_Headers:
	.byte	0xa
	.byte	0xb
	.byte	0xc
	.size	 sTextColor_Headers,3
	.type	 sTextColor_MenuInfo,object
sTextColor_MenuInfo:
	.byte	0xa
	.byte	0x1
	.byte	0xc
	.size	 sTextColor_MenuInfo,3
	.align	2, 0
	.type	 sMainMenuBgTemplates,object
	.size	 sMainMenuBgTemplates,8
sMainMenuBgTemplates:
	.byte	0xe8
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0x71
	.byte	0x30
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sBirchBgTemplate,object
	.size	 sBirchBgTemplate,4
sBirchBgTemplate:
	.byte	0xec
	.byte	0x1
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sScrollArrowsTemplate_MainMenu,object
	.size	 sScrollArrowsTemplate_MainMenu,16
sScrollArrowsTemplate_MainMenu:
	.byte	0x2
	.byte	0x78
	.byte	0x8
	.byte	0x3
	.byte	0x78
	.byte	0x98
	.short	0x3
	.short	0x4
	.short	0x1
	.short	0x1
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sSpriteAffineAnim_PlayerShrink,object
sSpriteAffineAnim_PlayerShrink:
	.short	-0x2
	.short	-0x2
	.byte	0x0
	.byte	0x30
	.space	2
	.short	0x7fff
	.space	6
	.size	 sSpriteAffineAnim_PlayerShrink,16
	.align	2, 0
	.type	 sSpriteAffineAnimTable_PlayerShrink,object
sSpriteAffineAnimTable_PlayerShrink:
	.word	sSpriteAffineAnim_PlayerShrink
	.size	 sSpriteAffineAnimTable_PlayerShrink,4
	.align	2, 0
	.type	 sMenuActions_Gender,object
sMenuActions_Gender:
	.word	gText_BirchBoy
	.word	0x0
	.word	gText_BirchGirl
	.word	0x0
	.size	 sMenuActions_Gender,16
	.align	2, 0
	.type	 gMalePresetNames,object
gMalePresetNames:
	.word	gText_DefaultNameStu
	.word	gText_DefaultNameMilton
	.word	gText_DefaultNameTom
	.word	gText_DefaultNameKenny
	.word	gText_DefaultNameReid
	.word	gText_DefaultNameJude
	.word	gText_DefaultNameJaxson
	.word	gText_DefaultNameEaston
	.word	gText_DefaultNameWalker
	.word	gText_DefaultNameTeru
	.word	gText_DefaultNameJohnny
	.word	gText_DefaultNameBrett
	.word	gText_DefaultNameSeth
	.word	gText_DefaultNameTerry
	.word	gText_DefaultNameCasey
	.word	gText_DefaultNameDarren
	.word	gText_DefaultNameLandon
	.word	gText_DefaultNameCollin
	.word	gText_DefaultNameStanley
	.word	gText_DefaultNameQuincy
	.size	 gMalePresetNames,80
	.align	2, 0
	.type	 gFemalePresetNames,object
gFemalePresetNames:
	.word	gText_DefaultNameKimmy
	.word	gText_DefaultNameTiara
	.word	gText_DefaultNameBella
	.word	gText_DefaultNameJayla
	.word	gText_DefaultNameAllie
	.word	gText_DefaultNameLianna
	.word	gText_DefaultNameSara
	.word	gText_DefaultNameMonica
	.word	gText_DefaultNameCamila
	.word	gText_DefaultNameAubree
	.word	gText_DefaultNameRuthie
	.word	gText_DefaultNameHazel
	.word	gText_DefaultNameNadine
	.word	gText_DefaultNameTanja
	.word	gText_DefaultNameYasmin
	.word	gText_DefaultNameNicola
	.word	gText_DefaultNameLillie
	.word	gText_DefaultNameTerra
	.word	gText_DefaultNameLucy
	.word	gText_DefaultNameHalie
	.size	 gFemalePresetNames,80
.text
	.align	2, 0
	.type	 CB2_MainMenu,function
	.thumb_func
CB2_MainMenu:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe1:
	.size	 CB2_MainMenu,.Lfe1-CB2_MainMenu
	.align	2, 0
	.type	 VBlankCB_MainMenu,function
	.thumb_func
VBlankCB_MainMenu:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 VBlankCB_MainMenu,.Lfe2-VBlankCB_MainMenu
	.align	2, 0
	.globl	CB2_InitMainMenu
	.type	 CB2_InitMainMenu,function
	.thumb_func
CB2_InitMainMenu:
	push	{lr}
	mov	r0, #0x0
	bl	InitMainMenu
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 CB2_InitMainMenu,.Lfe3-CB2_InitMainMenu
	.align	2, 0
	.globl	CB2_ReinitMainMenu
	.type	 CB2_ReinitMainMenu,function
	.thumb_func
CB2_ReinitMainMenu:
	push	{lr}
	mov	r0, #0x1
	bl	InitMainMenu
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 CB2_ReinitMainMenu,.Lfe4-CB2_ReinitMainMenu
	.align	2, 0
	.type	 InitMainMenu,function
	.thumb_func
InitMainMenu:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0xc
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0xa
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x8
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x18
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1a
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x14
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x16
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x10
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x12
	mov	r1, #0x0
	bl	SetGpuReg
	add	r1, sp, #0x4
	mov	r0, #0x0
	strh	r0, [r1]
	add	r0, r1, #0
	mov	r1, #0xc0
	lsl	r1, r1, #0x13
	ldr	r2, .L9
	ldr	r3, .L9+0x4
	stmia r3!, {r0, r1, r2}
	.code	16
	mov	r5, #0x0
	str	r5, [sp, #0x8]
	add	r0, sp, #0x8
	mov	r1, #0xe0
	lsl	r1, r1, #0x13
	ldr	r2, .L9+0x8
	ldr	r3, .L9+0x4
	stmia r3!, {r0, r1, r2}
	.code	16
	add	r0, sp, #0x4
	strh	r5, [r0]
	ldr	r1, .L9+0xc
	ldr	r2, .L9+0x10
	ldr	r3, .L9+0x4
	stmia r3!, {r0, r1, r2}
	.code	16
	bl	ResetPaletteFade
	ldr	r0, .L9+0x14
	mov	r1, #0x0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r0, .L9+0x18
	mov	r1, #0xf0
	mov	r2, #0x20
	bl	LoadPalette
	bl	ScanlineEffect_Stop
	bl	ResetTasks
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	cmp	r4, #0
	beq	.L7	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	str	r5, [sp]
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	b	.L8
.L10:
	.align	2, 0
.L9:
	.word	-0x7eff4000
	.word	0x40000d4
	.word	-0x7affff00
	.word	0x5000002
	.word	-0x7efffe01
	.word	sMainMenuBgPal
	.word	sMainMenuTextPal
.L7:
	mov	r0, #0x1
	neg	r0, r0
	ldr	r1, .L11
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
.L8:
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L11+0x4
	mov	r0, #0x0
	mov	r2, #0x2
	bl	InitBgsFromTemplates
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	ldr	r0, .L11+0x8
	bl	InitWindows
	bl	DeactivateAllTextPrinters
	ldr	r1, .L11+0xc
	mov	r0, #0x0
	bl	LoadMainMenuWindowFrameTiles
	mov	r0, #0x40
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x44
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x48
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x52
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x54
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1
	bl	EnableInterrupts
	ldr	r0, .L11+0x10
	bl	SetVBlankCallback
	ldr	r0, .L11+0x14
	bl	SetMainCallback2
	mov	r1, #0xc1
	lsl	r1, r1, #0x6
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	HideBg
	ldr	r0, .L11+0x18
	mov	r1, #0x0
	bl	CreateTask
	mov	r0, #0x0
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L12:
	.align	2, 0
.L11:
	.word	0xffff
	.word	sMainMenuBgTemplates
	.word	sWindowTemplates_MainMenu
	.word	0x1d5
	.word	VBlankCB_MainMenu
	.word	CB2_MainMenu
	.word	Task_MainMenuCheckSaveFile
.Lfe5:
	.size	 InitMainMenu,.Lfe5-InitMainMenu
	.align	2, 0
	.type	 Task_MainMenuCheckSaveFile,function
	.thumb_func
Task_MainMenuCheckSaveFile:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r7, r0, #0x3
	ldr	r0, .L39
	mov	r8, r0
	add	r4, r7, r0
	ldr	r0, .L39+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	beq	.LCB302
	b	.L14	@long jump
.LCB302:
	mov	r0, #0x40
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x44
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x48
	mov	r1, #0x11
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x31
	bl	SetGpuReg
	mov	r0, #0x50
	mov	r1, #0xc1
	bl	SetGpuReg
	mov	r0, #0x52
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x54
	mov	r1, #0x7
	bl	SetGpuReg
	bl	IsWirelessAdapterConnected
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L15	@cond_branch
	mov	r0, #0x1
	strh	r0, [r4, #0x1e]
.L15:
	ldr	r0, .L39+0x8
	ldrh	r0, [r0]
	cmp	r0, #0x2
	beq	.L19	@cond_branch
	cmp	r0, #0x2
	bgt	.L26	@cond_branch
	cmp	r0, #0
	beq	.L23	@cond_branch
	cmp	r0, #0x1
	beq	.L17	@cond_branch
	b	.L23
.L40:
	.align	2, 0
.L39:
	.word	gTasks+0x8
	.word	gPaletteFade
	.word	gSaveFileStatus
.L26:
	cmp	r0, #0x4
	beq	.L24	@cond_branch
	cmp	r0, #0xff
	beq	.L20	@cond_branch
	b	.L23
.L17:
	strh	r0, [r4]
	bl	IsMysteryGiftEnabled
	cmp	r0, #0
	beq	.L18	@cond_branch
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
.L18:
	mov	r0, r8
	sub	r0, r0, #0x8
	add	r0, r7, r0
	ldr	r1, .L41
	b	.L36
.L42:
	.align	2, 0
.L41:
	.word	Task_MainMenuCheckBattery
.L19:
	ldr	r0, .L43
	bl	CreateMainMenuErrorWindow
	strh	r5, [r4]
	mov	r0, r8
	sub	r0, r0, #0x8
	add	r0, r7, r0
	b	.L37
.L44:
	.align	2, 0
.L43:
	.word	gText_SaveFileErased
.L20:
	ldr	r0, .L45
	bl	CreateMainMenuErrorWindow
	mov	r0, r8
	sub	r0, r0, #0x8
	add	r0, r7, r0
	ldr	r1, .L45+0x4
	str	r1, [r0]
	mov	r0, #0x1
	strh	r0, [r4]
	bl	IsMysteryGiftEnabled
	cmp	r0, #0x1
	bne	.L16	@cond_branch
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	b	.L16
.L46:
	.align	2, 0
.L45:
	.word	gText_SaveFileCorrupted
	.word	Task_WaitForSaveFileErrorWindow
.L23:
	mov	r0, #0x0
	strh	r0, [r4]
	ldr	r1, .L47
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L47+0x4
	b	.L36
.L48:
	.align	2, 0
.L47:
	.word	gTasks
	.word	Task_MainMenuCheckBattery
.L24:
	ldr	r0, .L49
	bl	CreateMainMenuErrorWindow
	mov	r0, r8
	sub	r0, r0, #0x8
	add	r0, r7, r0
	strh	r5, [r0, #0x8]
.L37:
	ldr	r1, .L49+0x4
.L36:
	str	r1, [r0]
.L16:
	ldr	r2, .L49+0x8
	ldrh	r1, [r2]
	mov	r0, #0x80
	lsl	r0, r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L27	@cond_branch
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x2
	beq	.L31	@cond_branch
	cmp	r0, #0x2
	ble	.L35	@cond_branch
	cmp	r0, #0x3
	beq	.L32	@cond_branch
	b	.L27
.L50:
	.align	2, 0
.L49:
	.word	gJPText_No1MSubCircuit
	.word	Task_WaitForSaveFileErrorWindow
	.word	sCurrItemAndOptionMenuCheck
.L35:
	cmp	r0, #0
	blt	.L27	@cond_branch
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	b	.L38
.L31:
	mov	r0, #0x3
	b	.L38
.L32:
	mov	r0, #0x4
.L38:
	strh	r0, [r2]
.L27:
	ldrh	r1, [r2]
	ldr	r0, .L51
	and	r0, r0, r1
	strh	r0, [r2]
	strh	r0, [r4, #0x2]
	ldrh	r0, [r4]
	add	r0, r0, #0x2
	strh	r0, [r4, #0x18]
.L14:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L52:
	.align	2, 0
.L51:
	.word	0x7fff
.Lfe6:
	.size	 Task_MainMenuCheckSaveFile,.Lfe6-Task_MainMenuCheckSaveFile
	.align	2, 0
	.type	 Task_WaitForSaveFileErrorWindow,function
	.thumb_func
Task_WaitForSaveFileErrorWindow:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	RunTextPrinters
	mov	r0, #0x7
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L54	@cond_branch
	ldr	r0, .L55
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L54	@cond_branch
	mov	r0, #0x7
	bl	ClearWindowTilemap
	ldr	r0, .L55+0x4
	bl	ClearMainMenuWindowTilemap
	ldr	r1, .L55+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L55+0xc
	str	r1, [r0]
.L54:
	pop	{r4}
	pop	{r0}
	bx	r0
.L56:
	.align	2, 0
.L55:
	.word	gMain
	.word	sWindowTemplates_MainMenu+0x38
	.word	gTasks
	.word	Task_MainMenuCheckBattery
.Lfe7:
	.size	 Task_WaitForSaveFileErrorWindow,.Lfe7-Task_WaitForSaveFileErrorWindow
	.align	2, 0
	.type	 Task_MainMenuCheckBattery,function
	.thumb_func
Task_MainMenuCheckBattery:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	ldr	r0, .L61
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L58	@cond_branch
	mov	r0, #0x40
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x44
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x48
	mov	r1, #0x11
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x31
	bl	SetGpuReg
	mov	r0, #0x50
	mov	r1, #0xc1
	bl	SetGpuReg
	mov	r0, #0x52
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x54
	mov	r1, #0x7
	bl	SetGpuReg
	bl	RtcGetErrorStatus
	mov	r1, #0xff
	lsl	r1, r1, #0x4
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L59	@cond_branch
	ldr	r0, .L61+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L61+0x8
	str	r0, [r1]
	b	.L58
.L62:
	.align	2, 0
.L61:
	.word	gPaletteFade
	.word	gTasks
	.word	Task_DisplayMainMenu
.L59:
	ldr	r0, .L63
	bl	CreateMainMenuErrorWindow
	ldr	r1, .L63+0x4
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L63+0x8
	str	r1, [r0]
.L58:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L64:
	.align	2, 0
.L63:
	.word	gText_BatteryRunDry
	.word	gTasks
	.word	Task_WaitForBatteryDryErrorWindow
.Lfe8:
	.size	 Task_MainMenuCheckBattery,.Lfe8-Task_MainMenuCheckBattery
	.align	2, 0
	.type	 Task_WaitForBatteryDryErrorWindow,function
	.thumb_func
Task_WaitForBatteryDryErrorWindow:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	RunTextPrinters
	mov	r0, #0x7
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L66	@cond_branch
	ldr	r0, .L67
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L66	@cond_branch
	mov	r0, #0x7
	bl	ClearWindowTilemap
	ldr	r0, .L67+0x4
	bl	ClearMainMenuWindowTilemap
	ldr	r1, .L67+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L67+0xc
	str	r1, [r0]
.L66:
	pop	{r4}
	pop	{r0}
	bx	r0
.L68:
	.align	2, 0
.L67:
	.word	gMain
	.word	sWindowTemplates_MainMenu+0x38
	.word	gTasks
	.word	Task_DisplayMainMenu
.Lfe9:
	.size	 Task_WaitForBatteryDryErrorWindow,.Lfe9-Task_WaitForBatteryDryErrorWindow
	.align	2, 0
	.type	 Task_DisplayMainMenu,function
	.thumb_func
Task_DisplayMainMenu:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	ldr	r1, .L83
	add	r6, r0, r1
	ldr	r0, .L83+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	beq	.LCB752
	b	.L70	@long jump
.LCB752:
	mov	r0, #0x40
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x44
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x48
	mov	r1, #0x11
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x31
	bl	SetGpuReg
	mov	r0, #0x50
	mov	r1, #0xc1
	bl	SetGpuReg
	mov	r0, #0x52
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x54
	mov	r1, #0x7
	bl	SetGpuReg
	add	r0, sp, #0xc
	strh	r4, [r0]
	mov	r1, #0xfe
	mov	r2, #0x2
	bl	LoadPalette
	add	r1, sp, #0xc
	ldr	r2, .L83+0x8
	add	r0, r2, #0
	strh	r0, [r1]
	add	r0, r1, #0
	mov	r1, #0xfa
	mov	r2, #0x2
	bl	LoadPalette
	add	r1, sp, #0xc
	ldr	r2, .L83+0xc
	add	r0, r2, #0
	strh	r0, [r1]
	add	r0, r1, #0
	mov	r1, #0xfb
	mov	r2, #0x2
	bl	LoadPalette
	add	r1, sp, #0xc
	ldr	r2, .L83+0x10
	add	r0, r2, #0
	strh	r0, [r1]
	add	r0, r1, #0
	mov	r1, #0xfc
	mov	r2, #0x2
	bl	LoadPalette
	ldr	r0, .L83+0x14
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	bne	.L71	@cond_branch
	add	r1, sp, #0xc
	ldr	r2, .L83+0x18
	add	r0, r2, #0
	strh	r0, [r1]
	add	r0, r1, #0
	mov	r1, #0xf1
	mov	r2, #0x2
	bl	LoadPalette
	b	.L72
.L84:
	.align	2, 0
.L83:
	.word	gTasks+0x8
	.word	gPaletteFade
	.word	0x7fff
	.word	0x318c
	.word	0x675a
	.word	gSaveBlock2Ptr
	.word	0x7e04
.L71:
	add	r1, sp, #0xc
	ldr	r2, .L85
	add	r0, r2, #0
	strh	r0, [r1]
	add	r0, r1, #0
	mov	r1, #0xf1
	mov	r2, #0x2
	bl	LoadPalette
.L72:
	ldr	r0, .L85+0x4
	mov	r8, r0
	lsl	r1, r7, #0x2
	add	r0, r1, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r8
	mov	r2, #0x8
	ldrsh	r0, [r0, r2]
	mov	r9, r1
	cmp	r0, #0x1
	beq	.L76	@cond_branch
	cmp	r0, #0x1
	ble	.L75	@cond_branch
	cmp	r0, #0x2
	bne	.LCB861
	b	.L77	@long jump
.LCB861:
	cmp	r0, #0x3
	bne	.LCB863
	b	.L78	@long jump
.LCB863:
.L75:
	mov	r0, #0x0
	mov	r1, #0xaa
	bl	FillWindowPixelBuffer
	mov	r0, #0x1
	mov	r1, #0xaa
	bl	FillWindowPixelBuffer
	ldr	r5, .L85+0x8
	str	r5, [sp]
	mov	r4, #0x1
	neg	r4, r4
	str	r4, [sp, #0x4]
	ldr	r0, .L85+0xc
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	str	r5, [sp]
	str	r4, [sp, #0x4]
	ldr	r0, .L85+0x10
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x0
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x1
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r4, .L85+0x14
	ldr	r5, .L85+0x18
	add	r0, r4, #0
	add	r1, r5, #0
	bl	DrawMainMenuWindowBorder
	add	r4, r4, #0x8
	b	.L82
.L86:
	.align	2, 0
.L85:
	.word	0x547f
	.word	gTasks
	.word	sTextColor_Headers
	.word	gText_MainMenuNewGame
	.word	gText_MainMenuOption
	.word	sWindowTemplates_MainMenu
	.word	0x1d5
.L76:
	mov	r0, #0x2
	mov	r1, #0xaa
	bl	FillWindowPixelBuffer
	mov	r0, #0x3
	mov	r1, #0xaa
	bl	FillWindowPixelBuffer
	mov	r0, #0x4
	mov	r1, #0xaa
	bl	FillWindowPixelBuffer
	ldr	r5, .L87
	str	r5, [sp]
	mov	r4, #0x1
	neg	r4, r4
	str	r4, [sp, #0x4]
	ldr	r0, .L87+0x4
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	str	r5, [sp]
	str	r4, [sp, #0x4]
	ldr	r0, .L87+0x8
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	str	r5, [sp]
	str	r4, [sp, #0x4]
	ldr	r0, .L87+0xc
	str	r0, [sp, #0x8]
	mov	r0, #0x4
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	bl	MainMenu_FormatSavegameText
	mov	r0, #0x2
	bl	PutWindowTilemap
	mov	r0, #0x3
	bl	PutWindowTilemap
	mov	r0, #0x4
	bl	PutWindowTilemap
	mov	r0, #0x2
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x3
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x4
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r4, .L87+0x10
	ldr	r5, .L87+0x14
	add	r0, r4, #0
	add	r1, r5, #0
	bl	DrawMainMenuWindowBorder
	add	r0, r4, #0
	add	r0, r0, #0x8
	add	r1, r5, #0
	bl	DrawMainMenuWindowBorder
	add	r4, r4, #0x10
	b	.L82
.L88:
	.align	2, 0
.L87:
	.word	sTextColor_Headers
	.word	gText_MainMenuContinue
	.word	gText_MainMenuNewGame
	.word	gText_MainMenuOption
	.word	sWindowTemplates_MainMenu+0x10
	.word	0x1d5
.L77:
	mov	r0, #0x2
	mov	r1, #0xaa
	bl	FillWindowPixelBuffer
	mov	r0, #0x3
	mov	r1, #0xaa
	bl	FillWindowPixelBuffer
	mov	r0, #0x4
	mov	r1, #0xaa
	bl	FillWindowPixelBuffer
	mov	r0, #0x5
	mov	r1, #0xaa
	bl	FillWindowPixelBuffer
	ldr	r5, .L89
	str	r5, [sp]
	mov	r4, #0x1
	neg	r4, r4
	str	r4, [sp, #0x4]
	ldr	r0, .L89+0x4
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	str	r5, [sp]
	str	r4, [sp, #0x4]
	ldr	r0, .L89+0x8
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	str	r5, [sp]
	str	r4, [sp, #0x4]
	ldr	r0, .L89+0xc
	str	r0, [sp, #0x8]
	mov	r0, #0x4
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	str	r5, [sp]
	str	r4, [sp, #0x4]
	ldr	r0, .L89+0x10
	str	r0, [sp, #0x8]
	mov	r0, #0x5
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	bl	MainMenu_FormatSavegameText
	mov	r0, #0x2
	bl	PutWindowTilemap
	mov	r0, #0x3
	bl	PutWindowTilemap
	mov	r0, #0x4
	bl	PutWindowTilemap
	mov	r0, #0x5
	bl	PutWindowTilemap
	mov	r0, #0x2
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x3
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x4
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x5
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r4, .L89+0x14
	ldr	r5, .L89+0x18
	add	r0, r4, #0
	add	r1, r5, #0
	bl	DrawMainMenuWindowBorder
	add	r0, r4, #0
	add	r0, r0, #0x8
	add	r1, r5, #0
	bl	DrawMainMenuWindowBorder
	add	r0, r4, #0
	add	r0, r0, #0x10
	add	r1, r5, #0
	bl	DrawMainMenuWindowBorder
	add	r4, r4, #0x18
.L82:
	add	r0, r4, #0
	add	r1, r5, #0
	bl	DrawMainMenuWindowBorder
	b	.L73
.L90:
	.align	2, 0
.L89:
	.word	sTextColor_Headers
	.word	gText_MainMenuContinue
	.word	gText_MainMenuNewGame
	.word	gText_MainMenuMysteryGift
	.word	gText_MainMenuOption
	.word	sWindowTemplates_MainMenu+0x10
	.word	0x1d5
.L78:
	mov	r0, #0x2
	mov	r1, #0xaa
	bl	FillWindowPixelBuffer
	mov	r0, #0x3
	mov	r1, #0xaa
	bl	FillWindowPixelBuffer
	mov	r0, #0x4
	mov	r1, #0xaa
	bl	FillWindowPixelBuffer
	mov	r0, #0x5
	mov	r1, #0xaa
	bl	FillWindowPixelBuffer
	mov	r0, #0x6
	mov	r1, #0xaa
	bl	FillWindowPixelBuffer
	ldr	r5, .L91
	str	r5, [sp]
	mov	r4, #0x1
	neg	r4, r4
	str	r4, [sp, #0x4]
	ldr	r0, .L91+0x4
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	str	r5, [sp]
	str	r4, [sp, #0x4]
	ldr	r0, .L91+0x8
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	str	r5, [sp]
	str	r4, [sp, #0x4]
	ldr	r0, .L91+0xc
	str	r0, [sp, #0x8]
	mov	r0, #0x4
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	str	r5, [sp]
	str	r4, [sp, #0x4]
	ldr	r0, .L91+0x10
	str	r0, [sp, #0x8]
	mov	r0, #0x5
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	str	r5, [sp]
	str	r4, [sp, #0x4]
	ldr	r0, .L91+0x14
	str	r0, [sp, #0x8]
	mov	r0, #0x6
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	bl	MainMenu_FormatSavegameText
	mov	r0, #0x2
	bl	PutWindowTilemap
	mov	r0, #0x3
	bl	PutWindowTilemap
	mov	r0, #0x4
	bl	PutWindowTilemap
	mov	r0, #0x5
	bl	PutWindowTilemap
	mov	r0, #0x6
	bl	PutWindowTilemap
	mov	r0, #0x2
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x3
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x4
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x5
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x6
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r5, .L91+0x18
	ldr	r4, .L91+0x1c
	add	r0, r5, #0
	add	r1, r4, #0
	bl	DrawMainMenuWindowBorder
	add	r0, r5, #0
	add	r0, r0, #0x8
	add	r1, r4, #0
	bl	DrawMainMenuWindowBorder
	add	r0, r5, #0
	add	r0, r0, #0x10
	add	r1, r4, #0
	bl	DrawMainMenuWindowBorder
	add	r0, r5, #0
	add	r0, r0, #0x18
	add	r1, r4, #0
	bl	DrawMainMenuWindowBorder
	add	r0, r5, #0
	add	r0, r0, #0x20
	add	r1, r4, #0
	bl	DrawMainMenuWindowBorder
	ldr	r0, .L91+0x20
	ldr	r4, .L91+0x24
	add	r1, r4, #0
	bl	AddScrollIndicatorArrowPair
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r6, #0x1a]
	mov	r0, #0x1a
	ldrsh	r1, [r6, r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r8
	ldr	r1, .L91+0x28
	str	r1, [r0]
	ldrh	r0, [r4]
	cmp	r0, #0x4
	bne	.L73	@cond_branch
	mov	r4, #0x80
	lsl	r4, r4, #0x6
	mov	r0, #0x0
	add	r1, r4, #0
	mov	r2, #0x1
	bl	ChangeBgY
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r2, #0x1
	bl	ChangeBgY
	mov	r0, #0x1
	strh	r0, [r6, #0x1c]
	mov	r2, #0x1a
	ldrsh	r1, [r6, r2]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r8
	mov	r1, #0x1
	strh	r1, [r0, #0x26]
.L73:
	ldr	r0, .L91+0x2c
	mov	r2, r9
	add	r1, r2, r7
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L91+0x30
	str	r0, [r1]
.L70:
	add	sp, sp, #0x10
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L92:
	.align	2, 0
.L91:
	.word	sTextColor_Headers
	.word	gText_MainMenuContinue
	.word	gText_MainMenuNewGame
	.word	gText_MainMenuMysteryGift2
	.word	gText_MainMenuMysteryEvents
	.word	gText_MainMenuOption
	.word	sWindowTemplates_MainMenu+0x10
	.word	0x1d5
	.word	sScrollArrowsTemplate_MainMenu
	.word	sCurrItemAndOptionMenuCheck
	.word	Task_ScrollIndicatorArrowPairOnMainMenu
	.word	gTasks
	.word	Task_HighlightSelectedMainMenuItem
.Lfe10:
	.size	 Task_DisplayMainMenu,.Lfe10-Task_DisplayMainMenu
	.align	2, 0
	.type	 Task_HighlightSelectedMainMenuItem,function
	.thumb_func
Task_HighlightSelectedMainMenuItem:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L94
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	ldrb	r0, [r4, #0x8]
	ldrb	r1, [r4, #0xa]
	mov	r3, #0x24
	ldrsh	r2, [r4, r3]
	bl	HighlightSelectedMainMenuItem
	ldr	r0, .L94+0x4
	str	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L95:
	.align	2, 0
.L94:
	.word	gTasks
	.word	Task_HandleMainMenuInput
.Lfe11:
	.size	 Task_HighlightSelectedMainMenuItem,.Lfe11-Task_HighlightSelectedMainMenuItem
	.align	2, 0
	.type	 HandleMainMenuInput,function
	.thumb_func
HandleMainMenuInput:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r4, r1, #0x3
	ldr	r7, .L108
	add	r5, r4, r7
	ldr	r1, .L108+0x4
	ldrh	r2, [r1, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L97	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	bl	IsWirelessAdapterConnected
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	add	r0, r7, #0
	sub	r0, r0, #0x8
	add	r0, r4, r0
	ldr	r1, .L108+0x8
	str	r1, [r0]
	b	.L98
.L109:
	.align	2, 0
.L108:
	.word	gTasks+0x8
	.word	gMain
	.word	Task_HandleMainMenuAPressed
.L97:
	mov	r0, #0x2
	and	r0, r0, r2
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0
	beq	.L99	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	neg	r0, r0
	ldr	r1, .L110
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	mov	r0, #0x40
	mov	r1, #0xf0
	bl	SetGpuReg
	mov	r0, #0x44
	mov	r1, #0xa0
	bl	SetGpuReg
	add	r0, r7, #0
	sub	r0, r0, #0x8
	add	r0, r4, r0
	ldr	r1, .L110+0x4
	str	r1, [r0]
	b	.L98
.L111:
	.align	2, 0
.L110:
	.word	0xffff
	.word	Task_HandleMainMenuBPressed
.L99:
	mov	r0, #0x40
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L101	@cond_branch
	mov	r0, #0x2
	ldrsh	r2, [r5, r0]
	cmp	r2, #0
	ble	.L101	@cond_branch
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x3
	bne	.L102	@cond_branch
	mov	r1, #0x1c
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	bne	.L102	@cond_branch
	cmp	r2, #0x1
	bne	.L102	@cond_branch
	mov	r4, #0x80
	lsl	r4, r4, #0x6
	mov	r0, #0x0
	add	r1, r4, #0
	mov	r2, #0x2
	bl	ChangeBgY
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r2, #0x2
	bl	ChangeBgY
	mov	r2, #0x1a
	ldrsh	r1, [r5, r2]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r7, r0
	strh	r6, [r5, #0x1c]
	strh	r6, [r0, #0x1e]
.L102:
	ldrh	r0, [r5, #0x2]
	sub	r0, r0, #0x1
	b	.L107
.L101:
	ldrh	r1, [r1, #0x2e]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L98	@cond_branch
	mov	r0, #0x2
	ldrsh	r1, [r5, r0]
	mov	r2, #0x18
	ldrsh	r0, [r5, r2]
	sub	r0, r0, #0x1
	cmp	r1, r0
	bge	.L98	@cond_branch
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x3
	bne	.L105	@cond_branch
	mov	r2, #0x2
	ldrsh	r0, [r5, r2]
	cmp	r0, #0x3
	bne	.L105	@cond_branch
	mov	r1, #0x1c
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L105	@cond_branch
	mov	r4, #0x80
	lsl	r4, r4, #0x6
	mov	r0, #0x0
	add	r1, r4, #0
	mov	r2, #0x1
	bl	ChangeBgY
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r2, #0x1
	bl	ChangeBgY
	ldr	r2, .L112
	mov	r0, #0x1a
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	mov	r1, #0x1
	strh	r1, [r5, #0x1c]
	mov	r1, #0x1
	strh	r1, [r0, #0x26]
.L105:
	ldrh	r0, [r5, #0x2]
	add	r0, r0, #0x1
.L107:
	strh	r0, [r5, #0x2]
	ldr	r1, .L112+0x4
	strh	r0, [r1]
	mov	r0, #0x1
	b	.L106
.L113:
	.align	2, 0
.L112:
	.word	gTasks
	.word	sCurrItemAndOptionMenuCheck
.L98:
	mov	r0, #0x0
.L106:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe12:
	.size	 HandleMainMenuInput,.Lfe12-HandleMainMenuInput
	.align	2, 0
	.type	 Task_HandleMainMenuInput,function
	.thumb_func
Task_HandleMainMenuInput:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	HandleMainMenuInput
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L115	@cond_branch
	ldr	r0, .L116
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L116+0x4
	str	r0, [r1]
.L115:
	pop	{r4}
	pop	{r0}
	bx	r0
.L117:
	.align	2, 0
.L116:
	.word	gTasks
	.word	Task_HighlightSelectedMainMenuItem
.Lfe13:
	.size	 Task_HandleMainMenuInput,.Lfe13-Task_HandleMainMenuInput
	.align	2, 0
	.type	 Task_HandleMainMenuAPressed,function
	.thumb_func
Task_HandleMainMenuAPressed:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L178
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB1622
	b	.L118	@long jump
.LCB1622:
	ldr	r2, .L178+0x4
	lsl	r1, r6, #0x2
	add	r0, r1, r6
	lsl	r0, r0, #0x3
	add	r4, r0, r2
	mov	r2, #0x8
	ldrsh	r0, [r4, r2]
	add	r7, r1, #0
	cmp	r0, #0x3
	bne	.L120	@cond_branch
	ldrh	r0, [r4, #0x22]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	RemoveScrollIndicatorArrowPair
.L120:
	mov	r0, #0x0
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	mov	r0, #0x1
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	mov	r0, #0x2
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	mov	r0, #0x3
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	mov	r0, #0x4
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	mov	r0, #0x5
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	mov	r0, #0x6
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	mov	r0, #0x7
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	bl	IsWirelessAdapterConnected
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	mov	r3, #0x8
	ldrsh	r0, [r4, r3]
	cmp	r0, #0x1
	beq	.L129	@cond_branch
	cmp	r0, #0x1
	ble	.L123	@cond_branch
	cmp	r0, #0x2
	beq	.L137	@cond_branch
	cmp	r0, #0x3
	beq	.L147	@cond_branch
.L123:
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L151	@cond_branch
	cmp	r0, #0x1
	bne	.L151	@cond_branch
	b	.L161
.L179:
	.align	2, 0
.L178:
	.word	gPaletteFade
	.word	gTasks
.L129:
	mov	r2, #0xa
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x1
	beq	.L151	@cond_branch
	cmp	r0, #0x1
	ble	.L150	@cond_branch
	cmp	r0, #0x2
	bne	.L150	@cond_branch
	b	.L161
.L137:
	mov	r3, #0xa
	ldrsh	r0, [r4, r3]
	cmp	r0, #0x1
	beq	.L151	@cond_branch
	cmp	r0, #0x1
	ble	.L150	@cond_branch
	cmp	r0, #0x2
	beq	.L142	@cond_branch
	cmp	r0, #0x3
	beq	.L161	@cond_branch
	b	.L150
.L142:
	mov	r5, #0x3
	cmp	r2, #0
	bne	.L121	@cond_branch
	mov	r5, #0x6
	strh	r2, [r4, #0x8]
	b	.L121
.L147:
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x4
	bhi	.L150	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L180
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L181:
	.align	2, 0
.L180:
	.word	.L162
	.align	2, 0
	.align	2, 0
.L162:
	.word	.L150
	.word	.L151
	.word	.L152
	.word	.L158
	.word	.L161
.L150:
	mov	r5, #0x1
	b	.L121
.L151:
	mov	r5, #0x0
	b	.L121
.L152:
	ldr	r0, .L182
	add	r1, r7, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r3, #0x26
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	beq	.L153	@cond_branch
	mov	r5, #0x3
	cmp	r2, #0
	bne	.L121	@cond_branch
	mov	r5, #0x6
	strh	r2, [r1, #0x8]
	b	.L121
.L183:
	.align	2, 0
.L182:
	.word	gTasks
.L153:
	cmp	r2, #0
	beq	.L156	@cond_branch
	mov	r5, #0x6
	mov	r0, #0x1
	strh	r0, [r1, #0x8]
	b	.L121
.L156:
	mov	r5, #0x5
	b	.L121
.L158:
	cmp	r2, #0
	beq	.L159	@cond_branch
	mov	r5, #0x6
	ldr	r0, .L184
	add	r1, r7, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x2
	strh	r0, [r1, #0x8]
	b	.L121
.L185:
	.align	2, 0
.L184:
	.word	gTasks
.L159:
	mov	r5, #0x4
	b	.L121
.L161:
	mov	r5, #0x2
.L121:
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	cmp	r5, #0x6
	bhi	.L167	@cond_branch
	lsl	r0, r5, #0x2
	ldr	r1, .L186
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L187:
	.align	2, 0
.L186:
	.word	.L174
	.align	2, 0
	.align	2, 0
.L174:
	.word	.L167
	.word	.L168
	.word	.L169
	.word	.L170
	.word	.L171
	.word	.L172
	.word	.L173
.L167:
	ldr	r0, .L188
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L188+0x4
	strh	r1, [r0]
	ldr	r1, .L188+0x8
	add	r0, r7, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L188+0xc
	str	r1, [r0]
	b	.L165
.L189:
	.align	2, 0
.L188:
	.word	gPlttBufferUnfaded
	.word	gPlttBufferFaded
	.word	gTasks
	.word	Task_NewGameBirchSpeech_Init
.L168:
	ldr	r0, .L190
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L190+0x4
	strh	r1, [r0]
	ldr	r0, .L190+0x8
	b	.L177
.L191:
	.align	2, 0
.L190:
	.word	gPlttBufferUnfaded
	.word	gPlttBufferFaded
	.word	CB2_ContinueSavedGame
.L169:
	ldr	r0, .L192
	ldr	r1, .L192+0x4
	str	r1, [r0, #0x8]
	ldr	r0, .L192+0x8
	b	.L177
.L193:
	.align	2, 0
.L192:
	.word	gMain
	.word	CB2_ReinitMainMenu
	.word	CB2_InitOptionMenu
.L170:
	ldr	r0, .L194
	b	.L177
.L195:
	.align	2, 0
.L194:
	.word	c2_mystery_gift
.L171:
	ldr	r0, .L196
	b	.L177
.L197:
	.align	2, 0
.L196:
	.word	CB2_InitMysteryEventMenu
.L172:
	ldr	r0, .L198
.L177:
	bl	SetMainCallback2
	add	r0, r6, #0
	bl	DestroyTask
	b	.L165
.L199:
	.align	2, 0
.L198:
	.word	c2_ereader
.L173:
	ldr	r1, .L200
	add	r0, r7, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r4, #0x0
	strh	r4, [r0, #0xa]
	ldr	r1, .L200+0x4
	str	r1, [r0]
	ldr	r0, .L200+0x8
	mov	r2, #0xf1
	lsl	r2, r2, #0x1
	add	r0, r0, r2
	ldr	r1, .L200+0xc
	strh	r1, [r0]
	ldr	r0, .L200+0x10
	add	r0, r0, r2
	strh	r1, [r0]
	mov	r0, #0x18
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1a
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x14
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x16
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x10
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x12
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1
	neg	r0, r0
	str	r4, [sp]
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	b	.L118
.L201:
	.align	2, 0
.L200:
	.word	gTasks
	.word	Task_DisplayMainMenuInvalidActionError
	.word	gPlttBufferUnfaded
	.word	0x7fff
	.word	gPlttBufferFaded
.L165:
	bl	FreeAllWindowBuffers
	cmp	r5, #0x2
	beq	.L175	@cond_branch
	ldr	r1, .L202
	mov	r0, #0x0
	strh	r0, [r1]
	b	.L118
.L203:
	.align	2, 0
.L202:
	.word	sCurrItemAndOptionMenuCheck
.L175:
	ldr	r0, .L204
	ldrh	r1, [r0]
	mov	r3, #0x80
	lsl	r3, r3, #0x8
	add	r2, r3, #0
	orr	r1, r1, r2
	strh	r1, [r0]
.L118:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L205:
	.align	2, 0
.L204:
	.word	sCurrItemAndOptionMenuCheck
.Lfe14:
	.size	 Task_HandleMainMenuAPressed,.Lfe14-Task_HandleMainMenuAPressed
	.align	2, 0
	.type	 Task_HandleMainMenuBPressed,function
	.thumb_func
Task_HandleMainMenuBPressed:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r5, r2, #0
	ldr	r0, .L209
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L207	@cond_branch
	ldr	r0, .L209+0x4
	lsl	r1, r2, #0x2
	add	r1, r1, r2
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r2, #0x8
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x3
	bne	.L208	@cond_branch
	ldrh	r0, [r1, #0x22]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	RemoveScrollIndicatorArrowPair
.L208:
	ldr	r0, .L209+0x8
	strh	r4, [r0]
	bl	FreeAllWindowBuffers
	ldr	r0, .L209+0xc
	bl	SetMainCallback2
	add	r0, r5, #0
	bl	DestroyTask
.L207:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L210:
	.align	2, 0
.L209:
	.word	gPaletteFade
	.word	gTasks
	.word	sCurrItemAndOptionMenuCheck
	.word	CB2_InitTitleScreen
.Lfe15:
	.size	 Task_HandleMainMenuBPressed,.Lfe15-Task_HandleMainMenuBPressed
	.align	2, 0
	.type	 Task_DisplayMainMenuInvalidActionError,function
	.thumb_func
Task_DisplayMainMenuInvalidActionError:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L231
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r0, #0xa
	ldrsh	r1, [r4, r0]
	cmp	r1, #0x1
	beq	.L221	@cond_branch
	cmp	r1, #0x1
	bgt	.L229	@cond_branch
	cmp	r1, #0
	beq	.L213	@cond_branch
	b	.L212
.L232:
	.align	2, 0
.L231:
	.word	gTasks
.L229:
	cmp	r1, #0x2
	beq	.L223	@cond_branch
	cmp	r1, #0x3
	beq	.L225	@cond_branch
	b	.L212
.L213:
	mov	r0, #0x1e
	str	r0, [sp]
	mov	r0, #0x14
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L216	@cond_branch
	cmp	r0, #0x1
	bgt	.L220	@cond_branch
	cmp	r0, #0
	beq	.L215	@cond_branch
	b	.L214
.L220:
	cmp	r0, #0x2
	beq	.L217	@cond_branch
	b	.L214
.L215:
	ldr	r0, .L233
	bl	CreateMainMenuErrorWindow
	b	.L214
.L234:
	.align	2, 0
.L233:
	.word	gText_WirelessNotConnected
.L216:
	ldr	r0, .L235
	bl	CreateMainMenuErrorWindow
	b	.L214
.L236:
	.align	2, 0
.L235:
	.word	gText_MysteryGiftCantUse
.L217:
	ldr	r0, .L237
	bl	CreateMainMenuErrorWindow
.L214:
	ldr	r0, .L237+0x4
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r1, #0xa]
	b	.L212
.L238:
	.align	2, 0
.L237:
	.word	gText_MysteryEventsCantUse
	.word	gTasks
.L221:
	ldr	r0, .L239
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	b	.L230
.L240:
	.align	2, 0
.L239:
	.word	gPaletteFade
.L223:
	bl	RunTextPrinters
	mov	r0, #0x7
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
.L230:
	cmp	r0, #0
	bne	.L212	@cond_branch
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	b	.L212
.L225:
	ldr	r0, .L241
	ldrh	r0, [r0, #0x2e]
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L212	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L241+0x4
	str	r0, [r4]
.L212:
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L242:
	.align	2, 0
.L241:
	.word	gMain
	.word	Task_HandleMainMenuBPressed
.Lfe16:
	.size	 Task_DisplayMainMenuInvalidActionError,.Lfe16-Task_DisplayMainMenuInvalidActionError
	.align	2, 0
	.type	 HighlightSelectedMainMenuItem,function
	.thumb_func
HighlightSelectedMainMenuItem:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	lsl	r2, r2, #0x10
	lsr	r6, r2, #0x10
	ldr	r1, .L287
	mov	r0, #0x40
	bl	SetGpuReg
	cmp	r5, #0x1
	beq	.L252	@cond_branch
	cmp	r5, #0x1
	ble	.L246	@cond_branch
	cmp	r5, #0x2
	beq	.L260	@cond_branch
	cmp	r5, #0x3
	beq	.L269	@cond_branch
.L246:
	cmp	r4, #0
	beq	.L249	@cond_branch
	cmp	r4, #0x1
	beq	.L250	@cond_branch
.L249:
	ldr	r1, .L287+0x4
	b	.L286
.L288:
	.align	2, 0
.L287:
	.word	0x9e7
	.word	0x11f
.L250:
	ldr	r1, .L289
	b	.L286
.L290:
	.align	2, 0
.L289:
	.word	0x213f
.L252:
	cmp	r4, #0x1
	beq	.L256	@cond_branch
	cmp	r4, #0x1
	ble	.L255	@cond_branch
	cmp	r4, #0x2
	beq	.L257	@cond_branch
.L255:
	ldr	r1, .L291
	b	.L286
.L292:
	.align	2, 0
.L291:
	.word	0x13f
.L256:
	ldr	r1, .L293
	b	.L286
.L294:
	.align	2, 0
.L293:
	.word	0x415f
.L257:
	ldr	r1, .L295
	b	.L286
.L296:
	.align	2, 0
.L295:
	.word	0x617f
.L260:
	cmp	r4, #0x1
	beq	.L264	@cond_branch
	cmp	r4, #0x1
	ble	.L263	@cond_branch
	cmp	r4, #0x2
	beq	.L265	@cond_branch
	cmp	r4, #0x3
	beq	.L280	@cond_branch
.L263:
	ldr	r1, .L297
	b	.L286
.L298:
	.align	2, 0
.L297:
	.word	0x13f
.L264:
	ldr	r1, .L299
	b	.L286
.L300:
	.align	2, 0
.L299:
	.word	0x415f
.L265:
	ldr	r1, .L301
	b	.L286
.L302:
	.align	2, 0
.L301:
	.word	0x617f
.L269:
	cmp	r4, #0x4
	bhi	.L272	@cond_branch
	lsl	r0, r4, #0x2
	ldr	r1, .L303
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L304:
	.align	2, 0
.L303:
	.word	.L283
	.align	2, 0
	.align	2, 0
.L283:
	.word	.L272
	.word	.L273
	.word	.L276
	.word	.L279
	.word	.L282
.L272:
	ldr	r1, .L305
	b	.L286
.L306:
	.align	2, 0
.L305:
	.word	0x13f
.L273:
	cmp	r6, #0
	beq	.L274	@cond_branch
	ldr	r1, .L307
	b	.L286
.L308:
	.align	2, 0
.L307:
	.word	0x213f
.L274:
	ldr	r1, .L309
	b	.L286
.L310:
	.align	2, 0
.L309:
	.word	0x415f
.L276:
	cmp	r6, #0
	beq	.L277	@cond_branch
	ldr	r1, .L311
	b	.L286
.L312:
	.align	2, 0
.L311:
	.word	0x415f
.L277:
	ldr	r1, .L313
	b	.L286
.L314:
	.align	2, 0
.L313:
	.word	0x617f
.L279:
	cmp	r6, #0
	beq	.L280	@cond_branch
	ldr	r1, .L315
	b	.L286
.L316:
	.align	2, 0
.L315:
	.word	0x617f
.L280:
	ldr	r1, .L317
.L286:
	mov	r0, #0x44
	bl	SetGpuReg
	b	.L244
.L318:
	.align	2, 0
.L317:
	.word	0x819f
.L282:
	ldr	r1, .L319
	mov	r0, #0x44
	bl	SetGpuReg
.L244:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L320:
	.align	2, 0
.L319:
	.word	0x819f
.Lfe17:
	.size	 HighlightSelectedMainMenuItem,.Lfe17-HighlightSelectedMainMenuItem
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_Init,function
	.thumb_func
Task_NewGameBirchSpeech_Init:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	ldr	r0, .L322
	bl	InitBgFromTemplate
	mov	r0, #0x40
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x44
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x48
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x52
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x54
	mov	r1, #0x0
	bl	SetGpuReg
	ldr	r0, .L322+0x4
	mov	r1, #0xc0
	lsl	r1, r1, #0x13
	bl	LZ77UnCompVram
	ldr	r0, .L322+0x8
	ldr	r1, .L322+0xc
	bl	LZ77UnCompVram
	ldr	r0, .L322+0x10
	mov	r1, #0x0
	mov	r2, #0x40
	bl	LoadPalette
	ldr	r0, .L322+0x14
	mov	r1, #0x1
	mov	r2, #0x10
	bl	LoadPalette
	bl	ScanlineEffect_Stop
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	bl	ResetAllPicSprites
	add	r0, r4, #0
	bl	AddBirchSpeechObjects
	mov	r0, #0x1
	neg	r0, r0
	mov	r5, #0x0
	str	r5, [sp]
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r1, .L322+0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r5, [r0, #0x10]
	ldr	r1, .L322+0x1c
	str	r1, [r0]
	mov	r1, #0xff
	strh	r1, [r0, #0xc]
	strh	r1, [r0, #0xe]
	mov	r1, #0xd8
	strh	r1, [r0, #0x16]
	ldr	r0, .L322+0x20
	bl	PlayBGM
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L323:
	.align	2, 0
.L322:
	.word	sBirchBgTemplate
	.word	sBirchSpeechShadowGfx
	.word	sBirchSpeechBgMap
	.word	0x6003800
	.word	sBirchSpeechBgPals
	.word	sBirchSpeechPlatformBlackPal
	.word	gTasks
	.word	Task_NewGameBirchSpeech_WaitToShowBirch
	.word	0x159
.Lfe18:
	.size	 Task_NewGameBirchSpeech_Init,.Lfe18-Task_NewGameBirchSpeech_Init
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_WaitToShowBirch,function
	.thumb_func
Task_NewGameBirchSpeech_WaitToShowBirch:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L327
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	ldrh	r1, [r4, #0x16]
	mov	r2, #0x16
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	beq	.L325	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r4, #0x16]
	b	.L326
.L328:
	.align	2, 0
.L327:
	.word	gTasks
.L325:
	ldrb	r0, [r4, #0x18]
	ldr	r2, .L329
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	mov	r0, #0x88
	strh	r0, [r1, #0x20]
	mov	r0, #0x3c
	strh	r0, [r1, #0x22]
	add	r3, r1, #0
	add	r3, r3, #0x3e
	ldrb	r2, [r3]
	sub	r0, r0, #0x41
	and	r0, r0, r2
	strb	r0, [r3]
	ldrb	r2, [r1, #0x1]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r1, #0x1]
	add	r0, r5, #0
	mov	r1, #0xa
	bl	NewGameBirchSpeech_StartFadeInTarget1OutTarget2
	add	r0, r5, #0
	mov	r1, #0x14
	bl	NewGameBirchSpeech_StartFadePlatformOut
	mov	r0, #0x50
	strh	r0, [r4, #0x16]
	ldr	r0, .L329+0x4
	str	r0, [r4]
.L326:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L330:
	.align	2, 0
.L329:
	.word	gSprites
	.word	Task_NewGameBirchSpeech_WaitForSpriteFadeInWelcome
.Lfe19:
	.size	 Task_NewGameBirchSpeech_WaitToShowBirch,.Lfe19-Task_NewGameBirchSpeech_WaitToShowBirch
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_WaitForSpriteFadeInWelcome,function
	.thumb_func
Task_NewGameBirchSpeech_WaitForSpriteFadeInWelcome:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L335
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L332	@cond_branch
	ldr	r2, .L335+0x4
	mov	r1, #0x18
	ldrsh	r0, [r4, r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r2, [r1, #0x1]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x1]
	ldrh	r1, [r4, #0x16]
	mov	r2, #0x16
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	beq	.L333	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r4, #0x16]
	b	.L332
.L336:
	.align	2, 0
.L335:
	.word	gTasks
	.word	gSprites
.L333:
	ldr	r0, .L337
	bl	InitWindows
	mov	r0, #0x0
	mov	r1, #0xf3
	bl	LoadMainMenuWindowFrameTiles
	mov	r0, #0x0
	mov	r1, #0xfc
	mov	r2, #0xf0
	bl	LoadMessageBoxGfx
	mov	r0, #0x0
	mov	r1, #0x1
	bl	NewGameBirchSpeech_ShowDialogueWindow
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x0
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	NewGameBirchSpeech_ClearWindow
	ldr	r0, .L337+0x4
	ldr	r1, .L337+0x8
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	bl	AddTextPrinterForMessage
	ldr	r0, .L337+0xc
	str	r0, [r4]
.L332:
	pop	{r4}
	pop	{r0}
	bx	r0
.L338:
	.align	2, 0
.L337:
	.word	gNewGameBirchSpeechTextWindows
	.word	gStringVar4
	.word	gText_Birch_Welcome
	.word	Task_NewGameBirchSpeech_AndYouAre
.Lfe20:
	.size	 Task_NewGameBirchSpeech_WaitForSpriteFadeInWelcome,.Lfe20-Task_NewGameBirchSpeech_WaitForSpriteFadeInWelcome
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_ThisIsAPokemon,function
	.thumb_func
Task_NewGameBirchSpeech_ThisIsAPokemon:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L341
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L340	@cond_branch
	bl	RunTextPrintersAndIsPrinter0Active
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L340	@cond_branch
	ldr	r1, .L341+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L341+0x8
	str	r1, [r0]
	ldr	r0, .L341+0xc
	ldr	r1, .L341+0x10
	bl	StringExpandPlaceholders
	ldr	r1, .L341+0x14
	mov	r0, #0x1
	bl	AddTextPrinterWithCallbackForMessage
	ldr	r0, .L341+0x18
	strb	r4, [r0]
.L340:
	pop	{r4}
	pop	{r0}
	bx	r0
.L342:
	.align	2, 0
.L341:
	.word	gPaletteFade
	.word	gTasks
	.word	Task_NewGameBirchSpeech_MainSpeech
	.word	gStringVar4
	.word	gText_ThisIsAPokemon
	.word	NewGameBirchSpeech_ShowPokeBallPrinterCallback
	.word	sBirchSpeechMainTaskId
.Lfe21:
	.size	 Task_NewGameBirchSpeech_ThisIsAPokemon,.Lfe21-Task_NewGameBirchSpeech_ThisIsAPokemon
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_MainSpeech,function
	.thumb_func
Task_NewGameBirchSpeech_MainSpeech:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	RunTextPrintersAndIsPrinter0Active
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L344	@cond_branch
	ldr	r0, .L345
	ldr	r1, .L345+0x4
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	bl	AddTextPrinterForMessage
	ldr	r1, .L345+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L345+0xc
	str	r1, [r0]
.L344:
	pop	{r4}
	pop	{r0}
	bx	r0
.L346:
	.align	2, 0
.L345:
	.word	gStringVar4
	.word	gText_Birch_MainSpeech
	.word	gTasks
	.word	Task_NewGameBirchSpeech_AndYouAre
.Lfe22:
	.size	 Task_NewGameBirchSpeech_MainSpeech,.Lfe22-Task_NewGameBirchSpeech_MainSpeech
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_ChoseDifficulty,function
	.thumb_func
Task_NewGameBirchSpeech_ChoseDifficulty:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	bl	NewGameBirchSpeech_ClearWindow
	ldr	r0, .L348
	ldr	r1, .L348+0x4
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	bl	AddTextPrinterForMessage
	ldr	r1, .L348+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L348+0xc
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L349:
	.align	2, 0
.L348:
	.word	gStringVar4
	.word	gText_Birch_ChoseDifficulty
	.word	gTasks
	.word	Task_NewGameBirchSpeech_YesNoDifficulty
.Lfe23:
	.size	 Task_NewGameBirchSpeech_ChoseDifficulty,.Lfe23-Task_NewGameBirchSpeech_ChoseDifficulty
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_YesNoDifficulty,function
	.thumb_func
Task_NewGameBirchSpeech_YesNoDifficulty:
	push	{r4, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	RunTextPrintersAndIsPrinter0Active
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L351	@cond_branch
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0xf
	str	r0, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0xf3
	mov	r3, #0xdf
	bl	CreateYesNoMenuParameterized
	ldr	r1, .L352
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L352+0x4
	str	r1, [r0]
.L351:
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L353:
	.align	2, 0
.L352:
	.word	gTasks
	.word	Task_NewGameBirchSpeech_ProcessDifficultyYesNoMenu
.Lfe24:
	.size	 Task_NewGameBirchSpeech_YesNoDifficulty,.Lfe24-Task_NewGameBirchSpeech_YesNoDifficulty
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_ProcessDifficultyYesNoMenu,function
	.thumb_func
Task_NewGameBirchSpeech_ProcessDifficultyYesNoMenu:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L356	@cond_branch
	cmp	r1, #0
	bgt	.L361	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L358	@cond_branch
	b	.L355
.L361:
	cmp	r1, #0x1
	beq	.L358	@cond_branch
	b	.L355
.L356:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r2, .L362
	ldr	r0, .L362+0x4
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	mov	r0, #0xc
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r2, [r0, #0x1]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0, #0x1]
	add	r0, r5, #0
	mov	r1, #0x2
	bl	NewGameBirchSpeech_StartFadeOutTarget1InTarget2
	add	r0, r5, #0
	mov	r1, #0x1
	bl	NewGameBirchSpeech_StartFadePlatformIn
	ldr	r0, .L362+0x8
	str	r0, [r4]
	b	.L355
.L363:
	.align	2, 0
.L362:
	.word	gSprites
	.word	gTasks
	.word	Task_NewGameBirchSpeech_AndYouAre
.L358:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L364
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L364+0x4
	str	r0, [r1]
.L355:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L365:
	.align	2, 0
.L364:
	.word	gTasks
	.word	Task_NewGameBirchSpeech_BoyOrGirl
.Lfe25:
	.size	 Task_NewGameBirchSpeech_ProcessDifficultyYesNoMenu,.Lfe25-Task_NewGameBirchSpeech_ProcessDifficultyYesNoMenu
	.align	2, 0
	.type	 Task_NewGameBirchSpeechSub_InitPokeBall,function
	.thumb_func
Task_NewGameBirchSpeechSub_InitPokeBall:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x14
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r6, .L367
	ldr	r0, .L367+0x4
	mov	r8, r0
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r6
	ldrb	r0, [r0, #0x1a]
	ldr	r1, .L367+0x8
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r1
	mov	r5, #0x0
	mov	r1, #0x64
	strh	r1, [r2, #0x20]
	mov	r1, #0x4b
	strh	r1, [r2, #0x22]
	mov	r1, #0x3e
	add	r1, r1, r2
	mov	ip, r1
	ldrb	r3, [r1]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r3
	mov	r3, ip
	strb	r1, [r3]
	strh	r5, [r2, #0x2e]
	ldrb	r1, [r2, #0x5]
	lsr	r1, r1, #0x4
	str	r5, [sp]
	str	r5, [sp, #0x4]
	mov	r2, #0x20
	str	r2, [sp, #0x8]
	ldr	r2, .L367+0xc
	str	r2, [sp, #0xc]
	mov	r2, #0x1
	str	r2, [sp, #0x10]
	mov	r2, #0x70
	mov	r3, #0x3a
	bl	CreatePokeballSpriteToReleaseMon
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r6
	ldr	r1, .L367+0x10
	str	r1, [r0]
	mov	r0, r8
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r6
	strh	r5, [r0, #0x16]
	add	sp, sp, #0x14
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L368:
	.align	2, 0
.L367:
	.word	gTasks
	.word	sBirchSpeechMainTaskId
	.word	gSprites
	.word	0xffff
	.word	Task_NewGameBirchSpeechSub_WaitForLotad
.Lfe26:
	.size	 Task_NewGameBirchSpeechSub_InitPokeBall,.Lfe26-Task_NewGameBirchSpeechSub_InitPokeBall
	.align	2, 0
	.type	 Task_NewGameBirchSpeechSub_WaitForLotad,function
	.thumb_func
Task_NewGameBirchSpeechSub_WaitForLotad:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L381
	add	r5, r0, r1
	sub	r1, r1, #0x8
	mov	r8, r1
	ldr	r2, .L381+0x4
	ldrb	r1, [r2]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	mov	r1, r8
	add	r6, r0, r1
	mov	r0, #0x1a
	ldrsh	r1, [r6, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L381+0x8
	add	r3, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	add	r7, r2, #0
	cmp	r0, #0
	beq	.L371	@cond_branch
	cmp	r0, #0x1
	beq	.L374	@cond_branch
	b	.L377
.L382:
	.align	2, 0
.L381:
	.word	gTasks+0x8
	.word	sBirchSpeechMainTaskId
	.word	gSprites
.L371:
	ldr	r1, [r3, #0x1c]
	ldr	r0, .L383
	cmp	r1, r0
	bne	.L370	@cond_branch
	ldrb	r1, [r3, #0x1]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r3, #0x1]
	b	.L377
.L384:
	.align	2, 0
.L383:
	.word	SpriteCallbackDummy
.L374:
	mov	r1, #0x16
	ldrsh	r0, [r6, r1]
	cmp	r0, #0x5f
	ble	.L370	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
	ldrb	r1, [r7]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	mov	r1, r8
	add	r2, r0, r1
	b	.L380
.L377:
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
	ldr	r2, .L385
	ldrb	r1, [r7]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r2, r0, r2
.L380:
	ldrh	r3, [r2, #0x16]
	mov	r0, #0x16
	ldrsh	r1, [r2, r0]
	ldr	r0, .L385+0x4
	cmp	r1, r0
	bgt	.L370	@cond_branch
	add	r0, r3, #0x1
	strh	r0, [r2, #0x16]
.L370:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L386:
	.align	2, 0
.L385:
	.word	gTasks
	.word	0x3fff
.Lfe27:
	.size	 Task_NewGameBirchSpeechSub_WaitForLotad,.Lfe27-Task_NewGameBirchSpeechSub_WaitForLotad
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_AndYouAre,function
	.thumb_func
Task_NewGameBirchSpeech_AndYouAre:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	RunTextPrintersAndIsPrinter0Active
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0
	bne	.L388	@cond_branch
	ldr	r0, .L389
	strb	r1, [r0]
	ldr	r0, .L389+0x4
	ldr	r1, .L389+0x8
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	bl	AddTextPrinterForMessage
	ldr	r1, .L389+0xc
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L389+0x10
	str	r1, [r0]
.L388:
	pop	{r4}
	pop	{r0}
	bx	r0
.L390:
	.align	2, 0
.L389:
	.word	gUnknown_02022D04
	.word	gStringVar4
	.word	gText_Birch_AndYouAre
	.word	gTasks
	.word	Task_NewGameBirchSpeech_StartBirchLotadPlatformFade
.Lfe28:
	.size	 Task_NewGameBirchSpeech_AndYouAre,.Lfe28-Task_NewGameBirchSpeech_AndYouAre
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_StartBirchLotadPlatformFade,function
	.thumb_func
Task_NewGameBirchSpeech_StartBirchLotadPlatformFade:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	bl	RunTextPrintersAndIsPrinter0Active
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L392	@cond_branch
	ldr	r5, .L393
	ldr	r0, .L393+0x4
	lsl	r4, r6, #0x2
	add	r4, r4, r6
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	mov	r1, #0x18
	ldrsh	r0, [r4, r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	ldrb	r3, [r1, #0x1]
	mov	r2, #0xd
	neg	r2, r2
	add	r0, r2, #0
	and	r0, r0, r3
	mov	r3, #0x4
	orr	r0, r0, r3
	strb	r0, [r1, #0x1]
	mov	r0, #0x1a
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrb	r1, [r0, #0x1]
	and	r2, r2, r1
	orr	r2, r2, r3
	strb	r2, [r0, #0x1]
	add	r0, r6, #0
	mov	r1, #0x2
	bl	NewGameBirchSpeech_StartFadeOutTarget1InTarget2
	add	r0, r6, #0
	mov	r1, #0x1
	bl	NewGameBirchSpeech_StartFadePlatformIn
	mov	r0, #0x40
	strh	r0, [r4, #0x16]
	ldr	r0, .L393+0x8
	str	r0, [r4]
.L392:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L394:
	.align	2, 0
.L393:
	.word	gSprites
	.word	gTasks
	.word	Task_NewGameBirchSpeech_SlidePlatformAway
.Lfe29:
	.size	 Task_NewGameBirchSpeech_StartBirchLotadPlatformFade,.Lfe29-Task_NewGameBirchSpeech_StartBirchLotadPlatformFade
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_SlidePlatformAway,function
	.thumb_func
Task_NewGameBirchSpeech_SlidePlatformAway:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L398
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r2, r1, r2
	ldrh	r3, [r2, #0x10]
	mov	r0, #0x10
	ldrsh	r1, [r2, r0]
	mov	r0, #0x3c
	neg	r0, r0
	cmp	r1, r0
	beq	.L396	@cond_branch
	sub	r0, r3, #0x2
	strh	r0, [r2, #0x10]
	ldrh	r1, [r2, #0x10]
	mov	r0, #0x14
	bl	SetGpuReg
	b	.L397
.L399:
	.align	2, 0
.L398:
	.word	gTasks
.L396:
	ldr	r0, .L400
	strh	r0, [r2, #0x10]
	ldr	r0, .L400+0x4
	str	r0, [r2]
.L397:
	pop	{r0}
	bx	r0
.L401:
	.align	2, 0
.L400:
	.word	0xffc4
	.word	Task_NewGameBirchSpeech_StartPlayerFadeIn
.Lfe30:
	.size	 Task_NewGameBirchSpeech_SlidePlatformAway,.Lfe30-Task_NewGameBirchSpeech_SlidePlatformAway
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_StartPlayerFadeIn,function
	.thumb_func
Task_NewGameBirchSpeech_StartPlayerFadeIn:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	ldr	r1, .L406
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L403	@cond_branch
	ldr	r2, .L406+0x4
	mov	r0, #0x18
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r7, #0x4
	orr	r1, r1, r7
	strb	r1, [r0]
	mov	r0, #0x1a
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r7
	strb	r1, [r0]
	ldrh	r0, [r4, #0x16]
	mov	r1, #0x16
	ldrsh	r6, [r4, r1]
	cmp	r6, #0
	beq	.L404	@cond_branch
	sub	r0, r0, #0x1
	strh	r0, [r4, #0x16]
	b	.L403
.L407:
	.align	2, 0
.L406:
	.word	gTasks
	.word	gSprites
.L404:
	ldrb	r3, [r4, #0x1c]
	lsl	r1, r3, #0x4
	add	r1, r1, r3
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	mov	r0, #0xb4
	strh	r0, [r1, #0x20]
	mov	r0, #0x3c
	strh	r0, [r1, #0x22]
	mov	r2, #0x3e
	add	r2, r2, r1
	mov	ip, r2
	ldrb	r2, [r2]
	sub	r0, r0, #0x41
	and	r0, r0, r2
	mov	r2, ip
	strb	r0, [r2]
	ldrb	r2, [r1, #0x1]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r7
	strb	r0, [r1, #0x1]
	strh	r3, [r4, #0xc]
	strh	r6, [r4, #0x14]
	add	r0, r5, #0
	mov	r1, #0x2
	bl	NewGameBirchSpeech_StartFadeInTarget1OutTarget2
	add	r0, r5, #0
	mov	r1, #0x1
	bl	NewGameBirchSpeech_StartFadePlatformOut
	ldr	r0, .L408
	str	r0, [r4]
.L403:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L409:
	.align	2, 0
.L408:
	.word	Task_NewGameBirchSpeech_WaitForPlayerFadeIn
.Lfe31:
	.size	 Task_NewGameBirchSpeech_StartPlayerFadeIn,.Lfe31-Task_NewGameBirchSpeech_StartPlayerFadeIn
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_WaitForPlayerFadeIn,function
	.thumb_func
Task_NewGameBirchSpeech_WaitForPlayerFadeIn:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L412
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r3, r1, r2
	mov	r1, #0x12
	ldrsh	r0, [r3, r1]
	cmp	r0, #0
	beq	.L411	@cond_branch
	ldr	r2, .L412+0x4
	mov	r1, #0xc
	ldrsh	r0, [r3, r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r2, [r1, #0x1]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x1]
	ldr	r0, .L412+0x8
	str	r0, [r3]
.L411:
	pop	{r0}
	bx	r0
.L413:
	.align	2, 0
.L412:
	.word	gTasks
	.word	gSprites
	.word	Task_NewGameBirchSpeech_BoyOrGirl
.Lfe32:
	.size	 Task_NewGameBirchSpeech_WaitForPlayerFadeIn,.Lfe32-Task_NewGameBirchSpeech_WaitForPlayerFadeIn
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_BoyOrGirl,function
	.thumb_func
Task_NewGameBirchSpeech_BoyOrGirl:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	bl	NewGameBirchSpeech_ClearWindow
	ldr	r0, .L415
	ldr	r1, .L415+0x4
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	bl	AddTextPrinterForMessage
	ldr	r1, .L415+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L415+0xc
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L416:
	.align	2, 0
.L415:
	.word	gStringVar4
	.word	gText_Birch_BoyOrGirl
	.word	gTasks
	.word	Task_NewGameBirchSpeech_WaitToShowGenderMenu
.Lfe33:
	.size	 Task_NewGameBirchSpeech_BoyOrGirl,.Lfe33-Task_NewGameBirchSpeech_BoyOrGirl
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_WaitToShowGenderMenu,function
	.thumb_func
Task_NewGameBirchSpeech_WaitToShowGenderMenu:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	RunTextPrintersAndIsPrinter0Active
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L418	@cond_branch
	bl	NewGameBirchSpeech_ShowGenderMenu
	ldr	r0, .L419
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L419+0x4
	str	r0, [r1]
.L418:
	pop	{r4}
	pop	{r0}
	bx	r0
.L420:
	.align	2, 0
.L419:
	.word	gTasks
	.word	Task_NewGameBirchSpeech_ChooseGender
.Lfe34:
	.size	 Task_NewGameBirchSpeech_WaitToShowGenderMenu,.Lfe34-Task_NewGameBirchSpeech_WaitToShowGenderMenu
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_ChooseGender,function
	.thumb_func
Task_NewGameBirchSpeech_ChooseGender:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	bl	NewGameBirchSpeech_ProcessGenderMenuInput
	lsl	r0, r0, #0x18
	asr	r4, r0, #0x18
	cmp	r4, #0
	beq	.L423	@cond_branch
	cmp	r4, #0x1
	beq	.L424	@cond_branch
	lsl	r4, r5, #0x2
	b	.L422
.L423:
.L424:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L428
	ldr	r0, [r0]
	strb	r4, [r0, #0x8]
	mov	r0, #0x1
	mov	r1, #0x1
	bl	NewGameBirchSpeech_ClearGenderWindow
	ldr	r1, .L428+0x4
	lsl	r2, r5, #0x2
	add	r0, r2, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L428+0x8
	str	r1, [r0]
	add	r4, r2, #0
.L422:
	bl	Menu_GetCursorPos
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r1, .L428+0x4
	add	r0, r4, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0x14
	ldrsh	r0, [r4, r1]
	cmp	r3, r0
	beq	.L427	@cond_branch
	strh	r3, [r4, #0x14]
	ldr	r2, .L428+0xc
	mov	r0, #0xc
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r2, [r0, #0x1]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0, #0x1]
	add	r0, r5, #0
	mov	r1, #0x0
	bl	NewGameBirchSpeech_StartFadeOutTarget1InTarget2
	ldr	r0, .L428+0x10
	str	r0, [r4]
.L427:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L429:
	.align	2, 0
.L428:
	.word	gSaveBlock2Ptr
	.word	gTasks
	.word	Task_NewGameBirchSpeech_WhatsYourName
	.word	gSprites
	.word	Task_NewGameBirchSpeech_SlideOutOldGenderSprite
.Lfe35:
	.size	 Task_NewGameBirchSpeech_ChooseGender,.Lfe35-Task_NewGameBirchSpeech_ChooseGender
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_SlideOutOldGenderSprite,function
	.thumb_func
Task_NewGameBirchSpeech_SlideOutOldGenderSprite:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L435
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	ldrb	r5, [r4, #0xc]
	mov	r2, #0x12
	ldrsh	r0, [r4, r2]
	add	r7, r1, #0
	cmp	r0, #0
	bne	.L431	@cond_branch
	ldr	r0, .L435+0x4
	lsl	r1, r5, #0x4
	add	r1, r1, r5
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldrh	r0, [r1, #0x20]
	add	r0, r0, #0x4
	strh	r0, [r1, #0x20]
	b	.L432
.L436:
	.align	2, 0
.L435:
	.word	gTasks
	.word	gSprites
.L431:
	ldr	r3, .L437
	lsl	r0, r5, #0x4
	add	r0, r0, r5
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	mov	r1, #0x14
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L433	@cond_branch
	ldrb	r5, [r4, #0x1e]
	b	.L434
.L438:
	.align	2, 0
.L437:
	.word	gSprites
.L433:
	ldrb	r5, [r4, #0x1c]
.L434:
	lsl	r2, r5, #0x4
	add	r2, r2, r5
	lsl	r2, r2, #0x2
	add	r2, r2, r3
	mov	r0, #0xf0
	strh	r0, [r2, #0x20]
	mov	r0, #0x3c
	strh	r0, [r2, #0x22]
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	sub	r0, r0, #0x41
	and	r0, r0, r1
	strb	r0, [r3]
	lsl	r4, r6, #0x2
	add	r4, r4, r6
	lsl	r4, r4, #0x3
	add	r4, r4, r7
	strh	r5, [r4, #0xc]
	ldrb	r1, [r2, #0x1]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r2, #0x1]
	add	r0, r6, #0
	mov	r1, #0x0
	bl	NewGameBirchSpeech_StartFadeInTarget1OutTarget2
	ldr	r0, .L439
	str	r0, [r4]
.L432:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L440:
	.align	2, 0
.L439:
	.word	Task_NewGameBirchSpeech_SlideInNewGenderSprite
.Lfe36:
	.size	 Task_NewGameBirchSpeech_SlideOutOldGenderSprite,.Lfe36-Task_NewGameBirchSpeech_SlideOutOldGenderSprite
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_SlideInNewGenderSprite,function
	.thumb_func
Task_NewGameBirchSpeech_SlideInNewGenderSprite:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L445
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r3, r1, r2
	ldrb	r1, [r3, #0xc]
	ldr	r2, .L445+0x4
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r0, r2
	ldrh	r1, [r2, #0x20]
	mov	r4, #0x20
	ldrsh	r0, [r2, r4]
	cmp	r0, #0xb4
	ble	.L442	@cond_branch
	sub	r0, r1, #0x4
	strh	r0, [r2, #0x20]
	b	.L443
.L446:
	.align	2, 0
.L445:
	.word	gTasks
	.word	gSprites
.L442:
	mov	r0, #0xb4
	strh	r0, [r2, #0x20]
	mov	r1, #0x12
	ldrsh	r0, [r3, r1]
	cmp	r0, #0
	beq	.L443	@cond_branch
	ldrb	r0, [r2, #0x1]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r0
	strb	r1, [r2, #0x1]
	ldr	r0, .L447
	str	r0, [r3]
.L443:
	pop	{r4}
	pop	{r0}
	bx	r0
.L448:
	.align	2, 0
.L447:
	.word	Task_NewGameBirchSpeech_ChooseGender
.Lfe37:
	.size	 Task_NewGameBirchSpeech_SlideInNewGenderSprite,.Lfe37-Task_NewGameBirchSpeech_SlideInNewGenderSprite
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_WhatsYourName,function
	.thumb_func
Task_NewGameBirchSpeech_WhatsYourName:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	bl	NewGameBirchSpeech_ClearWindow
	ldr	r0, .L450
	ldr	r1, .L450+0x4
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	bl	AddTextPrinterForMessage
	ldr	r1, .L450+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L450+0xc
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L451:
	.align	2, 0
.L450:
	.word	gStringVar4
	.word	gText_Birch_WhatsYourName
	.word	gTasks
	.word	Task_NewGameBirchSpeech_WaitForWhatsYourNameToPrint
.Lfe38:
	.size	 Task_NewGameBirchSpeech_WhatsYourName,.Lfe38-Task_NewGameBirchSpeech_WhatsYourName
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_WaitForWhatsYourNameToPrint,function
	.thumb_func
Task_NewGameBirchSpeech_WaitForWhatsYourNameToPrint:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	RunTextPrintersAndIsPrinter0Active
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L453	@cond_branch
	ldr	r0, .L454
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L454+0x4
	str	r0, [r1]
.L453:
	pop	{r4}
	pop	{r0}
	bx	r0
.L455:
	.align	2, 0
.L454:
	.word	gTasks
	.word	Task_NewGameBirchSpeech_WaitPressBeforeNameChoice
.Lfe39:
	.size	 Task_NewGameBirchSpeech_WaitForWhatsYourNameToPrint,.Lfe39-Task_NewGameBirchSpeech_WaitForWhatsYourNameToPrint
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_WaitPressBeforeNameChoice,function
	.thumb_func
Task_NewGameBirchSpeech_WaitPressBeforeNameChoice:
	push	{r4, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L459
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L458	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L457	@cond_branch
.L458:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L459+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L459+0x8
	str	r1, [r0]
.L457:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L460:
	.align	2, 0
.L459:
	.word	gMain
	.word	gTasks
	.word	Task_NewGameBirchSpeech_StartNamingScreen
.Lfe40:
	.size	 Task_NewGameBirchSpeech_WaitPressBeforeNameChoice,.Lfe40-Task_NewGameBirchSpeech_WaitPressBeforeNameChoice
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_StartNamingScreen,function
	.thumb_func
Task_NewGameBirchSpeech_StartNamingScreen:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L463
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	bne	.L462	@cond_branch
	bl	FreeAllWindowBuffers
	ldr	r1, .L463+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrh	r0, [r0, #0x1a]
	bl	FreeAndDestroyMonPicSprite
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x14
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	NewGameBirchSpeech_SetDefaultPlayerName
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r0, .L463+0x8
	ldr	r1, [r0]
	ldrb	r2, [r1, #0x8]
	str	r5, [sp]
	ldr	r0, .L463+0xc
	str	r0, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x0
	mov	r3, #0x0
	bl	DoNamingScreen
.L462:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L464:
	.align	2, 0
.L463:
	.word	gPaletteFade
	.word	gTasks
	.word	gSaveBlock2Ptr
	.word	CB2_NewGameBirchSpeech_ReturnFromNamingScreen
.Lfe41:
	.size	 Task_NewGameBirchSpeech_StartNamingScreen,.Lfe41-Task_NewGameBirchSpeech_StartNamingScreen
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_SoItsPlayerName,function
	.thumb_func
Task_NewGameBirchSpeech_SoItsPlayerName:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	bl	NewGameBirchSpeech_ClearWindow
	ldr	r0, .L466
	ldr	r1, .L466+0x4
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	bl	AddTextPrinterForMessage
	ldr	r1, .L466+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L466+0xc
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L467:
	.align	2, 0
.L466:
	.word	gStringVar4
	.word	gText_Birch_SoItsPlayer
	.word	gTasks
	.word	Task_NewGameBirchSpeech_CreateNameYesNo
.Lfe42:
	.size	 Task_NewGameBirchSpeech_SoItsPlayerName,.Lfe42-Task_NewGameBirchSpeech_SoItsPlayerName
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_CreateNameYesNo,function
	.thumb_func
Task_NewGameBirchSpeech_CreateNameYesNo:
	push	{r4, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	RunTextPrintersAndIsPrinter0Active
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L469	@cond_branch
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0xf
	str	r0, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0xf3
	mov	r3, #0xdf
	bl	CreateYesNoMenuParameterized
	ldr	r1, .L470
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L470+0x4
	str	r1, [r0]
.L469:
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L471:
	.align	2, 0
.L470:
	.word	gTasks
	.word	Task_NewGameBirchSpeech_ProcessNameYesNoMenu
.Lfe43:
	.size	 Task_NewGameBirchSpeech_CreateNameYesNo,.Lfe43-Task_NewGameBirchSpeech_CreateNameYesNo
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_ProcessNameYesNoMenu,function
	.thumb_func
Task_NewGameBirchSpeech_ProcessNameYesNoMenu:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L474	@cond_branch
	cmp	r1, #0
	bgt	.L479	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L476	@cond_branch
	b	.L473
.L479:
	cmp	r1, #0x1
	beq	.L476	@cond_branch
	b	.L473
.L474:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r2, .L480
	ldr	r0, .L480+0x4
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	mov	r0, #0xc
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r2, [r0, #0x1]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r2
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0, #0x1]
	add	r0, r5, #0
	mov	r1, #0x2
	bl	NewGameBirchSpeech_StartFadeOutTarget1InTarget2
	add	r0, r5, #0
	mov	r1, #0x1
	bl	NewGameBirchSpeech_StartFadePlatformIn
	ldr	r0, .L480+0x8
	str	r0, [r4]
	b	.L473
.L481:
	.align	2, 0
.L480:
	.word	gSprites
	.word	gTasks
	.word	Task_NewGameBirchSpeech_SlidePlatformAway2
.L476:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L482
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L482+0x4
	str	r0, [r1]
.L473:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L483:
	.align	2, 0
.L482:
	.word	gTasks
	.word	Task_NewGameBirchSpeech_BoyOrGirl
.Lfe44:
	.size	 Task_NewGameBirchSpeech_ProcessNameYesNoMenu,.Lfe44-Task_NewGameBirchSpeech_ProcessNameYesNoMenu
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_SlidePlatformAway2,function
	.thumb_func
Task_NewGameBirchSpeech_SlidePlatformAway2:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L487
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrh	r2, [r1, #0x10]
	mov	r3, #0x10
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	beq	.L485	@cond_branch
	add	r0, r2, #0x2
	strh	r0, [r1, #0x10]
	ldrh	r1, [r1, #0x10]
	mov	r0, #0x14
	bl	SetGpuReg
	b	.L486
.L488:
	.align	2, 0
.L487:
	.word	gTasks
.L485:
	ldr	r0, .L489
	str	r0, [r1]
.L486:
	pop	{r0}
	bx	r0
.L490:
	.align	2, 0
.L489:
	.word	Task_NewGameBirchSpeech_ReshowBirchLotad
.Lfe45:
	.size	 Task_NewGameBirchSpeech_SlidePlatformAway2,.Lfe45-Task_NewGameBirchSpeech_SlidePlatformAway2
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_ReshowBirchLotad,function
	.thumb_func
Task_NewGameBirchSpeech_ReshowBirchLotad:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r1, .L493
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r6, r0, r1
	mov	r1, #0x12
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	beq	.L492	@cond_branch
	ldr	r5, .L493+0x4
	mov	r0, #0x1c
	ldrsh	r1, [r6, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r4, #0x4
	orr	r1, r1, r4
	strb	r1, [r0]
	mov	r0, #0x1e
	ldrsh	r1, [r6, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r4
	strb	r1, [r0]
	ldrb	r0, [r6, #0x18]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	mov	r0, #0x88
	strh	r0, [r1, #0x20]
	mov	r0, #0x3c
	strh	r0, [r1, #0x22]
	add	r3, r1, #0
	add	r3, r3, #0x3e
	ldrb	r2, [r3]
	sub	r0, r0, #0x41
	and	r0, r0, r2
	strb	r0, [r3]
	ldrb	r3, [r1, #0x1]
	mov	r2, #0xd
	neg	r2, r2
	add	r0, r2, #0
	and	r0, r0, r3
	orr	r0, r0, r4
	strb	r0, [r1, #0x1]
	ldrb	r0, [r6, #0x1a]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	mov	r0, #0x64
	strh	r0, [r1, #0x20]
	mov	r0, #0x4b
	strh	r0, [r1, #0x22]
	add	r3, r1, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	orr	r0, r0, r4
	strb	r0, [r3]
	ldrb	r0, [r1, #0x1]
	and	r2, r2, r0
	orr	r2, r2, r4
	strb	r2, [r1, #0x1]
	add	r0, r7, #0
	mov	r1, #0x2
	bl	NewGameBirchSpeech_StartFadeInTarget1OutTarget2
	add	r0, r7, #0
	mov	r1, #0x1
	bl	NewGameBirchSpeech_StartFadePlatformOut
	mov	r0, #0x0
	bl	NewGameBirchSpeech_ClearWindow
	ldr	r0, .L493+0x8
	ldr	r1, .L493+0xc
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	bl	AddTextPrinterForMessage
	ldr	r0, .L493+0x10
	str	r0, [r6]
.L492:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L494:
	.align	2, 0
.L493:
	.word	gTasks
	.word	gSprites
	.word	gStringVar4
	.word	gText_Birch_YourePlayer
	.word	Task_NewGameBirchSpeech_WaitForSpriteFadeInAndTextPrinter
.Lfe46:
	.size	 Task_NewGameBirchSpeech_ReshowBirchLotad,.Lfe46-Task_NewGameBirchSpeech_ReshowBirchLotad
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_WaitForSpriteFadeInAndTextPrinter,function
	.thumb_func
Task_NewGameBirchSpeech_WaitForSpriteFadeInAndTextPrinter:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L498
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L496	@cond_branch
	ldr	r7, .L498+0x4
	mov	r1, #0x18
	ldrsh	r0, [r4, r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r7
	ldrb	r2, [r1, #0x1]
	mov	r6, #0xd
	neg	r6, r6
	add	r0, r6, #0
	and	r0, r0, r2
	strb	r0, [r1, #0x1]
	mov	r1, #0x1a
	ldrsh	r0, [r4, r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r7
	ldrb	r2, [r1, #0x1]
	add	r0, r6, #0
	and	r0, r0, r2
	strb	r0, [r1, #0x1]
	bl	RunTextPrintersAndIsPrinter0Active
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L496	@cond_branch
	mov	r0, #0x18
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	ldrb	r2, [r0, #0x1]
	add	r1, r6, #0
	and	r1, r1, r2
	mov	r3, #0x4
	orr	r1, r1, r3
	strb	r1, [r0, #0x1]
	mov	r1, #0x1a
	ldrsh	r0, [r4, r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r7
	ldrb	r2, [r1, #0x1]
	add	r0, r6, #0
	and	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r1, #0x1]
	add	r0, r5, #0
	mov	r1, #0x2
	bl	NewGameBirchSpeech_StartFadeOutTarget1InTarget2
	add	r0, r5, #0
	mov	r1, #0x1
	bl	NewGameBirchSpeech_StartFadePlatformIn
	mov	r0, #0x40
	strh	r0, [r4, #0x16]
	ldr	r0, .L498+0x8
	str	r0, [r4]
.L496:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L499:
	.align	2, 0
.L498:
	.word	gTasks
	.word	gSprites
	.word	Task_NewGameBirchSpeech_AreYouReady
.Lfe47:
	.size	 Task_NewGameBirchSpeech_WaitForSpriteFadeInAndTextPrinter,.Lfe47-Task_NewGameBirchSpeech_WaitForSpriteFadeInAndTextPrinter
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_AreYouReady,function
	.thumb_func
Task_NewGameBirchSpeech_AreYouReady:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L505
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r2, #0x12
	ldrsh	r0, [r4, r2]
	add	r7, r1, #0
	cmp	r0, #0
	beq	.L500	@cond_branch
	ldr	r2, .L505+0x4
	mov	r3, #0x18
	ldrsh	r1, [r4, r3]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r3, #0x4
	orr	r1, r1, r3
	strb	r1, [r0]
	mov	r0, #0x1a
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r3
	strb	r1, [r0]
	ldrh	r1, [r4, #0x16]
	mov	r3, #0x16
	ldrsh	r0, [r4, r3]
	cmp	r0, #0
	beq	.L502	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r4, #0x16]
	b	.L500
.L506:
	.align	2, 0
.L505:
	.word	gTasks
	.word	gSprites
.L502:
	ldr	r0, .L507
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	beq	.L503	@cond_branch
	ldrb	r5, [r4, #0x1e]
	b	.L504
.L508:
	.align	2, 0
.L507:
	.word	gSaveBlock2Ptr
.L503:
	ldrb	r5, [r4, #0x1c]
.L504:
	lsl	r1, r5, #0x4
	add	r1, r1, r5
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	mov	r0, #0x78
	strh	r0, [r1, #0x20]
	mov	r0, #0x3c
	strh	r0, [r1, #0x22]
	add	r3, r1, #0
	add	r3, r3, #0x3e
	ldrb	r2, [r3]
	sub	r0, r0, #0x41
	and	r0, r0, r2
	strb	r0, [r3]
	ldrb	r2, [r1, #0x1]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r1, #0x1]
	lsl	r4, r6, #0x2
	add	r4, r4, r6
	lsl	r4, r4, #0x3
	add	r4, r4, r7
	strh	r5, [r4, #0xc]
	add	r0, r6, #0
	mov	r1, #0x2
	bl	NewGameBirchSpeech_StartFadeInTarget1OutTarget2
	add	r0, r6, #0
	mov	r1, #0x1
	bl	NewGameBirchSpeech_StartFadePlatformOut
	ldr	r0, .L509
	ldr	r1, .L509+0x4
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	bl	AddTextPrinterForMessage
	ldr	r0, .L509+0x8
	str	r0, [r4]
.L500:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L510:
	.align	2, 0
.L509:
	.word	gStringVar4
	.word	gText_Birch_AreYouReady
	.word	Task_NewGameBirchSpeech_ShrinkPlayer
.Lfe48:
	.size	 Task_NewGameBirchSpeech_AreYouReady,.Lfe48-Task_NewGameBirchSpeech_AreYouReady
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_ShrinkPlayer,function
	.thumb_func
Task_NewGameBirchSpeech_ShrinkPlayer:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L514
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r6, r1, r2
	mov	r1, #0x12
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	beq	.L512	@cond_branch
	ldr	r7, .L514+0x4
	mov	r1, #0xc
	ldrsh	r0, [r6, r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r7
	ldrb	r2, [r1, #0x1]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x1]
	bl	RunTextPrintersAndIsPrinter0Active
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	cmp	r0, #0
	bne	.L512	@cond_branch
	ldrb	r0, [r6, #0xc]
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	add	r5, r4, r7
	ldrb	r1, [r5, #0x1]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r5, #0x1]
	add	r0, r7, #0
	add	r0, r0, #0x10
	add	r0, r4, r0
	ldr	r1, .L514+0x8
	str	r1, [r0]
	add	r0, r5, #0
	bl	InitSpriteAffineAnim
	add	r0, r5, #0
	mov	r1, #0x0
	bl	StartSpriteAffineAnim
	add	r0, r7, #0
	add	r0, r0, #0x1c
	add	r4, r4, r0
	ldr	r0, .L514+0xc
	str	r0, [r4]
	ldr	r0, .L514+0x10
	mov	r1, r8
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	mov	r0, #0x4
	bl	FadeOutBGM
	ldr	r0, .L514+0x14
	str	r0, [r6]
.L512:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L515:
	.align	2, 0
.L514:
	.word	gTasks
	.word	gSprites
	.word	sSpriteAffineAnimTable_PlayerShrink
	.word	SpriteCB_MovePlayerDownWhileShrinking
	.word	0xffff
	.word	Task_NewGameBirchSpeech_WaitForPlayerShrink
.Lfe49:
	.size	 Task_NewGameBirchSpeech_ShrinkPlayer,.Lfe49-Task_NewGameBirchSpeech_ShrinkPlayer
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_WaitForPlayerShrink,function
	.thumb_func
Task_NewGameBirchSpeech_WaitForPlayerShrink:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L518
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r3, r1, r2
	ldrb	r1, [r3, #0xc]
	ldr	r2, .L518+0x4
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3f
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1a
	cmp	r0, #0
	bge	.L517	@cond_branch
	ldr	r0, .L518+0x8
	str	r0, [r3]
.L517:
	pop	{r0}
	bx	r0
.L519:
	.align	2, 0
.L518:
	.word	gTasks
	.word	gSprites
	.word	Task_NewGameBirchSpeech_FadePlayerToWhite
.Lfe50:
	.size	 Task_NewGameBirchSpeech_WaitForPlayerShrink,.Lfe50-Task_NewGameBirchSpeech_WaitForPlayerShrink
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_FadePlayerToWhite,function
	.thumb_func
Task_NewGameBirchSpeech_FadePlayerToWhite:
	push	{r4, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L522
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L521	@cond_branch
	ldr	r0, .L522+0x4
	lsl	r4, r2, #0x2
	add	r4, r4, r2
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	ldrb	r2, [r4, #0xc]
	ldr	r1, .L522+0x8
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, .L522+0xc
	str	r1, [r0]
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	ldr	r0, .L522+0x10
	ldr	r1, .L522+0x14
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L522+0x18
	str	r0, [r4]
.L521:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L523:
	.align	2, 0
.L522:
	.word	gPaletteFade
	.word	gTasks
	.word	gSprites
	.word	SpriteCB_Null
	.word	-0x10000
	.word	0xffff
	.word	Task_NewGameBirchSpeech_Cleanup
.Lfe51:
	.size	 Task_NewGameBirchSpeech_FadePlayerToWhite,.Lfe51-Task_NewGameBirchSpeech_FadePlayerToWhite
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_Cleanup,function
	.thumb_func
Task_NewGameBirchSpeech_Cleanup:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L526
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L525	@cond_branch
	bl	FreeAllWindowBuffers
	ldr	r1, .L526+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrh	r0, [r0, #0x1a]
	bl	FreeAndDestroyMonPicSprite
	bl	ResetAllPicSprites
	ldr	r0, .L526+0x8
	bl	SetMainCallback2
	add	r0, r4, #0
	bl	DestroyTask
.L525:
	pop	{r4}
	pop	{r0}
	bx	r0
.L527:
	.align	2, 0
.L526:
	.word	gPaletteFade
	.word	gTasks
	.word	CB2_NewGame
.Lfe52:
	.size	 Task_NewGameBirchSpeech_Cleanup,.Lfe52-Task_NewGameBirchSpeech_Cleanup
	.align	2, 0
	.type	 CB2_NewGameBirchSpeech_ReturnFromNamingScreen,function
	.thumb_func
CB2_NewGameBirchSpeech_ReturnFromNamingScreen:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	ldr	r1, .L531
	mov	r0, #0x0
	mov	r2, #0x2
	bl	InitBgsFromTemplates
	ldr	r0, .L531+0x4
	bl	InitBgFromTemplate
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r0, #0xc
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0xa
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x8
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x18
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1a
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x14
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x16
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x10
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x12
	mov	r1, #0x0
	bl	SetGpuReg
	add	r0, sp, #0x4
	mov	r4, #0x0
	strh	r4, [r0]
	mov	r4, #0xc0
	lsl	r4, r4, #0x13
	add	r1, r4, #0
	ldr	r2, .L531+0x8
	ldr	r3, .L531+0xc
	stmia r3!, {r0, r1, r2}
	.code	16
	mov	r3, #0x0
	str	r3, [sp, #0x8]
	add	r0, sp, #0x8
	mov	r1, #0xe0
	lsl	r1, r1, #0x13
	ldr	r2, .L531+0x10
	ldr	r5, .L531+0xc
	stmia r5!, {r0, r1, r2}
	.code	16
	add	r0, sp, #0x4
	strh	r3, [r0]
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	ldr	r2, .L531+0x14
	ldr	r3, .L531+0xc
	stmia r3!, {r0, r1, r2}
	.code	16
	bl	ResetPaletteFade
	ldr	r0, .L531+0x18
	add	r1, r4, #0
	bl	LZ77UnCompVram
	ldr	r0, .L531+0x1c
	ldr	r1, .L531+0x20
	bl	LZ77UnCompVram
	ldr	r0, .L531+0x24
	mov	r1, #0x0
	mov	r2, #0x40
	bl	LoadPalette
	ldr	r0, .L531+0x28
	mov	r1, #0x1
	mov	r2, #0x10
	bl	LoadPalette
	bl	ResetTasks
	ldr	r0, .L531+0x2c
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L531+0x30
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r0, #0x5
	strh	r0, [r4, #0x16]
	ldr	r0, .L531+0x34
	strh	r0, [r4, #0x10]
	bl	ScanlineEffect_Stop
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	bl	ResetAllPicSprites
	add	r0, r5, #0
	bl	AddBirchSpeechObjects
	ldr	r0, .L531+0x38
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	beq	.L529	@cond_branch
	mov	r0, #0x1
	strh	r0, [r4, #0x14]
	ldrb	r3, [r4, #0x1e]
	b	.L530
.L532:
	.align	2, 0
.L531:
	.word	sMainMenuBgTemplates
	.word	sBirchBgTemplate
	.word	-0x7eff4000
	.word	0x40000d4
	.word	-0x7affff00
	.word	-0x7efffe00
	.word	sBirchSpeechShadowGfx
	.word	sBirchSpeechBgMap
	.word	0x6003800
	.word	sBirchSpeechBgPals
	.word	sBirchSpeechBgGradientPal+0x2
	.word	Task_NewGameBirchSpeech_ReturnFromNamingScreenShowTextbox
	.word	gTasks
	.word	0xffc4
	.word	gSaveBlock2Ptr
.L529:
	strh	r0, [r4, #0x14]
	ldrb	r3, [r4, #0x1c]
.L530:
	ldr	r0, .L533
	lsl	r1, r3, #0x4
	add	r1, r1, r3
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	mov	r4, #0x0
	mov	r0, #0xb4
	strh	r0, [r1, #0x20]
	mov	r0, #0x3c
	strh	r0, [r1, #0x22]
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	sub	r0, r0, #0x41
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r1, .L533+0x4
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r3, [r0, #0xc]
	ldr	r1, .L533+0x8
	mov	r0, #0x14
	bl	SetGpuReg
	mov	r0, #0x1
	neg	r0, r0
	str	r4, [sp]
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	mov	r0, #0x40
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x44
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x48
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x52
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x54
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	ldr	r3, .L533+0xc
	ldrh	r2, [r3]
	strh	r4, [r3]
	ldr	r4, .L533+0x10
	ldrh	r0, [r4]
	mov	r1, #0x1
	orr	r0, r0, r1
	strh	r0, [r4]
	strh	r2, [r3]
	ldr	r0, .L533+0x14
	bl	SetVBlankCallback
	ldr	r0, .L533+0x18
	bl	SetMainCallback2
	ldr	r0, .L533+0x1c
	bl	InitWindows
	mov	r0, #0x0
	mov	r1, #0xf3
	bl	LoadMainMenuWindowFrameTiles
	mov	r0, #0x0
	mov	r1, #0xfc
	mov	r2, #0xf0
	bl	LoadMessageBoxGfx
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L534:
	.align	2, 0
.L533:
	.word	gSprites
	.word	gTasks
	.word	0xffc4
	.word	0x4000208
	.word	0x4000200
	.word	VBlankCB_MainMenu
	.word	CB2_MainMenu
	.word	gNewGameBirchSpeechTextWindows
.Lfe53:
	.size	 CB2_NewGameBirchSpeech_ReturnFromNamingScreen,.Lfe53-CB2_NewGameBirchSpeech_ReturnFromNamingScreen
	.align	2, 0
	.type	 SpriteCB_Null,function
	.thumb_func
SpriteCB_Null:
	bx	lr
.Lfe54:
	.size	 SpriteCB_Null,.Lfe54-SpriteCB_Null
	.align	2, 0
	.type	 SpriteCB_MovePlayerDownWhileShrinking,function
	.thumb_func
SpriteCB_MovePlayerDownWhileShrinking:
	mov	r2, #0x22
	ldrsh	r1, [r0, r2]
	lsl	r1, r1, #0x10
	mov	r3, #0x2e
	ldrsh	r2, [r0, r3]
	add	r1, r1, r2
	mov	r2, #0xc0
	lsl	r2, r2, #0x8
	add	r1, r1, r2
	lsr	r2, r1, #0x10
	strh	r2, [r0, #0x22]
	strh	r1, [r0, #0x2e]
	bx	lr
.Lfe55:
	.size	 SpriteCB_MovePlayerDownWhileShrinking,.Lfe55-SpriteCB_MovePlayerDownWhileShrinking
	.align	2, 0
	.type	 NewGameBirchSpeech_CreateLotadSprite,function
	.thumb_func
NewGameBirchSpeech_CreateLotadSprite:
	push	{lr}
	add	sp, sp, #-0x14
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	str	r0, [sp]
	str	r1, [sp, #0x4]
	mov	r0, #0xe
	str	r0, [sp, #0x8]
	ldr	r0, .L538
	str	r0, [sp, #0xc]
	mov	r0, #0x0
	str	r0, [sp, #0x10]
	mov	r0, #0x1
	mov	r1, #0x8
	mov	r2, #0x0
	mov	r3, #0x1
	bl	CreatePicSprite2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	sp, sp, #0x14
	pop	{r1}
	bx	r1
.L539:
	.align	2, 0
.L538:
	.word	0xffff
.Lfe56:
	.size	 NewGameBirchSpeech_CreateLotadSprite,.Lfe56-NewGameBirchSpeech_CreateLotadSprite
	.align	2, 0
	.type	 AddBirchSpeechObjects,function
	.thumb_func
AddBirchSpeechObjects:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x88
	mov	r1, #0x3c
	mov	r2, #0x1
	bl	AddNewGameBirchObject
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L541
	mov	r9, r1
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	mov	r3, #0x1c
	add	r3, r3, r9
	mov	r8, r3
	add	r1, r2, r3
	ldr	r7, .L541+0x4
	str	r7, [r1]
	add	r2, r2, r9
	ldrb	r3, [r2, #0x5]
	mov	r6, #0xd
	neg	r6, r6
	add	r1, r6, #0
	and	r1, r1, r3
	strb	r1, [r2, #0x5]
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	mov	r3, #0x4
	mov	sl, r3
	mov	r3, sl
	orr	r1, r1, r3
	strb	r1, [r2]
	ldr	r1, .L541+0x8
	lsl	r5, r4, #0x2
	add	r5, r5, r4
	lsl	r5, r5, #0x3
	add	r5, r5, r1
	strh	r0, [r5, #0x18]
	mov	r0, #0x64
	mov	r1, #0x4b
	bl	NewGameBirchSpeech_CreateLotadSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	mov	r4, r8
	add	r1, r2, r4
	str	r7, [r1]
	add	r2, r2, r9
	ldrb	r3, [r2, #0x5]
	add	r1, r6, #0
	and	r1, r1, r3
	strb	r1, [r2, #0x5]
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	mov	r3, sl
	orr	r1, r1, r3
	strb	r1, [r2]
	strh	r0, [r5, #0x1a]
	mov	r0, #0x3c
	bl	FacilityClassToPicIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r4, .L541+0xc
	str	r4, [sp]
	mov	r1, #0x78
	mov	r2, #0x3c
	mov	r3, #0x0
	bl	CreateTrainerSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	mov	r3, r8
	add	r1, r2, r3
	str	r7, [r1]
	add	r2, r2, r9
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r4, sl
	orr	r1, r1, r4
	strb	r1, [r3]
	ldrb	r3, [r2, #0x5]
	add	r1, r6, #0
	and	r1, r1, r3
	strb	r1, [r2, #0x5]
	strh	r0, [r5, #0x1c]
	mov	r0, #0x3f
	bl	FacilityClassToPicIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L541+0xc
	mov	r2, #0x80
	lsl	r2, r2, #0x4
	add	r4, r1, r2
	str	r4, [sp]
	mov	r1, #0x78
	mov	r2, #0x3c
	mov	r3, #0x0
	bl	CreateTrainerSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r8, r8, r2
	mov	r3, r8
	str	r7, [r3]
	add	r2, r2, r9
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r4, sl
	orr	r1, r1, r4
	strb	r1, [r3]
	ldrb	r1, [r2, #0x5]
	and	r6, r6, r1
	strb	r6, [r2, #0x5]
	strh	r0, [r5, #0x1e]
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L542:
	.align	2, 0
.L541:
	.word	gSprites
	.word	SpriteCB_Null
	.word	gTasks
	.word	gDecompressionBuffer
.Lfe57:
	.size	 AddBirchSpeechObjects,.Lfe57-AddBirchSpeechObjects
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_FadeOutTarget1InTarget2,function
	.thumb_func
Task_NewGameBirchSpeech_FadeOutTarget1InTarget2:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r4, .L548
	lsl	r0, r3, #0x2
	add	r0, r0, r3
	lsl	r0, r0, #0x3
	add	r2, r0, r4
	ldrh	r1, [r2, #0xa]
	mov	r5, #0xa
	ldrsh	r0, [r2, r5]
	cmp	r0, #0
	bne	.L544	@cond_branch
	mov	r1, #0x8
	ldrsh	r0, [r2, r1]
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r4
	mov	r0, #0x1
	strh	r0, [r1, #0x12]
	add	r0, r3, #0
	bl	DestroyTask
	b	.L545
.L549:
	.align	2, 0
.L548:
	.word	gTasks
.L544:
	ldrh	r3, [r2, #0x10]
	mov	r4, #0x10
	ldrsh	r0, [r2, r4]
	cmp	r0, #0
	beq	.L546	@cond_branch
	sub	r0, r3, #0x1
	strh	r0, [r2, #0x10]
	b	.L545
.L546:
	ldrh	r0, [r2, #0xe]
	strh	r0, [r2, #0x10]
	sub	r1, r1, #0x1
	strh	r1, [r2, #0xa]
	ldrh	r0, [r2, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r2, #0xc]
	mov	r5, #0xc
	ldrsh	r0, [r2, r5]
	lsl	r0, r0, #0x8
	add	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x52
	bl	SetGpuReg
.L545:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe58:
	.size	 Task_NewGameBirchSpeech_FadeOutTarget1InTarget2,.Lfe58-Task_NewGameBirchSpeech_FadeOutTarget1InTarget2
	.align	2, 0
	.type	 NewGameBirchSpeech_StartFadeOutTarget1InTarget2,function
	.thumb_func
NewGameBirchSpeech_StartFadeOutTarget1InTarget2:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	mov	r1, #0x94
	lsl	r1, r1, #0x2
	mov	r0, #0x50
	bl	SetGpuReg
	mov	r0, #0x52
	mov	r1, #0x10
	bl	SetGpuReg
	mov	r0, #0x54
	mov	r1, #0x0
	bl	SetGpuReg
	ldr	r0, .L551
	mov	r8, r0
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r8
	mov	r6, #0x0
	strh	r6, [r0, #0x12]
	ldr	r0, .L551+0x4
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r8
	strh	r4, [r1, #0x8]
	mov	r0, #0x10
	strh	r0, [r1, #0xa]
	strh	r6, [r1, #0xc]
	strh	r5, [r1, #0xe]
	strh	r5, [r1, #0x10]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L552:
	.align	2, 0
.L551:
	.word	gTasks
	.word	Task_NewGameBirchSpeech_FadeOutTarget1InTarget2
.Lfe59:
	.size	 NewGameBirchSpeech_StartFadeOutTarget1InTarget2,.Lfe59-NewGameBirchSpeech_StartFadeOutTarget1InTarget2
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_FadeInTarget1OutTarget2,function
	.thumb_func
Task_NewGameBirchSpeech_FadeInTarget1OutTarget2:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r4, .L558
	lsl	r0, r3, #0x2
	add	r0, r0, r3
	lsl	r0, r0, #0x3
	add	r2, r0, r4
	ldrh	r1, [r2, #0xa]
	mov	r5, #0xa
	ldrsh	r0, [r2, r5]
	cmp	r0, #0x10
	bne	.L554	@cond_branch
	mov	r1, #0x8
	ldrsh	r0, [r2, r1]
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r4
	mov	r0, #0x1
	strh	r0, [r1, #0x12]
	add	r0, r3, #0
	bl	DestroyTask
	b	.L555
.L559:
	.align	2, 0
.L558:
	.word	gTasks
.L554:
	ldrh	r3, [r2, #0x10]
	mov	r4, #0x10
	ldrsh	r0, [r2, r4]
	cmp	r0, #0
	beq	.L556	@cond_branch
	sub	r0, r3, #0x1
	strh	r0, [r2, #0x10]
	b	.L555
.L556:
	ldrh	r0, [r2, #0xe]
	strh	r0, [r2, #0x10]
	add	r1, r1, #0x1
	strh	r1, [r2, #0xa]
	ldrh	r0, [r2, #0xc]
	sub	r0, r0, #0x1
	strh	r0, [r2, #0xc]
	mov	r5, #0xc
	ldrsh	r0, [r2, r5]
	lsl	r0, r0, #0x8
	add	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x52
	bl	SetGpuReg
.L555:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe60:
	.size	 Task_NewGameBirchSpeech_FadeInTarget1OutTarget2,.Lfe60-Task_NewGameBirchSpeech_FadeInTarget1OutTarget2
	.align	2, 0
	.type	 NewGameBirchSpeech_StartFadeInTarget1OutTarget2,function
	.thumb_func
NewGameBirchSpeech_StartFadeInTarget1OutTarget2:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	mov	r1, #0x94
	lsl	r1, r1, #0x2
	mov	r0, #0x50
	bl	SetGpuReg
	mov	r1, #0x80
	lsl	r1, r1, #0x5
	mov	r0, #0x52
	bl	SetGpuReg
	mov	r0, #0x54
	mov	r1, #0x0
	bl	SetGpuReg
	ldr	r0, .L561
	mov	r8, r0
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r8
	mov	r6, #0x0
	strh	r6, [r0, #0x12]
	ldr	r0, .L561+0x4
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r8
	strh	r4, [r1, #0x8]
	strh	r6, [r1, #0xa]
	mov	r0, #0x10
	strh	r0, [r1, #0xc]
	strh	r5, [r1, #0xe]
	strh	r5, [r1, #0x10]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L562:
	.align	2, 0
.L561:
	.word	gTasks
	.word	Task_NewGameBirchSpeech_FadeInTarget1OutTarget2
.Lfe61:
	.size	 NewGameBirchSpeech_StartFadeInTarget1OutTarget2,.Lfe61-NewGameBirchSpeech_StartFadeInTarget1OutTarget2
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_FadePlatformIn,function
	.thumb_func
Task_NewGameBirchSpeech_FadePlatformIn:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, .L570
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r1, r0, r1
	ldrh	r3, [r1, #0xc]
	mov	r4, #0xc
	ldrsh	r0, [r1, r4]
	cmp	r0, #0
	beq	.L564	@cond_branch
	sub	r0, r3, #0x1
	strh	r0, [r1, #0xc]
	b	.L565
.L571:
	.align	2, 0
.L570:
	.word	gTasks
.L564:
	ldrh	r3, [r1, #0xa]
	mov	r4, #0xa
	ldrsh	r0, [r1, r4]
	cmp	r0, #0x8
	bne	.L566	@cond_branch
	add	r0, r2, #0
	bl	DestroyTask
	b	.L565
.L566:
	ldrh	r2, [r1, #0x10]
	mov	r4, #0x10
	ldrsh	r0, [r1, r4]
	cmp	r0, #0
	beq	.L568	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1, #0x10]
	b	.L565
.L568:
	ldrh	r0, [r1, #0xe]
	strh	r0, [r1, #0x10]
	add	r0, r3, #0x1
	strh	r0, [r1, #0xa]
	mov	r2, #0xa
	ldrsh	r0, [r1, r2]
	lsl	r0, r0, #0x1
	ldr	r1, .L572
	add	r0, r0, r1
	mov	r1, #0x1
	mov	r2, #0x10
	bl	LoadPalette
.L565:
	pop	{r4}
	pop	{r0}
	bx	r0
.L573:
	.align	2, 0
.L572:
	.word	sBirchSpeechBgGradientPal
.Lfe62:
	.size	 Task_NewGameBirchSpeech_FadePlatformIn,.Lfe62-Task_NewGameBirchSpeech_FadePlatformIn
	.align	2, 0
	.type	 NewGameBirchSpeech_StartFadePlatformIn,function
	.thumb_func
NewGameBirchSpeech_StartFadePlatformIn:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L575
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L575+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, #0x0
	strh	r4, [r1, #0x8]
	strh	r0, [r1, #0xa]
	mov	r0, #0x8
	strh	r0, [r1, #0xc]
	strh	r5, [r1, #0xe]
	strh	r5, [r1, #0x10]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L576:
	.align	2, 0
.L575:
	.word	Task_NewGameBirchSpeech_FadePlatformIn
	.word	gTasks
.Lfe63:
	.size	 NewGameBirchSpeech_StartFadePlatformIn,.Lfe63-NewGameBirchSpeech_StartFadePlatformIn
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_FadePlatformOut,function
	.thumb_func
Task_NewGameBirchSpeech_FadePlatformOut:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, .L584
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r1, r0, r1
	ldrh	r3, [r1, #0xc]
	mov	r4, #0xc
	ldrsh	r0, [r1, r4]
	cmp	r0, #0
	beq	.L578	@cond_branch
	sub	r0, r3, #0x1
	strh	r0, [r1, #0xc]
	b	.L579
.L585:
	.align	2, 0
.L584:
	.word	gTasks
.L578:
	ldrh	r3, [r1, #0xa]
	mov	r4, #0xa
	ldrsh	r0, [r1, r4]
	cmp	r0, #0
	bne	.L580	@cond_branch
	add	r0, r2, #0
	bl	DestroyTask
	b	.L579
.L580:
	ldrh	r2, [r1, #0x10]
	mov	r4, #0x10
	ldrsh	r0, [r1, r4]
	cmp	r0, #0
	beq	.L582	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1, #0x10]
	b	.L579
.L582:
	ldrh	r0, [r1, #0xe]
	strh	r0, [r1, #0x10]
	sub	r0, r3, #0x1
	strh	r0, [r1, #0xa]
	mov	r2, #0xa
	ldrsh	r0, [r1, r2]
	lsl	r0, r0, #0x1
	ldr	r1, .L586
	add	r0, r0, r1
	mov	r1, #0x1
	mov	r2, #0x10
	bl	LoadPalette
.L579:
	pop	{r4}
	pop	{r0}
	bx	r0
.L587:
	.align	2, 0
.L586:
	.word	sBirchSpeechBgGradientPal
.Lfe64:
	.size	 Task_NewGameBirchSpeech_FadePlatformOut,.Lfe64-Task_NewGameBirchSpeech_FadePlatformOut
	.align	2, 0
	.type	 NewGameBirchSpeech_StartFadePlatformOut,function
	.thumb_func
NewGameBirchSpeech_StartFadePlatformOut:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L589
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L589+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0x8]
	mov	r0, #0x8
	strh	r0, [r1, #0xa]
	strh	r0, [r1, #0xc]
	strh	r5, [r1, #0xe]
	strh	r5, [r1, #0x10]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L590:
	.align	2, 0
.L589:
	.word	Task_NewGameBirchSpeech_FadePlatformOut
	.word	gTasks
.Lfe65:
	.size	 NewGameBirchSpeech_StartFadePlatformOut,.Lfe65-NewGameBirchSpeech_StartFadePlatformOut
	.align	2, 0
	.type	 NewGameBirchSpeech_ShowGenderMenu,function
	.thumb_func
NewGameBirchSpeech_ShowGenderMenu:
	push	{lr}
	ldr	r0, .L592
	mov	r1, #0xf3
	bl	DrawMainMenuWindowBorder
	mov	r0, #0x1
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r2, .L592+0x4
	mov	r0, #0x1
	mov	r1, #0x2
	bl	PrintMenuTable
	mov	r0, #0x1
	mov	r1, #0x2
	mov	r2, #0x0
	bl	InitMenuInUpperLeftCornerPlaySoundWhenAPressed
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x1
	mov	r1, #0x3
	bl	CopyWindowToVram
	pop	{r0}
	bx	r0
.L593:
	.align	2, 0
.L592:
	.word	gNewGameBirchSpeechTextWindows+0x8
	.word	sMenuActions_Gender
.Lfe66:
	.size	 NewGameBirchSpeech_ShowGenderMenu,.Lfe66-NewGameBirchSpeech_ShowGenderMenu
	.align	2, 0
	.type	 NewGameBirchSpeech_ProcessGenderMenuInput,function
	.thumb_func
NewGameBirchSpeech_ProcessGenderMenuInput:
	push	{lr}
	bl	Menu_ProcessInputNoWrap
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe67:
	.size	 NewGameBirchSpeech_ProcessGenderMenuInput,.Lfe67-NewGameBirchSpeech_ProcessGenderMenuInput
	.align	2, 0
	.globl	NewGameBirchSpeech_SetDefaultPlayerName
	.type	 NewGameBirchSpeech_SetDefaultPlayerName,function
	.thumb_func
NewGameBirchSpeech_SetDefaultPlayerName:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, .L604
	ldr	r0, [r1]
	ldrb	r0, [r0, #0x8]
	add	r5, r1, #0
	cmp	r0, #0
	bne	.L596	@cond_branch
	ldr	r1, .L604+0x4
	b	.L603
.L605:
	.align	2, 0
.L604:
	.word	gSaveBlock2Ptr
	.word	gMalePresetNames
.L596:
	ldr	r1, .L606
.L603:
	lsl	r0, r2, #0x2
	add	r0, r0, r1
	ldr	r3, [r0]
	mov	r2, #0x0
	ldr	r4, .L606+0x4
.L601:
	ldr	r1, [r4]
	add	r1, r1, r2
	add	r0, r3, r2
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x6
	bls	.L601	@cond_branch
	ldr	r1, [r5]
	mov	r0, #0xff
	strb	r0, [r1, #0x7]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L607:
	.align	2, 0
.L606:
	.word	gFemalePresetNames
	.word	gSaveBlock2Ptr
.Lfe68:
	.size	 NewGameBirchSpeech_SetDefaultPlayerName,.Lfe68-NewGameBirchSpeech_SetDefaultPlayerName
	.align	2, 0
	.type	 CreateMainMenuErrorWindow,function
	.thumb_func
CreateMainMenuErrorWindow:
	push	{r4, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	mov	r0, #0x7
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r0, #0x7
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r0, #0x7
	bl	PutWindowTilemap
	mov	r0, #0x7
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, .L609
	ldr	r1, .L609+0x4
	bl	DrawMainMenuWindowBorder
	ldr	r1, .L609+0x8
	mov	r0, #0x40
	bl	SetGpuReg
	ldr	r1, .L609+0xc
	mov	r0, #0x44
	bl	SetGpuReg
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r0}
	bx	r0
.L610:
	.align	2, 0
.L609:
	.word	sWindowTemplates_MainMenu+0x38
	.word	0x1d5
	.word	0x9e7
	.word	0x719f
.Lfe69:
	.size	 CreateMainMenuErrorWindow,.Lfe69-CreateMainMenuErrorWindow
	.align	2, 0
	.type	 MainMenu_FormatSavegameText,function
	.thumb_func
MainMenu_FormatSavegameText:
	push	{lr}
	bl	MainMenu_FormatSavegamePlayer
	bl	MainMenu_FormatSavegamePokedex
	bl	MainMenu_FormatSavegameTime
	bl	MainMenu_FormatSavegameBadges
	pop	{r0}
	bx	r0
.Lfe70:
	.size	 MainMenu_FormatSavegameText,.Lfe70-MainMenu_FormatSavegameText
	.align	2, 0
	.type	 MainMenu_FormatSavegamePlayer,function
	.thumb_func
MainMenu_FormatSavegamePlayer:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	ldr	r4, .L613
	ldr	r1, .L613+0x4
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldr	r6, .L613+0x8
	str	r6, [sp]
	mov	r5, #0x1
	neg	r5, r5
	str	r5, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x11
	bl	AddTextPrinterParameterized3
	ldr	r4, .L613+0xc
	ldr	r1, [r4]
	mov	r0, #0x1
	mov	r2, #0x64
	bl	GetStringRightAlignXOffset
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r6, [sp]
	str	r5, [sp, #0x4]
	ldr	r0, [r4]
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r3, #0x11
	bl	AddTextPrinterParameterized3
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L614:
	.align	2, 0
.L613:
	.word	gStringVar4
	.word	gText_ContinueMenuPlayer
	.word	sTextColor_MenuInfo
	.word	gSaveBlock2Ptr
.Lfe71:
	.size	 MainMenu_FormatSavegamePlayer,.Lfe71-MainMenu_FormatSavegamePlayer
	.align	2, 0
	.type	 MainMenu_FormatSavegameTime,function
	.thumb_func
MainMenu_FormatSavegameTime:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x2c
	ldr	r4, .L616
	ldr	r1, .L616+0x4
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldr	r6, .L616+0x8
	str	r6, [sp]
	mov	r5, #0x1
	neg	r5, r5
	str	r5, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0x6c
	mov	r3, #0x11
	bl	AddTextPrinterParameterized3
	ldr	r4, .L616+0xc
	ldr	r0, [r4]
	ldrh	r1, [r0, #0xe]
	add	r0, sp, #0xc
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r1, #0xf0
	strb	r1, [r0]
	add	r0, r0, #0x1
	ldr	r1, [r4]
	ldrb	r1, [r1, #0x10]
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x1
	add	r1, sp, #0xc
	mov	r2, #0xd0
	bl	GetStringRightAlignXOffset
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r6, [sp]
	str	r5, [sp, #0x4]
	add	r0, sp, #0xc
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r3, #0x11
	bl	AddTextPrinterParameterized3
	add	sp, sp, #0x2c
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L617:
	.align	2, 0
.L616:
	.word	gStringVar4
	.word	gText_ContinueMenuTime
	.word	sTextColor_MenuInfo
	.word	gSaveBlock2Ptr
.Lfe72:
	.size	 MainMenu_FormatSavegameTime,.Lfe72-MainMenu_FormatSavegameTime
	.align	2, 0
	.type	 MainMenu_FormatSavegamePokedex,function
	.thumb_func
MainMenu_FormatSavegamePokedex:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x2c
	mov	r0, #0x33
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L619	@cond_branch
	bl	IsNationalPokedexEnabled
	cmp	r0, #0
	beq	.L620	@cond_branch
	mov	r0, #0x1
	bl	GetNationalPokedexCount
	b	.L622
.L620:
	mov	r0, #0x1
	bl	GetHoennPokedexCount
.L622:
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	ldr	r4, .L623
	ldr	r1, .L623+0x4
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldr	r6, .L623+0x8
	str	r6, [sp]
	mov	r5, #0x1
	neg	r5, r5
	str	r5, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x21
	bl	AddTextPrinterParameterized3
	add	r0, sp, #0xc
	add	r1, r7, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x1
	add	r1, sp, #0xc
	mov	r2, #0x64
	bl	GetStringRightAlignXOffset
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r6, [sp]
	str	r5, [sp, #0x4]
	add	r0, sp, #0xc
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r3, #0x21
	bl	AddTextPrinterParameterized3
.L619:
	add	sp, sp, #0x2c
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L624:
	.align	2, 0
.L623:
	.word	gStringVar4
	.word	gText_ContinueMenuPokedex
	.word	sTextColor_MenuInfo
.Lfe73:
	.size	 MainMenu_FormatSavegamePokedex,.Lfe73-MainMenu_FormatSavegamePokedex
	.align	2, 0
	.type	 MainMenu_FormatSavegameBadges,function
	.thumb_func
MainMenu_FormatSavegameBadges:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x2c
	mov	r7, #0x0
	ldr	r4, .L632
.L629:
	lsl	r0, r4, #0x10
	lsr	r0, r0, #0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L628	@cond_branch
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
.L628:
	add	r4, r4, #0x1
	ldr	r0, .L632+0x4
	cmp	r4, r0
	bls	.L629	@cond_branch
	ldr	r4, .L632+0x8
	ldr	r1, .L632+0xc
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldr	r6, .L632+0x10
	str	r6, [sp]
	mov	r5, #0x1
	neg	r5, r5
	str	r5, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0x6c
	mov	r3, #0x21
	bl	AddTextPrinterParameterized3
	add	r0, sp, #0xc
	add	r1, r7, #0
	mov	r2, #0x2
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x1
	add	r1, sp, #0xc
	mov	r2, #0xd0
	bl	GetStringRightAlignXOffset
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r6, [sp]
	str	r5, [sp, #0x4]
	add	r0, sp, #0xc
	str	r0, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r3, #0x21
	bl	AddTextPrinterParameterized3
	add	sp, sp, #0x2c
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L633:
	.align	2, 0
.L632:
	.word	0x867
	.word	0x86e
	.word	gStringVar4
	.word	gText_ContinueMenuBadges
	.word	sTextColor_MenuInfo
.Lfe74:
	.size	 MainMenu_FormatSavegameBadges,.Lfe74-MainMenu_FormatSavegameBadges
	.align	2, 0
	.type	 LoadMainMenuWindowFrameTiles,function
	.thumb_func
LoadMainMenuWindowFrameTiles:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r6, .L635
	ldr	r0, [r6]
	ldrb	r0, [r0, #0x14]
	lsr	r0, r0, #0x3
	bl	GetWindowFrameTilesPal
	ldr	r1, [r0]
	mov	r2, #0x90
	lsl	r2, r2, #0x1
	add	r0, r4, #0
	add	r3, r5, #0
	bl	LoadBgTiles
	ldr	r0, [r6]
	ldrb	r0, [r0, #0x14]
	lsr	r0, r0, #0x3
	bl	GetWindowFrameTilesPal
	ldr	r0, [r0, #0x4]
	mov	r1, #0x20
	mov	r2, #0x20
	bl	LoadPalette
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L636:
	.align	2, 0
.L635:
	.word	gSaveBlock2Ptr
.Lfe75:
	.size	 LoadMainMenuWindowFrameTiles,.Lfe75-LoadMainMenuWindowFrameTiles
	.align	2, 0
	.type	 DrawMainMenuWindowBorder,function
	.thumb_func
DrawMainMenuWindowBorder:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x1c
	add	r4, r0, #0
	lsl	r6, r1, #0x10
	mov	r0, #0x80
	lsl	r0, r0, #0x9
	add	r0, r0, r6
	lsr	r0, r0, #0x10
	mov	r9, r0
	mov	r1, #0x80
	lsl	r1, r1, #0xa
	add	r1, r1, r6
	lsr	r1, r1, #0x10
	mov	sl, r1
	mov	r7, #0xc0
	lsl	r7, r7, #0xa
	add	r1, r6, r7
	lsr	r1, r1, #0x10
	str	r1, [sp, #0x18]
	mov	r0, #0xa0
	lsl	r0, r0, #0xb
	add	r1, r6, r0
	lsr	r1, r1, #0x10
	str	r1, [sp, #0xc]
	mov	r7, #0xc0
	lsl	r7, r7, #0xb
	add	r1, r6, r7
	lsr	r1, r1, #0x10
	str	r1, [sp, #0x10]
	mov	r0, #0xe0
	lsl	r0, r0, #0xb
	add	r1, r6, r0
	lsr	r1, r1, #0x10
	str	r1, [sp, #0x14]
	lsr	r1, r6, #0x10
	mov	r7, #0x80
	lsl	r7, r7, #0xc
	add	r6, r6, r7
	lsr	r6, r6, #0x10
	ldrb	r0, [r4]
	ldrb	r2, [r4, #0x1]
	sub	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldrb	r3, [r4, #0x2]
	sub	r3, r3, #0x1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r5, #0x1
	str	r5, [sp]
	str	r5, [sp, #0x4]
	mov	r7, #0x2
	mov	r8, r7
	str	r7, [sp, #0x8]
	bl	FillBgTilemapBufferRect
	ldrb	r0, [r4]
	ldrb	r2, [r4, #0x1]
	ldrb	r3, [r4, #0x2]
	sub	r3, r3, #0x1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldrb	r1, [r4, #0x3]
	str	r1, [sp]
	str	r5, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r1, r9
	bl	FillBgTilemapBufferRect
	ldrb	r0, [r4]
	ldrb	r2, [r4, #0x3]
	ldrb	r1, [r4, #0x1]
	add	r2, r2, r1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldrb	r3, [r4, #0x2]
	sub	r3, r3, #0x1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	str	r5, [sp]
	str	r5, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r1, sl
	bl	FillBgTilemapBufferRect
	ldrb	r0, [r4]
	ldrb	r2, [r4, #0x1]
	sub	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldrb	r3, [r4, #0x2]
	str	r5, [sp]
	ldrb	r1, [r4, #0x4]
	str	r1, [sp, #0x4]
	str	r7, [sp, #0x8]
	ldr	r1, [sp, #0x18]
	bl	FillBgTilemapBufferRect
	ldrb	r0, [r4]
	ldrb	r2, [r4, #0x3]
	ldrb	r7, [r4, #0x1]
	add	r2, r2, r7
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldrb	r3, [r4, #0x2]
	str	r5, [sp]
	ldrb	r1, [r4, #0x4]
	str	r1, [sp, #0x4]
	mov	r1, r8
	str	r1, [sp, #0x8]
	ldr	r1, [sp, #0xc]
	bl	FillBgTilemapBufferRect
	ldrb	r0, [r4]
	ldrb	r2, [r4, #0x1]
	sub	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldrb	r3, [r4, #0x4]
	ldrb	r7, [r4, #0x2]
	add	r3, r3, r7
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	str	r5, [sp]
	str	r5, [sp, #0x4]
	mov	r1, r8
	str	r1, [sp, #0x8]
	ldr	r1, [sp, #0x10]
	bl	FillBgTilemapBufferRect
	ldrb	r0, [r4]
	ldrb	r2, [r4, #0x1]
	ldrb	r3, [r4, #0x4]
	ldrb	r7, [r4, #0x2]
	add	r3, r3, r7
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldrb	r1, [r4, #0x3]
	str	r1, [sp]
	str	r5, [sp, #0x4]
	mov	r1, r8
	str	r1, [sp, #0x8]
	ldr	r1, [sp, #0x14]
	bl	FillBgTilemapBufferRect
	ldrb	r0, [r4]
	ldrb	r2, [r4, #0x3]
	ldrb	r7, [r4, #0x1]
	add	r2, r2, r7
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldrb	r3, [r4, #0x4]
	ldrb	r1, [r4, #0x2]
	add	r3, r3, r1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	str	r5, [sp]
	str	r5, [sp, #0x4]
	mov	r7, r8
	str	r7, [sp, #0x8]
	add	r1, r6, #0
	bl	FillBgTilemapBufferRect
	ldrb	r0, [r4]
	bl	CopyBgTilemapBufferToVram
	add	sp, sp, #0x1c
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe76:
	.size	 DrawMainMenuWindowBorder,.Lfe76-DrawMainMenuWindowBorder
	.align	2, 0
	.type	 ClearMainMenuWindowTilemap,function
	.thumb_func
ClearMainMenuWindowTilemap:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	add	r6, r0, #0
	ldrb	r0, [r6]
	ldrb	r1, [r6, #0x1]
	sub	r2, r1, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldrb	r4, [r6, #0x2]
	sub	r3, r4, #0x1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldrb	r5, [r6, #0x3]
	add	r1, r1, r5
	add	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	str	r1, [sp]
	ldrb	r1, [r6, #0x4]
	add	r4, r4, r1
	add	r4, r4, #0x1
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	str	r4, [sp, #0x4]
	mov	r1, #0x2
	str	r1, [sp, #0x8]
	mov	r1, #0x0
	bl	FillBgTilemapBufferRect
	ldrb	r0, [r6]
	bl	CopyBgTilemapBufferToVram
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe77:
	.size	 ClearMainMenuWindowTilemap,.Lfe77-ClearMainMenuWindowTilemap
	.align	2, 0
	.type	 NewGameBirchSpeech_ClearGenderWindowTilemap,function
	.thumb_func
NewGameBirchSpeech_ClearGenderWindowTilemap:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	add	r4, r1, #0
	add	r5, r2, #0
	ldr	r1, [sp, #0x18]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsl	r3, r3, #0x18
	lsl	r1, r1, #0x18
	mov	r2, #0xff
	lsl	r2, r2, #0x18
	add	r4, r4, r2
	lsr	r4, r4, #0x18
	add	r5, r5, r2
	lsr	r5, r5, #0x18
	mov	r2, #0x80
	lsl	r2, r2, #0x12
	add	r3, r3, r2
	lsr	r3, r3, #0x18
	str	r3, [sp]
	add	r1, r1, r2
	lsr	r1, r1, #0x18
	str	r1, [sp, #0x4]
	mov	r1, #0x2
	str	r1, [sp, #0x8]
	mov	r1, #0x0
	add	r2, r4, #0
	add	r3, r5, #0
	bl	FillBgTilemapBufferRect
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe78:
	.size	 NewGameBirchSpeech_ClearGenderWindowTilemap,.Lfe78-NewGameBirchSpeech_ClearGenderWindowTilemap
	.align	2, 0
	.type	 NewGameBirchSpeech_ClearGenderWindow,function
	.thumb_func
NewGameBirchSpeech_ClearGenderWindow:
	push	{r4, r5, lr}
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, .L642
	add	r0, r5, #0
	bl	CallWindowFunction
	add	r0, r5, #0
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	add	r0, r5, #0
	bl	ClearWindowTilemap
	cmp	r4, #0x1
	bne	.L641	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
.L641:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L643:
	.align	2, 0
.L642:
	.word	NewGameBirchSpeech_ClearGenderWindowTilemap
.Lfe79:
	.size	 NewGameBirchSpeech_ClearGenderWindow,.Lfe79-NewGameBirchSpeech_ClearGenderWindow
	.align	2, 0
	.type	 NewGameBirchSpeech_ClearWindow,function
	.thumb_func
NewGameBirchSpeech_ClearWindow:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	sp, sp, #-0x8
	add	r6, r0, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	mov	r0, #0x1
	mov	r1, #0x6
	bl	GetFontAttribute
	mov	r9, r0
	mov	r0, r9
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	mov	r0, #0x1
	mov	r1, #0x0
	bl	GetFontAttribute
	mov	r8, r0
	mov	r0, r8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	mov	r0, #0x1
	mov	r1, #0x1
	bl	GetFontAttribute
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	add	r0, r6, #0
	mov	r1, #0x3
	bl	GetWindowAttribute
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r6, #0
	mov	r1, #0x4
	bl	GetWindowAttribute
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, r8
	mul	r1, r1, r4
	str	r1, [sp]
	mul	r0, r0, r5
	str	r0, [sp, #0x4]
	add	r0, r6, #0
	mov	r1, r9
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillWindowPixelRect
	add	r0, r6, #0
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	sp, sp, #0x8
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe80:
	.size	 NewGameBirchSpeech_ClearWindow,.Lfe80-NewGameBirchSpeech_ClearWindow
	.align	2, 0
	.type	 NewGameBirchSpeech_ShowPokeBallPrinterCallback,function
	.thumb_func
NewGameBirchSpeech_ShowPokeBallPrinterCallback:
	push	{lr}
	ldr	r0, [r0]
	sub	r0, r0, #0x2
	ldrb	r0, [r0]
	cmp	r0, #0x8
	bne	.L646	@cond_branch
	ldr	r1, .L647
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.L646	@cond_branch
	mov	r0, #0x1
	strb	r0, [r1]
	ldr	r0, .L647+0x4
	mov	r1, #0x0
	bl	CreateTask
.L646:
	pop	{r0}
	bx	r0
.L648:
	.align	2, 0
.L647:
	.word	gUnknown_02022D04
	.word	Task_NewGameBirchSpeechSub_InitPokeBall
.Lfe81:
	.size	 NewGameBirchSpeech_ShowPokeBallPrinterCallback,.Lfe81-NewGameBirchSpeech_ShowPokeBallPrinterCallback
	.align	2, 0
	.globl	CreateYesNoMenuParameterized
	.type	 CreateYesNoMenuParameterized,function
	.thumb_func
CreateYesNoMenuParameterized:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x20
	add	r4, r0, #0
	add	r5, r1, #0
	mov	r8, r2
	ldr	r6, [sp, #0x34]
	ldr	r1, [sp, #0x38]
	lsl	r4, r4, #0x18
	lsl	r5, r5, #0x18
	mov	r0, r8
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x80
	lsl	r0, r0, #0x11
	add	r4, r4, r0
	lsr	r4, r4, #0x18
	add	r5, r5, r0
	lsr	r5, r5, #0x18
	mov	r0, #0x5
	str	r0, [sp]
	mov	r0, #0x4
	str	r0, [sp, #0x4]
	str	r1, [sp, #0x8]
	str	r3, [sp, #0xc]
	add	r0, sp, #0x10
	mov	r1, #0x0
	add	r2, r4, #0
	add	r3, r5, #0
	bl	CreateWindowTemplate
	ldr	r0, [sp, #0x10]		@ created by thumb_load_double_from_address
	ldr	r1, [sp, #0x14]		@ created by thumb_load_double_from_address
	str	r0, [sp, #0x18]
	str	r1, [sp, #0x1c]
	add	r0, sp, #0x18
	mov	r1, r8
	add	r2, r6, #0
	mov	r3, #0x0
	bl	CreateYesNoMenu
	add	sp, sp, #0x20
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe82:
	.size	 CreateYesNoMenuParameterized,.Lfe82-CreateYesNoMenuParameterized
	.align	2, 0
	.type	 NewGameBirchSpeech_ShowDialogueWindow,function
	.thumb_func
NewGameBirchSpeech_ShowDialogueWindow:
	push	{r4, r5, lr}
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, .L652
	add	r0, r5, #0
	bl	CallWindowFunction
	add	r0, r5, #0
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	add	r0, r5, #0
	bl	PutWindowTilemap
	cmp	r4, #0x1
	bne	.L651	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
.L651:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L653:
	.align	2, 0
.L652:
	.word	NewGameBirchSpeech_CreateDialogueWindowBorder
.Lfe83:
	.size	 NewGameBirchSpeech_ShowDialogueWindow,.Lfe83-NewGameBirchSpeech_ShowDialogueWindow
	.align	2, 0
	.type	 NewGameBirchSpeech_CreateDialogueWindowBorder,function
	.thumb_func
NewGameBirchSpeech_CreateDialogueWindowBorder:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x20
	mov	r8, r0
	add	r5, r2, #0
	mov	r9, r3
	ldr	r0, [sp, #0x40]
	ldr	r6, [sp, #0x44]
	mov	r2, r8
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r8, r2
	lsl	r1, r1, #0x18
	lsl	r5, r5, #0x18
	mov	r2, r9
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r9, r2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x10]
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsr	r0, r1, #0x18
	str	r0, [sp, #0xc]
	mov	r2, #0xfe
	lsl	r2, r2, #0x18
	add	r1, r1, r2
	lsr	r1, r1, #0x18
	str	r1, [sp, #0x14]
	lsr	r0, r5, #0x18
	mov	sl, r0
	mov	r2, #0xff
	lsl	r2, r2, #0x18
	add	r5, r5, r2
	lsr	r5, r5, #0x18
	mov	r4, #0x1
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r0, r8
	mov	r1, #0xfd
	ldr	r2, [sp, #0x14]
	add	r3, r5, #0
	bl	FillBgTilemapBufferRect
	ldr	r0, [sp, #0xc]
	sub	r0, r0, #0x1
	lsl	r2, r0, #0x18
	lsr	r2, r2, #0x18
	str	r2, [sp, #0x18]
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r0, r8
	mov	r1, #0xff
	add	r3, r5, #0
	bl	FillBgTilemapBufferRect
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	mov	r0, r9
	str	r0, [sp]
	str	r4, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r0, r8
	ldr	r2, [sp, #0xc]
	add	r3, r5, #0
	bl	FillBgTilemapBufferRect
	ldr	r1, .L655
	ldr	r7, [sp, #0xc]
	add	r7, r7, r9
	sub	r0, r7, #0x1
	lsl	r2, r0, #0x18
	lsr	r2, r2, #0x18
	str	r2, [sp, #0x1c]
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r0, r8
	add	r3, r5, #0
	bl	FillBgTilemapBufferRect
	mov	r1, #0x81
	lsl	r1, r1, #0x1
	lsl	r2, r7, #0x18
	lsr	r7, r2, #0x18
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r0, r8
	add	r2, r7, #0
	add	r3, r5, #0
	bl	FillBgTilemapBufferRect
	ldr	r1, .L655+0x4
	str	r4, [sp]
	mov	r5, #0x5
	str	r5, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r0, r8
	ldr	r2, [sp, #0x14]
	mov	r3, sl
	bl	FillBgTilemapBufferRect
	ldr	r1, .L655+0x8
	mov	r0, r9
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp]
	str	r5, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r0, r8
	ldr	r2, [sp, #0x18]
	mov	r3, sl
	bl	FillBgTilemapBufferRect
	mov	r1, #0x83
	lsl	r1, r1, #0x1
	str	r4, [sp]
	str	r5, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r0, r8
	add	r2, r7, #0
	mov	r3, sl
	bl	FillBgTilemapBufferRect
	ldr	r1, .L655+0xc
	ldr	r2, [sp, #0x10]
	add	sl, sl, r2
	mov	r0, sl
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r0, r8
	ldr	r2, [sp, #0x14]
	mov	r3, sl
	bl	FillBgTilemapBufferRect
	ldr	r1, .L655+0x10
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r0, r8
	ldr	r2, [sp, #0x18]
	mov	r3, sl
	bl	FillBgTilemapBufferRect
	mov	r1, #0x90
	lsl	r1, r1, #0x4
	mov	r2, #0x1
	neg	r2, r2
	add	r9, r9, r2
	mov	r0, r9
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp]
	str	r4, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r0, r8
	ldr	r2, [sp, #0xc]
	mov	r3, sl
	bl	FillBgTilemapBufferRect
	ldr	r1, .L655+0x14
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r0, r8
	ldr	r2, [sp, #0x1c]
	mov	r3, sl
	bl	FillBgTilemapBufferRect
	ldr	r1, .L655+0x18
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r0, r8
	add	r2, r7, #0
	mov	r3, sl
	bl	FillBgTilemapBufferRect
	add	sp, sp, #0x20
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L656:
	.align	2, 0
.L655:
	.word	0x101
	.word	0x103
	.word	0x105
	.word	0x8fd
	.word	0x8ff
	.word	0x901
	.word	0x902
.Lfe84:
	.size	 NewGameBirchSpeech_CreateDialogueWindowBorder,.Lfe84-NewGameBirchSpeech_CreateDialogueWindowBorder
	.align	2, 0
	.type	 Task_NewGameBirchSpeech_ReturnFromNamingScreenShowTextbox,function
	.thumb_func
Task_NewGameBirchSpeech_ReturnFromNamingScreenShowTextbox:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L659
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
	ldrh	r0, [r4, #0x16]
	sub	r1, r0, #0x1
	strh	r1, [r4, #0x16]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bgt	.L658	@cond_branch
	mov	r0, #0x0
	mov	r1, #0x1
	bl	NewGameBirchSpeech_ShowDialogueWindow
	ldr	r0, .L659+0x4
	str	r0, [r4]
.L658:
	pop	{r4}
	pop	{r0}
	bx	r0
.L660:
	.align	2, 0
.L659:
	.word	gTasks
	.word	Task_NewGameBirchSpeech_SoItsPlayerName
.Lfe85:
	.size	 Task_NewGameBirchSpeech_ReturnFromNamingScreenShowTextbox,.Lfe85-Task_NewGameBirchSpeech_ReturnFromNamingScreenShowTextbox

	.lcomm	sBirchSpeechMainTaskId,1
.text
	.align	2, 0

