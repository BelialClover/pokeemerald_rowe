@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sDebugMonData,object
	.size	 sDebugMonData,4
sDebugMonData:
	.word	0x0
	.section .rodata
	.type	 MAP_GROUP_COUNT,object
MAP_GROUP_COUNT:
	.byte	0x39
	.byte	0x5
	.byte	0x5
	.byte	0x6
	.byte	0x7
	.byte	0x8
	.byte	0x9
	.byte	0x7
	.byte	0x7
	.byte	0xe
	.byte	0x8
	.byte	0x11
	.byte	0xa
	.byte	0x17
	.byte	0xd
	.byte	0xf
	.byte	0xf
	.byte	0x2
	.byte	0x2
	.byte	0x2
	.byte	0x3
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x6c
	.byte	0x3d
	.byte	0x59
	.byte	0x2
	.byte	0x1
	.byte	0xd
	.byte	0x1
	.byte	0x1
	.byte	0x3
	.byte	0x1
	.byte	0x0
	.size	 MAP_GROUP_COUNT,35
	.type	 gDebugText_Utilities,object
gDebugText_Utilities:
	.byte	0xcf
	.byte	0xe8
	.byte	0xdd
	.byte	0xe0
	.byte	0xdd
	.byte	0xe8
	.byte	0xdd
	.byte	0xd9
	.byte	0xe7
	.byte	0xff
	.size	 gDebugText_Utilities,10
	.type	 gDebugText_Flags,object
gDebugText_Flags:
	.byte	0xc0
	.byte	0xe0
	.byte	0xd5
	.byte	0xdb
	.byte	0xe7
	.byte	0xff
	.size	 gDebugText_Flags,6
	.type	 gDebugText_Vars,object
gDebugText_Vars:
	.byte	0xd0
	.byte	0xd5
	.byte	0xe6
	.byte	0xdd
	.byte	0xd5
	.byte	0xd6
	.byte	0xe0
	.byte	0xd9
	.byte	0xe7
	.byte	0xff
	.size	 gDebugText_Vars,10
	.type	 gDebugText_Give,object
gDebugText_Give:
	.byte	0xc1
	.byte	0xdd
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xd2
	.byte	0xff
	.size	 gDebugText_Give,7
	.type	 gDebugText_Cancel,object
gDebugText_Cancel:
	.byte	0xbd
	.byte	0xd5
	.byte	0xe2
	.byte	0xd7
	.byte	0xd9
	.byte	0xe0
	.byte	0xff
	.size	 gDebugText_Cancel,7
	.type	 gDebugText_Util_HealParty,object
gDebugText_Util_HealParty:
	.byte	0xc2
	.byte	0xd9
	.byte	0xd5
	.byte	0xe0
	.byte	0x0
	.byte	0xca
	.byte	0xd5
	.byte	0xe6
	.byte	0xe8
	.byte	0xed
	.byte	0xff
	.size	 gDebugText_Util_HealParty,11
	.type	 gDebugText_Util_Fly,object
gDebugText_Util_Fly:
	.byte	0xc0
	.byte	0xe0
	.byte	0xed
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe1
	.byte	0xd5
	.byte	0xe4
	.byte	0xff
	.size	 gDebugText_Util_Fly,11
	.type	 gDebugText_Util_WarpToMap,object
gDebugText_Util_WarpToMap:
	.byte	0xd1
	.byte	0xd5
	.byte	0xe6
	.byte	0xe4
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe1
	.byte	0xd5
	.byte	0xe4
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xe6
	.byte	0xe4
	.byte	0xff
	.size	 gDebugText_Util_WarpToMap,17
	.type	 gDebugText_Util_WarpToMap_SelectMapGroup,object
gDebugText_Util_WarpToMap_SelectMapGroup:
	.byte	0xc1
	.byte	0xe6
	.byte	0xe3
	.byte	0xe9
	.byte	0xe4
	.byte	0xf0
	.byte	0x0
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfe
	.byte	0xfd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.size	 gDebugText_Util_WarpToMap_SelectMapGroup,47
	.type	 gDebugText_Util_WarpToMap_SelectMap,object
gDebugText_Util_WarpToMap_SelectMap:
	.byte	0xc7
	.byte	0xd5
	.byte	0xe4
	.byte	0xf0
	.byte	0x0
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xc7
	.byte	0xd5
	.byte	0xe4
	.byte	0xcd
	.byte	0xd9
	.byte	0xd7
	.byte	0xf0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.size	 gDebugText_Util_WarpToMap_SelectMap,72
	.type	 gDebugText_Util_WarpToMap_SelectWarp,object
gDebugText_Util_WarpToMap_SelectWarp:
	.byte	0xd1
	.byte	0xd5
	.byte	0xe6
	.byte	0xe4
	.byte	0xf0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.size	 gDebugText_Util_WarpToMap_SelectWarp,81
	.type	 gDebugText_Util_WarpToMap_SelMax,object
gDebugText_Util_WarpToMap_SelMax:
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0xba
	.byte	0x0
	.byte	0xfd
	.byte	0x3
	.byte	0xff
	.size	 gDebugText_Util_WarpToMap_SelMax,8
	.type	 gDebugText_Util_SaveBlockSpace,object
gDebugText_Util_SaveBlockSpace:
	.byte	0xcd
	.byte	0xd5
	.byte	0xea
	.byte	0xd9
	.byte	0xbc
	.byte	0xe0
	.byte	0xe3
	.byte	0xd7
	.byte	0xdf
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xd5
	.byte	0xd7
	.byte	0xd9
	.byte	0xff
	.size	 gDebugText_Util_SaveBlockSpace,16
	.type	 gDebugText_Util_CheckWallClock,object
gDebugText_Util_CheckWallClock:
	.byte	0xbd
	.byte	0xdc
	.byte	0xd9
	.byte	0xd7
	.byte	0xdf
	.byte	0x0
	.byte	0xd1
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xbd
	.byte	0xe0
	.byte	0xe3
	.byte	0xd7
	.byte	0xdf
	.byte	0xff
	.size	 gDebugText_Util_CheckWallClock,17
	.type	 gDebugText_Util_SetWallClock,object
gDebugText_Util_SetWallClock:
	.byte	0xcd
	.byte	0xd9
	.byte	0xe8
	.byte	0x0
	.byte	0xd1
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xbd
	.byte	0xe0
	.byte	0xe3
	.byte	0xd7
	.byte	0xdf
	.byte	0xff
	.size	 gDebugText_Util_SetWallClock,15
	.type	 gDebugText_Util_CheckWeekDay,object
gDebugText_Util_CheckWeekDay:
	.byte	0xbd
	.byte	0xdc
	.byte	0xd9
	.byte	0xd7
	.byte	0xdf
	.byte	0x0
	.byte	0xd1
	.byte	0xd9
	.byte	0xd9
	.byte	0xdf
	.byte	0x0
	.byte	0xbe
	.byte	0xd5
	.byte	0xed
	.byte	0xff
	.size	 gDebugText_Util_CheckWeekDay,15
	.type	 gDebugText_Util_WatchCredits,object
gDebugText_Util_WatchCredits:
	.byte	0xd1
	.byte	0xd5
	.byte	0xe8
	.byte	0xd7
	.byte	0xdc
	.byte	0x0
	.byte	0xbd
	.byte	0xe6
	.byte	0xd9
	.byte	0xd8
	.byte	0xdd
	.byte	0xe8
	.byte	0xe7
	.byte	0xff
	.size	 gDebugText_Util_WatchCredits,14
	.type	 gDebugText_Util_Trainer_Name,object
gDebugText_Util_Trainer_Name:
	.byte	0xce
	.byte	0xe6
	.byte	0xd5
	.byte	0xdd
	.byte	0xe2
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe2
	.byte	0xd5
	.byte	0xe1
	.byte	0xd9
	.byte	0xff
	.size	 gDebugText_Util_Trainer_Name,13
	.type	 gDebugText_Util_Trainer_Gender,object
gDebugText_Util_Trainer_Gender:
	.byte	0xce
	.byte	0xe3
	.byte	0xdb
	.byte	0xdb
	.byte	0xe0
	.byte	0xd9
	.byte	0x0
	.byte	0xce
	.byte	0xad
	.byte	0x0
	.byte	0xc1
	.byte	0xd9
	.byte	0xe2
	.byte	0xd8
	.byte	0xd9
	.byte	0xe6
	.byte	0xff
	.size	 gDebugText_Util_Trainer_Gender,17
	.type	 gDebugText_Util_Trainer_Id,object
gDebugText_Util_Trainer_Id:
	.byte	0xc8
	.byte	0xd9
	.byte	0xeb
	.byte	0x0
	.byte	0xce
	.byte	0xe6
	.byte	0xd5
	.byte	0xdd
	.byte	0xe2
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xc3
	.byte	0xd8
	.byte	0xff
	.size	 gDebugText_Util_Trainer_Id,15
	.type	 gDebugText_Flags_Flags,object
gDebugText_Flags_Flags:
	.byte	0xcd
	.byte	0xd9
	.byte	0xe8
	.byte	0x0
	.byte	0xc0
	.byte	0xe0
	.byte	0xd5
	.byte	0xdb
	.byte	0x0
	.byte	0xd2
	.byte	0xd2
	.byte	0xd2
	.byte	0xd2
	.byte	0xff
	.size	 gDebugText_Flags_Flags,14
	.type	 gDebugText_Flags_SetPokedexFlags,object
gDebugText_Flags_SetPokedexFlags:
	.byte	0xbb
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xca
	.byte	0xe3
	.byte	0xdf
	.byte	0x1b
	.byte	0xd8
	.byte	0xd9
	.byte	0xec
	.byte	0x0
	.byte	0xc0
	.byte	0xe0
	.byte	0xd5
	.byte	0xdb
	.byte	0xe7
	.byte	0xff
	.size	 gDebugText_Flags_SetPokedexFlags,18
	.type	 gDebugText_Flags_SwitchDex,object
gDebugText_Flags_SwitchDex:
	.byte	0xca
	.byte	0xe3
	.byte	0xdf
	.byte	0x1b
	.byte	0xd8
	.byte	0xd9
	.byte	0xec
	.byte	0x0
	.byte	0xc9
	.byte	0xc8
	.byte	0xba
	.byte	0xc9
	.byte	0xc0
	.byte	0xc0
	.byte	0xff
	.size	 gDebugText_Flags_SwitchDex,15
	.type	 gDebugText_Flags_SwitchNationalDex,object
gDebugText_Flags_SwitchNationalDex:
	.byte	0xc8
	.byte	0xd5
	.byte	0xe8
	.byte	0xbe
	.byte	0xd9
	.byte	0xec
	.byte	0x0
	.byte	0xc9
	.byte	0xc8
	.byte	0xba
	.byte	0xc9
	.byte	0xc0
	.byte	0xc0
	.byte	0xff
	.size	 gDebugText_Flags_SwitchNationalDex,14
	.type	 gDebugText_Flags_SwitchPokeNav,object
gDebugText_Flags_SwitchPokeNav:
	.byte	0xca
	.byte	0xe3
	.byte	0xdf
	.byte	0x1b
	.byte	0xc8
	.byte	0xd5
	.byte	0xea
	.byte	0x0
	.byte	0xc9
	.byte	0xc8
	.byte	0xba
	.byte	0xc9
	.byte	0xc0
	.byte	0xc0
	.byte	0xff
	.size	 gDebugText_Flags_SwitchPokeNav,15
	.type	 gDebugText_Flags_SwitchDexNav,object
gDebugText_Flags_SwitchDexNav:
	.byte	0xbe
	.byte	0xd9
	.byte	0xec
	.byte	0xc8
	.byte	0xd5
	.byte	0xea
	.byte	0x0
	.byte	0xc9
	.byte	0xc8
	.byte	0xba
	.byte	0xc9
	.byte	0xc0
	.byte	0xc0
	.byte	0xff
	.size	 gDebugText_Flags_SwitchDexNav,14
	.type	 gDebugText_Flags_ToggleFlyFlags,object
gDebugText_Flags_ToggleFlyFlags:
	.byte	0xc0
	.byte	0xe0
	.byte	0xed
	.byte	0x0
	.byte	0xc0
	.byte	0xe0
	.byte	0xd5
	.byte	0xdb
	.byte	0xe7
	.byte	0x0
	.byte	0xc9
	.byte	0xc8
	.byte	0xba
	.byte	0xc9
	.byte	0xc0
	.byte	0xc0
	.byte	0xff
	.size	 gDebugText_Flags_ToggleFlyFlags,17
	.type	 gDebugText_Flags_ToggleAllBadges,object
gDebugText_Flags_ToggleAllBadges:
	.byte	0xbb
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xd8
	.byte	0xdb
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xc9
	.byte	0xc8
	.byte	0xba
	.byte	0xc9
	.byte	0xc0
	.byte	0xc0
	.byte	0xff
	.size	 gDebugText_Flags_ToggleAllBadges,18
	.type	 gDebugText_Flags_SwitchCollision,object
gDebugText_Flags_SwitchCollision:
	.byte	0xbd
	.byte	0xe3
	.byte	0xe0
	.byte	0xe0
	.byte	0xdd
	.byte	0xe7
	.byte	0xdd
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xc9
	.byte	0xc8
	.byte	0xba
	.byte	0xc9
	.byte	0xc0
	.byte	0xc0
	.byte	0xff
	.size	 gDebugText_Flags_SwitchCollision,17
	.type	 gDebugText_Flags_SwitchEncounter,object
gDebugText_Flags_SwitchEncounter:
	.byte	0xbf
	.byte	0xe2
	.byte	0xd7
	.byte	0xe3
	.byte	0xe9
	.byte	0xe2
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xc9
	.byte	0xc8
	.byte	0xba
	.byte	0xc9
	.byte	0xc0
	.byte	0xc0
	.byte	0xff
	.size	 gDebugText_Flags_SwitchEncounter,17
	.type	 gDebugText_Flags_SwitchTrainerSee,object
gDebugText_Flags_SwitchTrainerSee:
	.byte	0xce
	.byte	0xe6
	.byte	0xd5
	.byte	0xdd
	.byte	0xe2
	.byte	0xd9
	.byte	0xe6
	.byte	0xcd
	.byte	0xd9
	.byte	0xd9
	.byte	0x0
	.byte	0xc9
	.byte	0xc8
	.byte	0xba
	.byte	0xc9
	.byte	0xc0
	.byte	0xc0
	.byte	0xff
	.size	 gDebugText_Flags_SwitchTrainerSee,18
	.type	 gDebugText_Flags_SwitchBagUse,object
gDebugText_Flags_SwitchBagUse:
	.byte	0xbc
	.byte	0xd5
	.byte	0xdb
	.byte	0xcf
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xc9
	.byte	0xc8
	.byte	0xba
	.byte	0xc9
	.byte	0xc0
	.byte	0xc0
	.byte	0xff
	.size	 gDebugText_Flags_SwitchBagUse,14
	.type	 gDebugText_Flags_SwitchCatching,object
gDebugText_Flags_SwitchCatching:
	.byte	0xbd
	.byte	0xd5
	.byte	0xe8
	.byte	0xd7
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xc9
	.byte	0xc8
	.byte	0xba
	.byte	0xc9
	.byte	0xc0
	.byte	0xc0
	.byte	0xff
	.size	 gDebugText_Flags_SwitchCatching,16
	.type	 gDebugText_Flag,object
gDebugText_Flag:
	.byte	0xc0
	.byte	0xe0
	.byte	0xd5
	.byte	0xdb
	.byte	0xf0
	.byte	0x0
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x4
	.byte	0xff
	.size	 gDebugText_Flag,37
	.type	 gDebugText_FlagHex,object
gDebugText_FlagHex:
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xa1
	.byte	0xec
	.byte	0xfd
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.size	 gDebugText_FlagHex,32
	.type	 gDebugText_FlagSet,object
gDebugText_FlagSet:
	.byte	0xce
	.byte	0xcc
	.byte	0xcf
	.byte	0xbf
	.byte	0xff
	.size	 gDebugText_FlagSet,5
	.type	 gDebugText_FlagUnset,object
gDebugText_FlagUnset:
	.byte	0xc0
	.byte	0xbb
	.byte	0xc6
	.byte	0xcd
	.byte	0xbf
	.byte	0xff
	.size	 gDebugText_FlagUnset,6
	.type	 gDebugText_Vars_Vars,object
gDebugText_Vars_Vars:
	.byte	0xcd
	.byte	0xd9
	.byte	0xe8
	.byte	0x0
	.byte	0xd0
	.byte	0xd5
	.byte	0xe6
	.byte	0xe7
	.byte	0x0
	.byte	0xd2
	.byte	0xd2
	.byte	0xd2
	.byte	0xd2
	.byte	0xff
	.size	 gDebugText_Vars_Vars,14
	.type	 gDebugText_VariableHex,object
gDebugText_VariableHex:
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xa1
	.byte	0xec
	.byte	0xfd
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.size	 gDebugText_VariableHex,32
	.type	 gDebugText_Variable,object
gDebugText_Variable:
	.byte	0xd0
	.byte	0xd5
	.byte	0xe6
	.byte	0xf0
	.byte	0x0
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xd0
	.byte	0xd5
	.byte	0xe0
	.byte	0xf0
	.byte	0x0
	.byte	0xfd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x3
	.byte	0xff
	.size	 gDebugText_Variable,45
	.type	 gDebugText_VariableValueSet,object
gDebugText_VariableValueSet:
	.byte	0xd0
	.byte	0xd5
	.byte	0xe6
	.byte	0xf0
	.byte	0x0
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xd0
	.byte	0xd5
	.byte	0xe0
	.byte	0xf0
	.byte	0x0
	.byte	0xfd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x3
	.byte	0xff
	.size	 gDebugText_VariableValueSet,45
	.type	 gDebugText_Give_GiveItem,object
gDebugText_Give_GiveItem:
	.byte	0xc1
	.byte	0xdd
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xdd
	.byte	0xe8
	.byte	0xd9
	.byte	0xe1
	.byte	0x0
	.byte	0xd2
	.byte	0xd2
	.byte	0xd2
	.byte	0xd2
	.byte	0xff
	.size	 gDebugText_Give_GiveItem,15
	.type	 gDebugText_ItemQuantity,object
gDebugText_ItemQuantity:
	.byte	0xcb
	.byte	0xe9
	.byte	0xd5
	.byte	0xe2
	.byte	0xe8
	.byte	0xdd
	.byte	0xe8
	.byte	0xed
	.byte	0xf0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfe
	.byte	0xfd
	.byte	0x3
	.byte	0xff
	.size	 gDebugText_ItemQuantity,28
	.type	 gDebugText_ItemID,object
gDebugText_ItemID:
	.byte	0xc3
	.byte	0xe8
	.byte	0xd9
	.byte	0xe1
	.byte	0x0
	.byte	0xc3
	.byte	0xd8
	.byte	0xf0
	.byte	0x0
	.byte	0xfd
	.byte	0x4
	.byte	0xfe
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfe
	.byte	0xfd
	.byte	0x3
	.byte	0xff
	.size	 gDebugText_ItemID,23
	.type	 gDebugText_Give_AllTMs,object
gDebugText_Give_AllTMs:
	.byte	0xc1
	.byte	0xdd
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xce
	.byte	0xc7
	.byte	0xe7
	.byte	0xff
	.size	 gDebugText_Give_AllTMs,13
	.type	 gDebugText_Give_GivePokemonSimple,object
gDebugText_Give_GivePokemonSimple:
	.byte	0xca
	.byte	0xdf
	.byte	0xe1
	.byte	0x5c
	.byte	0xe0
	.byte	0xea
	.byte	0xe0
	.byte	0x5d
	.byte	0xff
	.size	 gDebugText_Give_GivePokemonSimple,9
	.type	 gDebugText_Give_GivePokemonComplex,object
gDebugText_Give_GivePokemonComplex:
	.byte	0xca
	.byte	0xdf
	.byte	0xe1
	.byte	0x5c
	.byte	0xe0
	.byte	0xb8
	.byte	0xe7
	.byte	0xb8
	.byte	0xe2
	.byte	0xb8
	.byte	0xd5
	.byte	0xb8
	.byte	0xc3
	.byte	0xd0
	.byte	0xb8
	.byte	0xe1
	.byte	0xe3
	.byte	0xea
	.byte	0x5d
	.byte	0xff
	.size	 gDebugText_Give_GivePokemonComplex,20
	.type	 gDebugText_PokemonID,object
gDebugText_PokemonID:
	.byte	0xcd
	.byte	0xe4
	.byte	0xd9
	.byte	0xd7
	.byte	0xdd
	.byte	0xd9
	.byte	0xe7
	.byte	0xf0
	.byte	0x0
	.byte	0xfd
	.byte	0x4
	.byte	0xfe
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfe
	.byte	0xfd
	.byte	0x3
	.byte	0xff
	.size	 gDebugText_PokemonID,23
	.type	 gDebugText_PokemonLevel,object
gDebugText_PokemonLevel:
	.byte	0xc6
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe0
	.byte	0xf0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x3
	.byte	0xff
	.size	 gDebugText_PokemonLevel,54
	.type	 gDebugText_PokemonShiny,object
gDebugText_PokemonShiny:
	.byte	0xcd
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xed
	.byte	0xf0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfd
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.size	 gDebugText_PokemonShiny,77
	.type	 gDebugText_PokemonNature,object
gDebugText_PokemonNature:
	.byte	0xc8
	.byte	0xd5
	.byte	0xe8
	.byte	0xe9
	.byte	0xe6
	.byte	0xd9
	.byte	0xc3
	.byte	0xd8
	.byte	0xf0
	.byte	0x0
	.byte	0xfd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x3
	.byte	0xff
	.size	 gDebugText_PokemonNature,50
	.type	 gDebugText_PokemonAbility,object
gDebugText_PokemonAbility:
	.byte	0xbb
	.byte	0xd6
	.byte	0xdd
	.byte	0xe0
	.byte	0xdd
	.byte	0xe8
	.byte	0xed
	.byte	0xc8
	.byte	0xe9
	.byte	0xe1
	.byte	0xf0
	.byte	0x0
	.byte	0xfd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x3
	.byte	0xff
	.size	 gDebugText_PokemonAbility,52
	.type	 gDebugText_PokemonIVs,object
gDebugText_PokemonIVs:
	.byte	0xbb
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xc3
	.byte	0xd0
	.byte	0xe7
	.byte	0xf0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.size	 gDebugText_PokemonIVs,70
	.type	 gDebugText_PokemonIV_0,object
gDebugText_PokemonIV_0:
	.byte	0xc3
	.byte	0xd0
	.byte	0x0
	.byte	0xc2
	.byte	0xca
	.byte	0xf0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.size	 gDebugText_PokemonIV_0,68
	.type	 gDebugText_PokemonIV_1,object
gDebugText_PokemonIV_1:
	.byte	0xc3
	.byte	0xd0
	.byte	0x0
	.byte	0xbb
	.byte	0xe8
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xdf
	.byte	0xf0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.size	 gDebugText_PokemonIV_1,72
	.type	 gDebugText_PokemonIV_2,object
gDebugText_PokemonIV_2:
	.byte	0xc3
	.byte	0xd0
	.byte	0x0
	.byte	0xbe
	.byte	0xd9
	.byte	0xda
	.byte	0xd9
	.byte	0xe2
	.byte	0xe7
	.byte	0xd9
	.byte	0xf0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.size	 gDebugText_PokemonIV_2,73
	.type	 gDebugText_PokemonIV_3,object
gDebugText_PokemonIV_3:
	.byte	0xc3
	.byte	0xd0
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0xf0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.size	 gDebugText_PokemonIV_3,71
	.type	 gDebugText_PokemonIV_4,object
gDebugText_PokemonIV_4:
	.byte	0xc3
	.byte	0xd0
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xad
	.byte	0x0
	.byte	0xbb
	.byte	0xe8
	.byte	0xe8
	.byte	0xd5
	.byte	0xd7
	.byte	0xdf
	.byte	0xf0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.size	 gDebugText_PokemonIV_4,76
	.type	 gDebugText_PokemonIV_5,object
gDebugText_PokemonIV_5:
	.byte	0xc3
	.byte	0xd0
	.byte	0x0
	.byte	0xcd
	.byte	0xe4
	.byte	0xad
	.byte	0x0
	.byte	0xbe
	.byte	0xd9
	.byte	0xda
	.byte	0xd9
	.byte	0xe2
	.byte	0xe7
	.byte	0xd9
	.byte	0xf0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.size	 gDebugText_PokemonIV_5,77
	.type	 gDebugText_PokemonMove_0,object
gDebugText_PokemonMove_0:
	.byte	0xc7
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xa1
	.byte	0xf0
	.byte	0x0
	.byte	0xfd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x3
	.byte	0xff
	.size	 gDebugText_PokemonMove_0,58
	.type	 gDebugText_PokemonMove_1,object
gDebugText_PokemonMove_1:
	.byte	0xc7
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xa2
	.byte	0xf0
	.byte	0x0
	.byte	0xfd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x3
	.byte	0xff
	.size	 gDebugText_PokemonMove_1,58
	.type	 gDebugText_PokemonMove_2,object
gDebugText_PokemonMove_2:
	.byte	0xc7
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xa3
	.byte	0xf0
	.byte	0x0
	.byte	0xfd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x3
	.byte	0xff
	.size	 gDebugText_PokemonMove_2,58
	.type	 gDebugText_PokemonMove_3,object
gDebugText_PokemonMove_3:
	.byte	0xc7
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xa4
	.byte	0xf0
	.byte	0x0
	.byte	0xfd
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xfe
	.byte	0xfd
	.byte	0x3
	.byte	0xff
	.size	 gDebugText_PokemonMove_3,58
	.type	 gDebugText_Give_GiveCHEAT,object
gDebugText_Give_GiveCHEAT:
	.byte	0xbd
	.byte	0xc2
	.byte	0xbf
	.byte	0xbb
	.byte	0xce
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe6
	.byte	0xe8
	.byte	0xff
	.size	 gDebugText_Give_GiveCHEAT,12
	.type	 digitInidicator_1,object
digitInidicator_1:
	.byte	0x7b
	.byte	0x2e
	.byte	0xa2
	.byte	0x7c
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.size	 digitInidicator_1,13
	.type	 digitInidicator_10,object
digitInidicator_10:
	.byte	0x7b
	.byte	0x2e
	.byte	0xa2
	.byte	0xa1
	.byte	0x7c
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.size	 digitInidicator_10,13
	.type	 digitInidicator_100,object
digitInidicator_100:
	.byte	0x7b
	.byte	0x2e
	.byte	0xa2
	.byte	0xa1
	.byte	0xa1
	.byte	0x7c
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.size	 digitInidicator_100,13
	.type	 digitInidicator_1000,object
digitInidicator_1000:
	.byte	0x7b
	.byte	0x2e
	.byte	0xa2
	.byte	0xa1
	.byte	0xa1
	.byte	0xa1
	.byte	0x7c
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.size	 digitInidicator_1000,13
	.type	 digitInidicator_10000,object
digitInidicator_10000:
	.byte	0x7b
	.byte	0x2e
	.byte	0xa2
	.byte	0xa1
	.byte	0xa1
	.byte	0xa1
	.byte	0xa1
	.byte	0x7c
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.size	 digitInidicator_10000,13
	.type	 digitInidicator_100000,object
digitInidicator_100000:
	.byte	0x7b
	.byte	0x2e
	.byte	0xa2
	.byte	0xa1
	.byte	0xa1
	.byte	0xa1
	.byte	0xa1
	.byte	0xa1
	.byte	0x7c
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.size	 digitInidicator_100000,13
	.type	 digitInidicator_1000000,object
digitInidicator_1000000:
	.byte	0x7b
	.byte	0x2e
	.byte	0xa2
	.byte	0xa1
	.byte	0xa1
	.byte	0xa1
	.byte	0xa1
	.byte	0xa1
	.byte	0xa1
	.byte	0x7c
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.size	 digitInidicator_1000000,13
	.type	 digitInidicator_10000000,object
digitInidicator_10000000:
	.byte	0x7b
	.byte	0x2e
	.byte	0xa2
	.byte	0xa1
	.byte	0xa1
	.byte	0xa1
	.byte	0xa1
	.byte	0xa1
	.byte	0xa1
	.byte	0xa1
	.byte	0x7c
	.byte	0x0
	.byte	0xff
	.size	 digitInidicator_10000000,13
	.globl	gText_DigitIndicator
	.align	2, 0
	.type	 gText_DigitIndicator,object
gText_DigitIndicator:
	.word	digitInidicator_1
	.word	digitInidicator_10
	.word	digitInidicator_100
	.word	digitInidicator_1000
	.word	digitInidicator_10000
	.word	digitInidicator_100000
	.word	digitInidicator_1000000
	.word	digitInidicator_10000000
	.size	 gText_DigitIndicator,32
	.align	2, 0
	.type	 sPowersOfTen,object
sPowersOfTen:
	.word	0x1
	.word	0xa
	.word	0x64
	.word	0x3e8
	.word	0x2710
	.word	0x186a0
	.word	0xf4240
	.word	0x989680
	.word	0x5f5e100
	.word	0x3b9aca00
	.size	 sPowersOfTen,40
	.align	2, 0
	.type	 sDebugMenu_Items_Main,object
sDebugMenu_Items_Main:
	.word	gDebugText_Utilities
	.word	0x0
	.word	gDebugText_Flags
	.word	0x1
	.word	gDebugText_Vars
	.word	0x2
	.word	gDebugText_Give
	.word	0x3
	.word	gDebugText_Cancel
	.word	0x4
	.size	 sDebugMenu_Items_Main,40
	.align	2, 0
	.type	 sDebugMenu_Items_Utilities,object
sDebugMenu_Items_Utilities:
	.word	gDebugText_Util_HealParty
	.word	0x0
	.word	gDebugText_Util_Fly
	.word	0x1
	.word	gDebugText_Util_WarpToMap
	.word	0x2
	.word	gDebugText_Util_SaveBlockSpace
	.word	0x3
	.word	gDebugText_Util_CheckWallClock
	.word	0x4
	.word	gDebugText_Util_SetWallClock
	.word	0x5
	.word	gDebugText_Util_CheckWeekDay
	.word	0x6
	.word	gDebugText_Util_WatchCredits
	.word	0x7
	.word	gDebugText_Util_Trainer_Name
	.word	0x8
	.word	gDebugText_Util_Trainer_Gender
	.word	0x9
	.word	gDebugText_Util_Trainer_Id
	.word	0xa
	.size	 sDebugMenu_Items_Utilities,88
	.align	2, 0
	.type	 sDebugMenu_Items_Flags,object
sDebugMenu_Items_Flags:
	.word	gDebugText_Flags_Flags
	.word	0x0
	.word	gDebugText_Flags_SetPokedexFlags
	.word	0x1
	.word	gDebugText_Flags_SwitchDex
	.word	0x2
	.word	gDebugText_Flags_SwitchNationalDex
	.word	0x3
	.word	gDebugText_Flags_SwitchPokeNav
	.word	0x4
	.word	gDebugText_Flags_SwitchDexNav
	.word	0x5
	.word	gDebugText_Flags_ToggleFlyFlags
	.word	0x6
	.word	gDebugText_Flags_ToggleAllBadges
	.word	0x7
	.word	gDebugText_Flags_SwitchCollision
	.word	0x8
	.word	gDebugText_Flags_SwitchEncounter
	.word	0x9
	.word	gDebugText_Flags_SwitchTrainerSee
	.word	0xa
	.word	gDebugText_Flags_SwitchBagUse
	.word	0xb
	.word	gDebugText_Flags_SwitchCatching
	.word	0xc
	.size	 sDebugMenu_Items_Flags,104
	.align	2, 0
	.type	 sDebugMenu_Items_Vars,object
sDebugMenu_Items_Vars:
	.word	gDebugText_Vars_Vars
	.word	0x0
	.size	 sDebugMenu_Items_Vars,8
	.align	2, 0
	.type	 sDebugMenu_Items_Give,object
sDebugMenu_Items_Give:
	.word	gDebugText_Give_GiveItem
	.word	0x0
	.word	gDebugText_Give_AllTMs
	.word	0x1
	.word	gDebugText_Give_GivePokemonSimple
	.word	0x2
	.word	gDebugText_Give_GivePokemonComplex
	.word	0x3
	.word	gDebugText_Give_GiveCHEAT
	.word	0x4
	.size	 sDebugMenu_Items_Give,40
	.align	2, 0
	.type	 sDebugMenu_Actions_Main,object
sDebugMenu_Actions_Main:
	.word	DebugAction_OpenUtilitiesMenu
	.word	DebugAction_OpenFlagsMenu
	.word	DebugAction_OpenVariablesMenu
	.word	DebugAction_OpenGiveMenu
	.word	DebugAction_Cancel
	.size	 sDebugMenu_Actions_Main,20
	.align	2, 0
	.type	 sDebugMenu_Actions_Utilities,object
sDebugMenu_Actions_Utilities:
	.word	DebugAction_Util_HealParty
	.word	DebugAction_Util_Fly
	.word	DebugAction_Util_Warp_Warp
	.word	DebugAction_Util_CheckSaveBlock
	.word	DebugAction_Util_CheckWallClock
	.word	DebugAction_Util_SetWallClock
	.word	DebugAction_Util_CheckWeekDay
	.word	DebugAction_Util_WatchCredits
	.word	DebugAction_Util_Trainer_Name
	.word	DebugAction_Util_Trainer_Gender
	.word	DebugAction_Util_Trainer_Id
	.size	 sDebugMenu_Actions_Utilities,44
	.align	2, 0
	.type	 sDebugMenu_Actions_Flags,object
sDebugMenu_Actions_Flags:
	.word	DebugAction_Flags_Flags
	.word	DebugAction_Flags_SetPokedexFlags
	.word	DebugAction_Flags_SwitchDex
	.word	DebugAction_Flags_SwitchNatDex
	.word	DebugAction_Flags_SwitchPokeNav
	.word	DebugAction_Flags_SwitchDexNav
	.word	DebugAction_Flags_ToggleFlyFlags
	.word	DebugAction_Flags_ToggleBadgeFlags
	.word	DebugAction_Flags_CollisionOnOff
	.word	DebugAction_Flags_EncounterOnOff
	.word	DebugAction_Flags_TrainerSeeOnOff
	.word	DebugAction_Flags_BagUseOnOff
	.word	DebugAction_Flags_CatchingOnOff
	.size	 sDebugMenu_Actions_Flags,52
	.align	2, 0
	.type	 sDebugMenu_Actions_Vars,object
sDebugMenu_Actions_Vars:
	.word	DebugAction_Vars_Vars
	.size	 sDebugMenu_Actions_Vars,4
	.align	2, 0
	.type	 sDebugMenu_Actions_Give,object
sDebugMenu_Actions_Give:
	.word	DebugAction_Give_Item
	.word	DebugAction_Give_AllTMs
	.word	DebugAction_Give_PokemonSimple
	.word	DebugAction_Give_PokemonComplex
	.word	DebugAction_Give_CHEAT
	.size	 sDebugMenu_Actions_Give,20
	.align	2, 0
	.type	 sDebugMenuWindowTemplate,object
	.size	 sDebugMenuWindowTemplate,8
sDebugMenuWindowTemplate:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0xd
	.byte	0x10
	.byte	0xf
	.short	0x1
	.align	2, 0
	.type	 sDebugNumberDisplayWindowTemplate,object
	.size	 sDebugNumberDisplayWindowTemplate,8
sDebugNumberDisplayWindowTemplate:
	.byte	0x0
	.byte	0x13
	.byte	0x1
	.byte	0xa
	.byte	0x8
	.byte	0xf
	.short	0x1
	.align	2, 0
	.type	 sDebugMenu_ListTemplate_Main,object
	.size	 sDebugMenu_ListTemplate_Main,24
sDebugMenu_ListTemplate_Main:
	.word	sDebugMenu_Items_Main
	.word	ListMenuDefaultCursorMoveFunc
	.space	4
	.short	0x5
	.space	10
	.align	2, 0
	.type	 sDebugMenu_ListTemplate_Utilities,object
	.size	 sDebugMenu_ListTemplate_Utilities,24
sDebugMenu_ListTemplate_Utilities:
	.word	sDebugMenu_Items_Utilities
	.word	ListMenuDefaultCursorMoveFunc
	.space	4
	.short	0xb
	.space	10
	.align	2, 0
	.type	 sDebugMenu_ListTemplate_Flags,object
	.size	 sDebugMenu_ListTemplate_Flags,24
sDebugMenu_ListTemplate_Flags:
	.word	sDebugMenu_Items_Flags
	.word	ListMenuDefaultCursorMoveFunc
	.space	4
	.short	0xd
	.space	10
	.align	2, 0
	.type	 sDebugMenu_ListTemplate_Vars,object
	.size	 sDebugMenu_ListTemplate_Vars,24
sDebugMenu_ListTemplate_Vars:
	.word	sDebugMenu_Items_Vars
	.word	ListMenuDefaultCursorMoveFunc
	.space	4
	.short	0x1
	.space	10
	.align	2, 0
	.type	 sDebugMenu_ListTemplate_Give,object
	.size	 sDebugMenu_ListTemplate_Give,24
sDebugMenu_ListTemplate_Give:
	.word	sDebugMenu_Items_Give
	.word	ListMenuDefaultCursorMoveFunc
	.space	4
	.short	0x5
	.space	10
.text
	.align	2, 0
	.globl	Debug_ShowMainMenu
	.type	 Debug_ShowMainMenu,function
	.thumb_func
Debug_ShowMainMenu:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	ldr	r0, .L3
	ldr	r3, .L3+0x4
	mov	r2, sp
	add	r1, r3, #0
	add	r1, r1, #0xc
	ldmia	r1!, {r4, r5, r6}
	stmia	r2!, {r4, r5, r6}
	ldr	r1, [r3]
	ldr	r2, [r3, #0x4]
	ldr	r3, [r3, #0x8]
	bl	Debug_ShowMenu
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	DebugTask_HandleMenuInput_Main
	.word	sDebugMenu_ListTemplate_Main
.Lfe1:
	.size	 Debug_ShowMainMenu,.Lfe1-Debug_ShowMainMenu
	.align	2, 0
	.type	 Debug_ShowMenu,function
	.thumb_func
Debug_ShowMenu:
	sub	sp, sp, #0xc
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x18
	mov	r8, r0
	str	r1, [sp, #0x2c]
	str	r2, [sp, #0x30]
	str	r3, [sp, #0x34]
	bl	HideMapNamePopUpWindow
	bl	LoadMessageBoxAndBorderGfx
	ldr	r0, .L6
	bl	AddWindow
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	add	r0, r5, #0
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	mov	r1, sp
	add	r0, sp, #0x2c
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	mov	r1, sp
	mov	r2, #0x0
	mov	r3, #0x8
	mov	r0, #0x8
	strh	r0, [r1, #0xe]
	mov	r0, sp
	strb	r5, [r0, #0x10]
	strb	r2, [r0, #0x11]
	strb	r3, [r0, #0x12]
	strb	r2, [r0, #0x13]
	mov	r3, sp
	ldrb	r1, [r3, #0x14]
	mov	r2, #0x10
	neg	r2, r2
	add	r0, r2, #0
	and	r0, r0, r1
	mov	r4, #0x1
	orr	r0, r0, r4
	strb	r0, [r3, #0x14]
	mov	r6, #0xf
	and	r0, r0, r6
	mov	r1, #0x20
	orr	r0, r0, r1
	strb	r0, [r3, #0x14]
	mov	r1, sp
	ldrb	r0, [r1, #0x15]
	and	r2, r2, r0
	orr	r2, r2, r4
	strb	r2, [r1, #0x15]
	and	r2, r2, r6
	mov	r0, #0x30
	orr	r2, r2, r0
	strb	r2, [r1, #0x15]
	mov	r2, sp
	ldrb	r0, [r2, #0x16]
	mov	r1, #0x8
	neg	r1, r1
	and	r1, r1, r0
	orr	r1, r1, r4
	strb	r1, [r2, #0x16]
	mov	r0, #0x39
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0x16]
	mov	r1, sp
	mov	r3, #0x3f
	and	r0, r0, r3
	strb	r0, [r1, #0x16]
	ldrb	r1, [r2, #0x17]
	mov	r0, #0x40
	neg	r0, r0
	and	r0, r0, r1
	orr	r0, r0, r4
	strb	r0, [r2, #0x17]
	mov	r1, sp
	and	r0, r0, r3
	strb	r0, [r1, #0x17]
	mov	r0, sp
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ListMenuInit
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	mov	r0, r8
	mov	r1, #0x3
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L6+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0x8]
	strh	r5, [r1, #0xa]
	add	sp, sp, #0x18
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r3}
	add	sp, sp, #0xc
	bx	r3
.L7:
	.align	2, 0
.L6:
	.word	sDebugMenuWindowTemplate
	.word	gTasks
.Lfe2:
	.size	 Debug_ShowMenu,.Lfe2-Debug_ShowMenu
	.align	2, 0
	.type	 Debug_DestroyMenu,function
	.thumb_func
Debug_DestroyMenu:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L9
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	ldrb	r0, [r4, #0x8]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldrb	r0, [r4, #0xa]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r4, #0xa]
	bl	RemoveWindow
	add	r0, r5, #0
	bl	DestroyTask
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L10:
	.align	2, 0
.L9:
	.word	gTasks
.Lfe3:
	.size	 Debug_DestroyMenu,.Lfe3-Debug_DestroyMenu
	.align	2, 0
	.type	 DebugAction_Cancel,function
	.thumb_func
DebugAction_Cancel:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	Debug_DestroyMenu
	bl	EnableBothScriptContexts
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 DebugAction_Cancel,.Lfe4-DebugAction_Cancel
	.align	2, 0
	.type	 DebugAction_DestroyExtraWindow,function
	.thumb_func
DebugAction_DestroyExtraWindow:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L13
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	ldrb	r0, [r4, #0xa]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r4, #0xa]
	bl	RemoveWindow
	ldrb	r0, [r4, #0xc]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r4, #0xc]
	bl	RemoveWindow
	add	r0, r5, #0
	bl	DestroyTask
	bl	EnableBothScriptContexts
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L14:
	.align	2, 0
.L13:
	.word	gTasks
.Lfe5:
	.size	 DebugAction_DestroyExtraWindow,.Lfe5-DebugAction_DestroyExtraWindow
	.align	2, 0
	.type	 DebugTask_HandleMenuInput_Main,function
	.thumb_func
DebugTask_HandleMenuInput_Main:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r6, r4, #0
	ldr	r1, .L20
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0, #0x8]
	bl	ListMenu_ProcessInput
	add	r5, r0, #0
	ldr	r0, .L20+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L16	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, .L20+0x8
	lsl	r0, r5, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	cmp	r1, #0
	beq	.L18	@cond_branch
	add	r0, r4, #0
	bl	_call_via_r1
	b	.L18
.L21:
	.align	2, 0
.L20:
	.word	gTasks
	.word	gMain
	.word	sDebugMenu_Actions_Main
.L16:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L18	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r6, #0
	bl	Debug_DestroyMenu
	bl	EnableBothScriptContexts
.L18:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe6:
	.size	 DebugTask_HandleMenuInput_Main,.Lfe6-DebugTask_HandleMenuInput_Main
	.align	2, 0
	.type	 DebugTask_HandleMenuInput_Utilities,function
	.thumb_func
DebugTask_HandleMenuInput_Utilities:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r6, r4, #0
	ldr	r1, .L27
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0, #0x8]
	bl	ListMenu_ProcessInput
	add	r5, r0, #0
	ldr	r0, .L27+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L23	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, .L27+0x8
	lsl	r0, r5, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	cmp	r1, #0
	beq	.L25	@cond_branch
	add	r0, r4, #0
	bl	_call_via_r1
	b	.L25
.L28:
	.align	2, 0
.L27:
	.word	gTasks
	.word	gMain
	.word	sDebugMenu_Actions_Utilities
.L23:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L25	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r6, #0
	bl	Debug_DestroyMenu
	bl	Debug_ShowMainMenu
.L25:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 DebugTask_HandleMenuInput_Utilities,.Lfe7-DebugTask_HandleMenuInput_Utilities
	.align	2, 0
	.type	 DebugTask_HandleMenuInput_Flags,function
	.thumb_func
DebugTask_HandleMenuInput_Flags:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r6, r4, #0
	ldr	r1, .L34
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0, #0x8]
	bl	ListMenu_ProcessInput
	add	r5, r0, #0
	ldr	r0, .L34+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L30	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, .L34+0x8
	lsl	r0, r5, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	cmp	r1, #0
	beq	.L32	@cond_branch
	add	r0, r4, #0
	bl	_call_via_r1
	b	.L32
.L35:
	.align	2, 0
.L34:
	.word	gTasks
	.word	gMain
	.word	sDebugMenu_Actions_Flags
.L30:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L32	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r6, #0
	bl	Debug_DestroyMenu
	bl	Debug_ShowMainMenu
.L32:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 DebugTask_HandleMenuInput_Flags,.Lfe8-DebugTask_HandleMenuInput_Flags
	.align	2, 0
	.type	 DebugTask_HandleMenuInput_Vars,function
	.thumb_func
DebugTask_HandleMenuInput_Vars:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r6, r4, #0
	ldr	r1, .L41
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0, #0x8]
	bl	ListMenu_ProcessInput
	add	r5, r0, #0
	ldr	r0, .L41+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L37	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, .L41+0x8
	lsl	r0, r5, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	cmp	r1, #0
	beq	.L39	@cond_branch
	add	r0, r4, #0
	bl	_call_via_r1
	b	.L39
.L42:
	.align	2, 0
.L41:
	.word	gTasks
	.word	gMain
	.word	sDebugMenu_Actions_Vars
.L37:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L39	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r6, #0
	bl	Debug_DestroyMenu
	bl	Debug_ShowMainMenu
.L39:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe9:
	.size	 DebugTask_HandleMenuInput_Vars,.Lfe9-DebugTask_HandleMenuInput_Vars
	.align	2, 0
	.type	 DebugTask_HandleMenuInput_Give,function
	.thumb_func
DebugTask_HandleMenuInput_Give:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r6, r4, #0
	ldr	r1, .L48
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0, #0x8]
	bl	ListMenu_ProcessInput
	add	r5, r0, #0
	ldr	r0, .L48+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L44	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, .L48+0x8
	lsl	r0, r5, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	cmp	r1, #0
	beq	.L46	@cond_branch
	add	r0, r4, #0
	bl	_call_via_r1
	b	.L46
.L49:
	.align	2, 0
.L48:
	.word	gTasks
	.word	gMain
	.word	sDebugMenu_Actions_Give
.L44:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L46	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r6, #0
	bl	Debug_DestroyMenu
	bl	Debug_ShowMainMenu
.L46:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe10:
	.size	 DebugTask_HandleMenuInput_Give,.Lfe10-DebugTask_HandleMenuInput_Give
	.align	2, 0
	.type	 DebugAction_OpenUtilitiesMenu,function
	.thumb_func
DebugAction_OpenUtilitiesMenu:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	Debug_DestroyMenu
	ldr	r0, .L51
	ldr	r3, .L51+0x4
	mov	r2, sp
	add	r1, r3, #0
	add	r1, r1, #0xc
	ldmia	r1!, {r4, r5, r6}
	stmia	r2!, {r4, r5, r6}
	ldr	r1, [r3]
	ldr	r2, [r3, #0x4]
	ldr	r3, [r3, #0x8]
	bl	Debug_ShowMenu
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L52:
	.align	2, 0
.L51:
	.word	DebugTask_HandleMenuInput_Utilities
	.word	sDebugMenu_ListTemplate_Utilities
.Lfe11:
	.size	 DebugAction_OpenUtilitiesMenu,.Lfe11-DebugAction_OpenUtilitiesMenu
	.align	2, 0
	.type	 DebugAction_OpenFlagsMenu,function
	.thumb_func
DebugAction_OpenFlagsMenu:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	Debug_DestroyMenu
	ldr	r0, .L54
	ldr	r3, .L54+0x4
	mov	r2, sp
	add	r1, r3, #0
	add	r1, r1, #0xc
	ldmia	r1!, {r4, r5, r6}
	stmia	r2!, {r4, r5, r6}
	ldr	r1, [r3]
	ldr	r2, [r3, #0x4]
	ldr	r3, [r3, #0x8]
	bl	Debug_ShowMenu
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L55:
	.align	2, 0
.L54:
	.word	DebugTask_HandleMenuInput_Flags
	.word	sDebugMenu_ListTemplate_Flags
.Lfe12:
	.size	 DebugAction_OpenFlagsMenu,.Lfe12-DebugAction_OpenFlagsMenu
	.align	2, 0
	.type	 DebugAction_OpenVariablesMenu,function
	.thumb_func
DebugAction_OpenVariablesMenu:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	Debug_DestroyMenu
	ldr	r0, .L57
	ldr	r3, .L57+0x4
	mov	r2, sp
	add	r1, r3, #0
	add	r1, r1, #0xc
	ldmia	r1!, {r4, r5, r6}
	stmia	r2!, {r4, r5, r6}
	ldr	r1, [r3]
	ldr	r2, [r3, #0x4]
	ldr	r3, [r3, #0x8]
	bl	Debug_ShowMenu
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L58:
	.align	2, 0
.L57:
	.word	DebugTask_HandleMenuInput_Vars
	.word	sDebugMenu_ListTemplate_Vars
.Lfe13:
	.size	 DebugAction_OpenVariablesMenu,.Lfe13-DebugAction_OpenVariablesMenu
	.align	2, 0
	.type	 DebugAction_OpenGiveMenu,function
	.thumb_func
DebugAction_OpenGiveMenu:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	Debug_DestroyMenu
	ldr	r0, .L60
	ldr	r3, .L60+0x4
	mov	r2, sp
	add	r1, r3, #0
	add	r1, r1, #0xc
	ldmia	r1!, {r4, r5, r6}
	stmia	r2!, {r4, r5, r6}
	ldr	r1, [r3]
	ldr	r2, [r3, #0x4]
	ldr	r3, [r3, #0x8]
	bl	Debug_ShowMenu
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L61:
	.align	2, 0
.L60:
	.word	DebugTask_HandleMenuInput_Give
	.word	sDebugMenu_ListTemplate_Give
.Lfe14:
	.size	 DebugAction_OpenGiveMenu,.Lfe14-DebugAction_OpenGiveMenu
	.align	2, 0
	.type	 DebugAction_Util_HealParty,function
	.thumb_func
DebugAction_Util_HealParty:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	bl	PlaySE
	bl	HealPlayerParty
	bl	EnableBothScriptContexts
	add	r0, r4, #0
	bl	Debug_DestroyMenu
	bl	EnableBothScriptContexts
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe15:
	.size	 DebugAction_Util_HealParty,.Lfe15-DebugAction_Util_HealParty
	.align	2, 0
	.type	 DebugAction_Util_Fly,function
	.thumb_func
DebugAction_Util_Fly:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L64
	bl	FlagSet
	mov	r0, #0x87
	lsl	r0, r0, #0x4
	bl	FlagSet
	ldr	r0, .L64+0x4
	bl	FlagSet
	ldr	r0, .L64+0x8
	bl	FlagSet
	ldr	r0, .L64+0xc
	bl	FlagSet
	ldr	r0, .L64+0x10
	bl	FlagSet
	ldr	r0, .L64+0x14
	bl	FlagSet
	ldr	r0, .L64+0x18
	bl	FlagSet
	ldr	r0, .L64+0x1c
	bl	FlagSet
	ldr	r0, .L64+0x20
	bl	FlagSet
	ldr	r0, .L64+0x24
	bl	FlagSet
	ldr	r0, .L64+0x28
	bl	FlagSet
	ldr	r0, .L64+0x2c
	bl	FlagSet
	ldr	r0, .L64+0x30
	bl	FlagSet
	ldr	r0, .L64+0x34
	bl	FlagSet
	ldr	r0, .L64+0x38
	bl	FlagSet
	ldr	r0, .L64+0x3c
	bl	FlagSet
	ldr	r0, .L64+0x40
	bl	FlagSet
	add	r0, r4, #0
	bl	Debug_DestroyMenu
	ldr	r0, .L64+0x44
	bl	SetMainCallback2
	pop	{r4}
	pop	{r0}
	bx	r0
.L65:
	.align	2, 0
.L64:
	.word	0x86f
	.word	0x871
	.word	0x872
	.word	0x873
	.word	0x874
	.word	0x875
	.word	0x876
	.word	0x877
	.word	0x878
	.word	0x879
	.word	0x87a
	.word	0x87b
	.word	0x87c
	.word	0x87d
	.word	0x87e
	.word	0x8b4
	.word	0x8a8
	.word	CB2_OpenFlyMap
.Lfe16:
	.size	 DebugAction_Util_Fly,.Lfe16-DebugAction_Util_Fly
	.align	2, 0
	.type	 DebugAction_Util_Warp_Warp,function
	.thumb_func
DebugAction_Util_Warp_Warp:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L67
	lsl	r5, r0, #0x2
	add	r5, r5, r0
	lsl	r5, r5, #0x3
	add	r5, r5, r1
	ldrb	r0, [r5, #0xa]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r5, #0xa]
	bl	RemoveWindow
	bl	HideMapNamePopUpWindow
	bl	LoadMessageBoxAndBorderGfx
	ldr	r0, .L67+0x4
	bl	AddWindow
	add	r6, r0, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	add	r0, r6, #0
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	add	r0, r6, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r4, .L67+0x8
	mov	r0, #0xe
	ldrsh	r1, [r5, r0]
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L67+0xc
	mov	r1, #0x21
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L67+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldr	r0, .L67+0x14
	ldr	r1, .L67+0x18
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, .L67+0x1c
	mov	r8, r0
	ldr	r1, .L67+0x20
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	str	r0, [sp]
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	add	r0, r6, #0
	mov	r1, #0x1
	mov	r2, r8
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
	ldr	r0, .L67+0x24
	str	r0, [r5]
	strh	r6, [r5, #0xc]
	strh	r4, [r5, #0xe]
	strh	r4, [r5, #0x10]
	strh	r4, [r5, #0x12]
	strh	r4, [r5, #0x14]
	strh	r4, [r5, #0x16]
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L68:
	.align	2, 0
.L67:
	.word	gTasks
	.word	sDebugNumberDisplayWindowTemplate
	.word	gStringVar1
	.word	gStringVar2
	.word	gDebugText_Util_WarpToMap_SelMax
	.word	gStringVar3
	.word	gText_DigitIndicator
	.word	gStringVar4
	.word	gDebugText_Util_WarpToMap_SelectMapGroup
	.word	DebugAction_Util_Warp_SelectMapGroup
.Lfe17:
	.size	 DebugAction_Util_Warp_Warp,.Lfe17-DebugAction_Util_Warp_Warp
	.align	2, 0
	.type	 DebugAction_Util_Warp_SelectMapGroup,function
	.thumb_func
DebugAction_Util_Warp_SelectMapGroup:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r4, .L82
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB1001
	b	.L70	@long jump
.LCB1001:
	mov	r0, #0x5
	bl	PlaySE
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	lsl	r4, r6, #0x2
	cmp	r0, #0
	beq	.L71	@cond_branch
	ldr	r1, .L82+0x4
	add	r0, r4, r6
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	ldr	r1, .L82+0x8
	mov	r3, #0x10
	ldrsh	r0, [r2, r3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r2, #0xe]
	add	r0, r0, r1
	strh	r0, [r2, #0xe]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x21
	ble	.L71	@cond_branch
	mov	r0, #0x21
	strh	r0, [r2, #0xe]
.L71:
	ldr	r2, .L82
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x80
	and	r0, r0, r1
	ldr	r7, .L82+0x4
	cmp	r0, #0
	beq	.L73	@cond_branch
	add	r0, r4, r6
	lsl	r0, r0, #0x3
	add	r3, r0, r7
	ldr	r1, .L82+0x8
	mov	r5, #0x10
	ldrsh	r0, [r3, r5]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r3, #0xe]
	sub	r0, r0, r1
	strh	r0, [r3, #0xe]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L73	@cond_branch
	mov	r0, #0x0
	strh	r0, [r3, #0xe]
.L73:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L75	@cond_branch
	add	r0, r4, r6
	lsl	r0, r0, #0x3
	add	r1, r0, r7
	ldrh	r2, [r1, #0x10]
	mov	r3, #0x10
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	ble	.L75	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1, #0x10]
.L75:
	ldr	r0, .L82
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L77	@cond_branch
	add	r0, r4, r6
	lsl	r0, r0, #0x3
	add	r1, r0, r7
	ldrh	r2, [r1, #0x10]
	mov	r5, #0x10
	ldrsh	r0, [r1, r5]
	cmp	r0, #0x1
	bgt	.L77	@cond_branch
	add	r0, r2, #0x1
	strh	r0, [r1, #0x10]
.L77:
	ldr	r5, .L82+0xc
	add	r4, r4, r6
	lsl	r4, r4, #0x3
	add	r4, r4, r7
	mov	r0, #0xe
	ldrsh	r1, [r4, r0]
	add	r0, r5, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L82+0x10
	mov	r1, #0x21
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L82+0x14
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	ldr	r0, .L82+0x18
	ldr	r2, .L82+0x1c
	mov	r3, #0x10
	ldrsh	r1, [r4, r3]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r5, .L82+0x20
	ldr	r1, .L82+0x24
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r4, #0xc]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
.L70:
	ldr	r0, .L82
	ldrh	r1, [r0, #0x2e]
	mov	r7, #0x1
	add	r0, r7, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L79	@cond_branch
	ldr	r0, .L82+0x4
	lsl	r4, r6, #0x2
	add	r4, r4, r6
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	ldrh	r0, [r4, #0xe]
	mov	r6, #0x0
	strh	r0, [r4, #0x12]
	strh	r6, [r4, #0xe]
	strh	r6, [r4, #0x10]
	ldr	r5, .L82+0xc
	add	r0, r5, #0
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L82+0x10
	mov	r8, r0
	ldr	r1, .L82+0x28
	mov	r2, #0x12
	ldrsh	r0, [r4, r2]
	add	r0, r0, r1
	ldrb	r1, [r0]
	sub	r1, r1, #0x1
	mov	r0, r8
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L82+0x14
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	ldrh	r0, [r4, #0x12]
	ldrh	r1, [r4, #0xe]
	bl	Overworld_GetMapHeaderByGroupAndId
	ldrb	r1, [r0, #0x14]
	mov	r0, r8
	mov	r2, #0x0
	bl	GetMapName
	ldr	r0, .L82+0x18
	ldr	r2, .L82+0x1c
	mov	r3, #0x10
	ldrsh	r1, [r4, r3]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r5, .L82+0x20
	ldr	r1, .L82+0x2c
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r4, #0xc]
	str	r7, [sp]
	str	r6, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
	ldr	r0, .L82+0x30
	str	r0, [r4]
	b	.L80
.L83:
	.align	2, 0
.L82:
	.word	gMain
	.word	gTasks
	.word	sPowersOfTen
	.word	gStringVar1
	.word	gStringVar2
	.word	gDebugText_Util_WarpToMap_SelMax
	.word	gStringVar3
	.word	gText_DigitIndicator
	.word	gStringVar4
	.word	gDebugText_Util_WarpToMap_SelectMapGroup
	.word	MAP_GROUP_COUNT
	.word	gDebugText_Util_WarpToMap_SelectMap
	.word	DebugAction_Util_Warp_SelectMap
.L79:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L80	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r6, #0
	bl	DebugAction_DestroyExtraWindow
.L80:
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe18:
	.size	 DebugAction_Util_Warp_SelectMapGroup,.Lfe18-DebugAction_Util_Warp_SelectMapGroup
	.align	2, 0
	.type	 DebugAction_Util_Warp_SelectMap,function
	.thumb_func
DebugAction_Util_Warp_SelectMap:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r2, .L97
	ldr	r1, .L97+0x4
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	add	r0, r0, r2
	ldrb	r6, [r0]
	ldr	r5, .L97+0x8
	ldrh	r1, [r5, #0x2e]
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB1313
	b	.L85	@long jump
.LCB1313:
	mov	r0, #0x5
	bl	PlaySE
	ldrh	r1, [r5, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L86	@cond_branch
	ldr	r1, .L97+0xc
	mov	r2, #0x10
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r4, #0xe]
	add	r0, r0, r1
	strh	r0, [r4, #0xe]
	mov	r3, #0xe
	ldrsh	r0, [r4, r3]
	sub	r1, r6, #0x1
	cmp	r0, r1
	ble	.L86	@cond_branch
	strh	r1, [r4, #0xe]
.L86:
	ldr	r2, .L97+0x8
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x80
	and	r0, r0, r1
	ldr	r6, .L97+0x4
	lsl	r4, r7, #0x2
	cmp	r0, #0
	beq	.L88	@cond_branch
	add	r0, r4, r7
	lsl	r0, r0, #0x3
	add	r3, r0, r6
	ldr	r1, .L97+0xc
	mov	r5, #0x10
	ldrsh	r0, [r3, r5]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r3, #0xe]
	sub	r0, r0, r1
	strh	r0, [r3, #0xe]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L88	@cond_branch
	mov	r0, #0x0
	strh	r0, [r3, #0xe]
.L88:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L90	@cond_branch
	add	r0, r4, r7
	lsl	r0, r0, #0x3
	add	r1, r0, r6
	ldrh	r2, [r1, #0x10]
	mov	r3, #0x10
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	ble	.L90	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1, #0x10]
.L90:
	ldr	r0, .L97+0x8
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L92	@cond_branch
	add	r0, r4, r7
	lsl	r0, r0, #0x3
	add	r1, r0, r6
	ldrh	r2, [r1, #0x10]
	mov	r5, #0x10
	ldrsh	r0, [r1, r5]
	cmp	r0, #0x1
	bgt	.L92	@cond_branch
	add	r0, r2, #0x1
	strh	r0, [r1, #0x10]
.L92:
	ldr	r5, .L97+0x10
	add	r4, r4, r7
	lsl	r4, r4, #0x3
	add	r4, r4, r6
	mov	r0, #0xe
	ldrsh	r1, [r4, r0]
	add	r0, r5, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r6, .L97+0x14
	ldr	r1, .L97
	mov	r2, #0x12
	ldrsh	r0, [r4, r2]
	add	r0, r0, r1
	ldrb	r1, [r0]
	sub	r1, r1, #0x1
	add	r0, r6, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L97+0x18
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	ldrh	r0, [r4, #0x12]
	ldrh	r1, [r4, #0xe]
	bl	Overworld_GetMapHeaderByGroupAndId
	ldrb	r1, [r0, #0x14]
	add	r0, r6, #0
	mov	r2, #0x0
	bl	GetMapName
	ldr	r0, .L97+0x1c
	ldr	r2, .L97+0x20
	mov	r3, #0x10
	ldrsh	r1, [r4, r3]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r5, .L97+0x24
	ldr	r1, .L97+0x28
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r4, #0xc]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
.L85:
	ldr	r0, .L97+0x8
	ldrh	r1, [r0, #0x2e]
	mov	r5, #0x1
	mov	r8, r5
	mov	r0, r8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L94	@cond_branch
	ldr	r0, .L97+0x4
	lsl	r4, r7, #0x2
	add	r4, r4, r7
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	ldrh	r0, [r4, #0xe]
	mov	r5, #0x0
	strh	r0, [r4, #0x14]
	strh	r5, [r4, #0xe]
	strh	r5, [r4, #0x10]
	ldr	r0, .L97+0x1c
	ldr	r1, .L97+0x20
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, .L97+0x10
	mov	r2, #0xe
	ldrsh	r1, [r4, r2]
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r6, .L97+0x24
	ldr	r1, .L97+0x2c
	add	r0, r6, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r4, #0xc]
	mov	r3, r8
	str	r3, [sp]
	str	r5, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r6, #0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
	ldr	r0, .L97+0x30
	str	r0, [r4]
	b	.L95
.L98:
	.align	2, 0
.L97:
	.word	MAP_GROUP_COUNT
	.word	gTasks
	.word	gMain
	.word	sPowersOfTen
	.word	gStringVar1
	.word	gStringVar2
	.word	gDebugText_Util_WarpToMap_SelMax
	.word	gStringVar3
	.word	gText_DigitIndicator
	.word	gStringVar4
	.word	gDebugText_Util_WarpToMap_SelectMap
	.word	gDebugText_Util_WarpToMap_SelectWarp
	.word	DebugAction_Util_Warp_SelectWarp
.L94:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L95	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r7, #0
	bl	DebugAction_DestroyExtraWindow
.L95:
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe19:
	.size	 DebugAction_Util_Warp_SelectMap,.Lfe19-DebugAction_Util_Warp_SelectMap
	.align	2, 0
	.type	 DebugAction_Util_Warp_SelectWarp,function
	.thumb_func
DebugAction_Util_Warp_SelectWarp:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r4, .L108
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L100	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	lsl	r4, r6, #0x2
	cmp	r0, #0
	beq	.L101	@cond_branch
	ldr	r1, .L108+0x4
	add	r0, r4, r6
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	ldr	r1, .L108+0x8
	mov	r3, #0x10
	ldrsh	r0, [r2, r3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r2, #0xe]
	add	r0, r0, r1
	strh	r0, [r2, #0xe]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xa
	ble	.L101	@cond_branch
	mov	r0, #0xa
	strh	r0, [r2, #0xe]
.L101:
	ldr	r0, .L108
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x80
	and	r0, r0, r1
	ldr	r3, .L108+0x4
	cmp	r0, #0
	beq	.L103	@cond_branch
	add	r0, r4, r6
	lsl	r0, r0, #0x3
	add	r2, r0, r3
	ldr	r1, .L108+0x8
	mov	r5, #0x10
	ldrsh	r0, [r2, r5]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r2, #0xe]
	sub	r0, r0, r1
	strh	r0, [r2, #0xe]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L103	@cond_branch
	mov	r0, #0x0
	strh	r0, [r2, #0xe]
.L103:
	ldr	r0, .L108+0xc
	ldr	r2, .L108+0x10
	add	r4, r4, r6
	lsl	r4, r4, #0x3
	add	r4, r4, r3
	mov	r3, #0x10
	ldrsh	r1, [r4, r3]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, .L108+0x14
	mov	r5, #0xe
	ldrsh	r1, [r4, r5]
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r5, .L108+0x18
	ldr	r1, .L108+0x1c
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r4, #0xc]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
.L100:
	ldr	r0, .L108
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L105	@cond_branch
	ldr	r0, .L108+0x4
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r2, [r1, #0xe]
	strh	r2, [r1, #0x16]
	mov	r0, #0x12
	ldrsb	r0, [r1, r0]
	ldrb	r1, [r1, #0x14]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	lsl	r2, r2, #0x18
	asr	r2, r2, #0x18
	bl	SetWarpDestinationToMapWarp
	bl	DoWarp
	bl	ResetInitialPlayerAvatarState
	add	r0, r6, #0
	bl	DebugAction_DestroyExtraWindow
	b	.L106
.L109:
	.align	2, 0
.L108:
	.word	gMain
	.word	gTasks
	.word	sPowersOfTen
	.word	gStringVar3
	.word	gText_DigitIndicator
	.word	gStringVar1
	.word	gStringVar4
	.word	gDebugText_Util_WarpToMap_SelectWarp
.L105:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L106	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r6, #0
	bl	DebugAction_DestroyExtraWindow
.L106:
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe20:
	.size	 DebugAction_Util_Warp_SelectWarp,.Lfe20-DebugAction_Util_Warp_SelectWarp
	.section .rodata
	.type	 gDebugText_SaveBlockSize.63,object
gDebugText_SaveBlockSize.63:
	.byte	0xcd
	.byte	0xd5
	.byte	0xea
	.byte	0xd9
	.byte	0xbc
	.byte	0xe0
	.byte	0xe3
	.byte	0xd7
	.byte	0xdf
	.byte	0xa2
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xfd
	.byte	0x2
	.byte	0xba
	.byte	0xa2
	.byte	0xa6
	.byte	0xa9
	.byte	0xa8
	.byte	0xa3
	.byte	0x0
	.byte	0xd6
	.byte	0xed
	.byte	0xe8
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xfe
	.byte	0xcd
	.byte	0xd5
	.byte	0xea
	.byte	0xd9
	.byte	0xbc
	.byte	0xe0
	.byte	0xe3
	.byte	0xd7
	.byte	0xdf
	.byte	0xa3
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xe7
	.byte	0x0
	.byte	0xfd
	.byte	0x3
	.byte	0xba
	.byte	0xa4
	.byte	0xaa
	.byte	0xa7
	.byte	0xa9
	.byte	0x0
	.byte	0xd6
	.byte	0xed
	.byte	0xe8
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xfb
	.byte	0xca
	.byte	0xe3
	.byte	0xdf
	.byte	0xd9
	.byte	0xe1
	.byte	0xe3
	.byte	0xe2
	.byte	0xcd
	.byte	0xe8
	.byte	0xe3
	.byte	0xe6
	.byte	0xd5
	.byte	0xdb
	.byte	0xd9
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xfd
	.byte	0x4
	.byte	0x0
	.byte	0xd6
	.byte	0xed
	.byte	0xe8
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xe0
	.byte	0xe3
	.byte	0xe2
	.byte	0xdb
	.byte	0xad
	.byte	0xfe
	.byte	0xc7
	.byte	0xd5
	.byte	0xec
	.byte	0x0
	.byte	0xe7
	.byte	0xdd
	.byte	0xee
	.byte	0xd9
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xa4
	.byte	0xa6
	.byte	0xa8
	.byte	0xa2
	.byte	0xa3
	.byte	0x0
	.byte	0xd6
	.byte	0xed
	.byte	0xe8
	.byte	0xd9
	.byte	0xe7
	.byte	0xad
	.byte	0xff
.text
	.align	2, 0
	.type	 DebugAction_Util_CheckSaveBlock,function
	.thumb_func
DebugAction_Util_CheckSaveBlock:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L111
	ldr	r1, .L111+0x4
	mov	r2, #0x0
	mov	r3, #0x6
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L111+0x8
	ldr	r1, .L111+0xc
	mov	r2, #0x0
	mov	r3, #0x6
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L111+0x10
	ldr	r1, .L111+0x14
	mov	r2, #0x0
	mov	r3, #0x6
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L111+0x18
	ldr	r1, .L111+0x1c
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	bl	Debug_DestroyMenu
	bl	ScriptContext2_Enable
	ldr	r0, .L111+0x20
	bl	ScriptContext1_SetupScript
	pop	{r4}
	pop	{r0}
	bx	r0
.L112:
	.align	2, 0
.L111:
	.word	gStringVar1
	.word	0x3620
	.word	gStringVar2
	.word	0xf18
	.word	gStringVar3
	.word	0x83d0
	.word	gStringVar4
	.word	gDebugText_SaveBlockSize.63
	.word	Debug_ShowFieldMessageStringVar4
.Lfe21:
	.size	 DebugAction_Util_CheckSaveBlock,.Lfe21-DebugAction_Util_CheckSaveBlock
	.align	2, 0
	.type	 DebugAction_Util_CheckWallClock,function
	.thumb_func
DebugAction_Util_CheckWallClock:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	Debug_DestroyMenu
	bl	ScriptContext2_Enable
	ldr	r0, .L114
	bl	ScriptContext1_SetupScript
	pop	{r0}
	bx	r0
.L115:
	.align	2, 0
.L114:
	.word	PlayersHouse_2F_EventScript_CheckWallClock
.Lfe22:
	.size	 DebugAction_Util_CheckWallClock,.Lfe22-DebugAction_Util_CheckWallClock
	.align	2, 0
	.type	 DebugAction_Util_SetWallClock,function
	.thumb_func
DebugAction_Util_SetWallClock:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	Debug_DestroyMenu
	bl	ScriptContext2_Enable
	ldr	r0, .L117
	bl	ScriptContext1_SetupScript
	pop	{r0}
	bx	r0
.L118:
	.align	2, 0
.L117:
	.word	PlayersHouse_2F_EventScript_SetWallClock
.Lfe23:
	.size	 DebugAction_Util_SetWallClock,.Lfe23-DebugAction_Util_SetWallClock
	.section .rodata
	.type	 gDebugText_WeekDay.73,object
gDebugText_WeekDay.73:
	.byte	0xbb
	.byte	0xd5
	.byte	0xd5
	.byte	0xd5
	.byte	0xd5
	.byte	0xdc
	.byte	0xb8
	.byte	0x0
	.byte	0xed
	.byte	0xd9
	.byte	0xe7
	.byte	0xab
	.byte	0xfa
	.byte	0xfd
	.byte	0x2
	.byte	0xe7
	.byte	0x0
	.byte	0xd5
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xe1
	.byte	0xd5
	.byte	0xd8
	.byte	0xd9
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xd8
	.byte	0xd5
	.byte	0xd8
	.byte	0xe7
	.byte	0xab
	.byte	0xfa
	.byte	0xbb
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xd8
	.byte	0xd5
	.byte	0xd8
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xd7
	.byte	0xd5
	.byte	0xe6
	.byte	0xab
	.byte	0xff
	.byte	0xff
.text
	.align	2, 0
	.type	 DebugAction_Util_CheckWeekDay,function
	.thumb_func
DebugAction_Util_CheckWeekDay:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L120
	ldr	r0, .L120+0x4
	ldrb	r0, [r0, #0x5]
	bl	GetDayOfWeekString
	add	r1, r0, #0
	add	r0, r5, #0
	bl	StringCopy
	ldr	r0, .L120+0x8
	ldr	r1, .L120+0xc
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	bl	Debug_DestroyMenu
	bl	ScriptContext2_Enable
	ldr	r0, .L120+0x10
	bl	ScriptContext1_SetupScript
	bl	EnableBothScriptContexts
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L121:
	.align	2, 0
.L120:
	.word	gStringVar1
	.word	gLocalTime
	.word	gStringVar4
	.word	gDebugText_WeekDay.73
	.word	Debug_ShowFieldMessageStringVar4
.Lfe24:
	.size	 DebugAction_Util_CheckWeekDay,.Lfe24-DebugAction_Util_CheckWeekDay
	.align	2, 0
	.type	 DebugAction_Util_WatchCredits,function
	.thumb_func
DebugAction_Util_WatchCredits:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	Debug_DestroyMenu
	ldr	r0, .L123
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L124:
	.align	2, 0
.L123:
	.word	CB2_StartCreditsSequence
.Lfe25:
	.size	 DebugAction_Util_WatchCredits,.Lfe25-DebugAction_Util_WatchCredits
	.align	2, 0
	.type	 DebugAction_Util_Trainer_Name,function
	.thumb_func
DebugAction_Util_Trainer_Name:
	push	{lr}
	add	sp, sp, #-0xc
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x14
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	NewGameBirchSpeech_SetDefaultPlayerName
	ldr	r0, .L126
	ldr	r1, [r0]
	ldrb	r2, [r1, #0x8]
	mov	r3, #0x0
	str	r3, [sp]
	ldr	r0, .L126+0x4
	str	r0, [sp, #0x4]
	str	r3, [sp, #0x8]
	mov	r0, #0x0
	bl	DoNamingScreen
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L127:
	.align	2, 0
.L126:
	.word	gSaveBlock2Ptr
	.word	CB2_ReturnToFieldContinueScript
.Lfe26:
	.size	 DebugAction_Util_Trainer_Name,.Lfe26-DebugAction_Util_Trainer_Name
	.align	2, 0
	.type	 DebugAction_Util_Trainer_Gender,function
	.thumb_func
DebugAction_Util_Trainer_Gender:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L132
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x8]
	cmp	r0, #0
	bne	.L129	@cond_branch
	mov	r0, #0x1
	b	.L131
.L133:
	.align	2, 0
.L132:
	.word	gSaveBlock2Ptr
.L129:
	mov	r0, #0x0
.L131:
	strb	r0, [r1, #0x8]
	bl	EnableBothScriptContexts
	add	r0, r4, #0
	bl	Debug_DestroyMenu
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe27:
	.size	 DebugAction_Util_Trainer_Gender,.Lfe27-DebugAction_Util_Trainer_Gender
	.align	2, 0
	.type	 DebugAction_Util_Trainer_Id,function
	.thumb_func
DebugAction_Util_Trainer_Id:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	bl	Random
	add	r4, r0, #0
	bl	GetGeneratedTrainerIdLower
	lsl	r4, r4, #0x10
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	orr	r4, r4, r0
	ldr	r0, .L135
	ldr	r1, [r0]
	add	r1, r1, #0xa
	add	r0, r4, #0
	bl	SetTrainerId
	add	r0, r5, #0
	bl	Debug_DestroyMenu
	bl	EnableBothScriptContexts
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L136:
	.align	2, 0
.L135:
	.word	gSaveBlock2Ptr
.Lfe28:
	.size	 DebugAction_Util_Trainer_Id,.Lfe28-DebugAction_Util_Trainer_Id
	.align	2, 0
	.type	 DebugAction_Flags_Flags,function
	.thumb_func
DebugAction_Flags_Flags:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L140
	lsl	r4, r7, #0x2
	add	r4, r4, r7
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	ldrb	r0, [r4, #0xa]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r4, #0xa]
	bl	RemoveWindow
	bl	HideMapNamePopUpWindow
	bl	LoadMessageBoxAndBorderGfx
	ldr	r0, .L140+0x4
	bl	AddWindow
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	add	r0, r6, #0
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	add	r0, r6, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r4, .L140+0x8
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	ldr	r5, .L140+0xc
	add	r0, r5, #0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToHexStringN
	ldr	r1, .L140+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x0
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L138	@cond_branch
	ldr	r1, .L140+0x14
	add	r0, r5, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	b	.L139
.L141:
	.align	2, 0
.L140:
	.word	gTasks
	.word	sDebugNumberDisplayWindowTemplate
	.word	gStringVar1
	.word	gStringVar2
	.word	gDebugText_FlagHex
	.word	gDebugText_FlagSet
.L138:
	ldr	r1, .L142
	add	r0, r5, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
.L139:
	ldr	r0, .L142+0x4
	ldr	r1, .L142+0x8
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r5, .L142+0xc
	ldr	r1, .L142+0x10
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	str	r0, [sp]
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	add	r0, r6, #0
	mov	r1, #0x1
	add	r2, r5, #0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
	ldr	r1, .L142+0x14
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L142+0x18
	str	r1, [r0]
	strh	r6, [r0, #0xc]
	strh	r4, [r0, #0xe]
	strh	r4, [r0, #0x10]
	add	sp, sp, #0xc
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L143:
	.align	2, 0
.L142:
	.word	gDebugText_FlagUnset
	.word	gStringVar3
	.word	gText_DigitIndicator
	.word	gStringVar4
	.word	gDebugText_Flag
	.word	gTasks
	.word	DebugAction_Flags_FlagsSelect
.Lfe29:
	.size	 DebugAction_Flags_Flags,.Lfe29-DebugAction_Flags_Flags
	.align	2, 0
	.type	 DebugAction_Flags_FlagsSelect,function
	.thumb_func
DebugAction_Flags_FlagsSelect:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L160
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L145	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L146	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r7, #0
	bl	DebugAction_DestroyExtraWindow
	b	.L144
.L161:
	.align	2, 0
.L160:
	.word	gMain
.L145:
	ldr	r0, .L162
	lsl	r1, r7, #0x2
	add	r1, r1, r7
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0xe]
	bl	FlagToggle
.L146:
	ldr	r0, .L162+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L148	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, .L162
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	ldr	r1, .L162+0x8
	mov	r3, #0x10
	ldrsh	r0, [r2, r3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r2, #0xe]
	add	r0, r0, r1
	strh	r0, [r2, #0xe]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	ldr	r1, .L162+0xc
	cmp	r0, r1
	ble	.L148	@cond_branch
	strh	r1, [r2, #0xe]
.L148:
	ldr	r0, .L162+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L150	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, .L162
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	ldr	r1, .L162+0x8
	mov	r3, #0x10
	ldrsh	r0, [r2, r3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r2, #0xe]
	sub	r0, r0, r1
	strh	r0, [r2, #0xe]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L150	@cond_branch
	mov	r0, #0x0
	strh	r0, [r2, #0xe]
.L150:
	ldr	r0, .L162+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L152	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L162
	lsl	r1, r7, #0x2
	add	r1, r1, r7
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x10]
	sub	r0, r0, #0x1
	strh	r0, [r1, #0x10]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L152	@cond_branch
	mov	r0, #0x0
	strh	r0, [r1, #0x10]
.L152:
	ldr	r0, .L162+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L154	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, .L162
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r1, r0, r1
	ldrh	r0, [r1, #0x10]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x10]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3
	ble	.L154	@cond_branch
	mov	r0, #0x3
	strh	r0, [r1, #0x10]
.L154:
	ldr	r0, .L162+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L157	@cond_branch
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L144	@cond_branch
.L157:
	ldr	r0, .L162+0x10
	mov	r8, r0
	ldr	r0, .L162
	lsl	r6, r7, #0x2
	add	r4, r6, r7
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	mov	r3, #0xe
	ldrsh	r1, [r4, r3]
	mov	r0, r8
	mov	r2, #0x2
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	ldr	r5, .L162+0x14
	mov	r0, #0xe
	ldrsh	r1, [r4, r0]
	add	r0, r5, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToHexStringN
	ldr	r1, .L162+0x18
	mov	r0, r8
	bl	StringExpandPlaceholders
	ldrh	r0, [r4, #0xe]
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L158	@cond_branch
	ldr	r1, .L162+0x1c
	add	r0, r5, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	b	.L159
.L163:
	.align	2, 0
.L162:
	.word	gTasks
	.word	gMain
	.word	sPowersOfTen
	.word	0x95f
	.word	gStringVar1
	.word	gStringVar2
	.word	gDebugText_FlagHex
	.word	gDebugText_FlagSet
.L158:
	ldr	r1, .L164
	add	r0, r5, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
.L159:
	ldr	r0, .L164+0x4
	ldr	r2, .L164+0x8
	ldr	r1, .L164+0xc
	add	r4, r6, r7
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	mov	r3, #0x10
	ldrsh	r1, [r4, r3]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r6, .L164+0x10
	ldr	r1, .L164+0x14
	add	r0, r6, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r4, #0xc]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r6, #0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
.L144:
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L165:
	.align	2, 0
.L164:
	.word	gDebugText_FlagUnset
	.word	gStringVar3
	.word	gText_DigitIndicator
	.word	gTasks
	.word	gStringVar4
	.word	gDebugText_Flag
.Lfe30:
	.size	 DebugAction_Flags_FlagsSelect,.Lfe30-DebugAction_Flags_FlagsSelect
	.align	2, 0
	.type	 DebugAction_Flags_SetPokedexFlags,function
	.thumb_func
DebugAction_Flags_SetPokedexFlags:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r4, #0x0
	ldr	r6, .L172
.L170:
	add	r4, r4, #0x1
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	add	r0, r4, #0
	mov	r1, #0x3
	bl	GetSetPokedexFlag
	add	r0, r4, #0
	mov	r1, #0x2
	bl	GetSetPokedexFlag
	cmp	r4, r6
	bls	.L170	@cond_branch
	add	r0, r5, #0
	bl	Debug_DestroyMenu
	bl	EnableBothScriptContexts
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L173:
	.align	2, 0
.L172:
	.word	0x381
.Lfe31:
	.size	 DebugAction_Flags_SetPokedexFlags,.Lfe31-DebugAction_Flags_SetPokedexFlags
	.align	2, 0
	.type	 DebugAction_Flags_SwitchDex,function
	.thumb_func
DebugAction_Flags_SwitchDex:
	push	{lr}
	mov	r0, #0x33
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L175	@cond_branch
	mov	r0, #0x33
	bl	FlagClear
	mov	r0, #0x3
	bl	PlaySE
	b	.L176
.L175:
	mov	r0, #0x33
	bl	FlagSet
	mov	r0, #0x2
	bl	PlaySE
.L176:
	pop	{r0}
	bx	r0
.Lfe32:
	.size	 DebugAction_Flags_SwitchDex,.Lfe32-DebugAction_Flags_SwitchDex
	.align	2, 0
	.type	 DebugAction_Flags_SwitchNatDex,function
	.thumb_func
DebugAction_Flags_SwitchNatDex:
	push	{lr}
	bl	IsNationalPokedexEnabled
	cmp	r0, #0
	beq	.L178	@cond_branch
	bl	DisableNationalPokedex
	mov	r0, #0x3
	bl	PlaySE
	b	.L179
.L178:
	bl	EnableNationalPokedex
	mov	r0, #0x2
	bl	PlaySE
.L179:
	pop	{r0}
	bx	r0
.Lfe33:
	.size	 DebugAction_Flags_SwitchNatDex,.Lfe33-DebugAction_Flags_SwitchNatDex
	.align	2, 0
	.type	 DebugAction_Flags_SwitchPokeNav,function
	.thumb_func
DebugAction_Flags_SwitchPokeNav:
	push	{lr}
	mov	r0, #0x33
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L181	@cond_branch
	mov	r0, #0x33
	bl	FlagClear
	mov	r0, #0x3
	bl	PlaySE
	b	.L182
.L181:
	mov	r0, #0x33
	bl	FlagSet
	mov	r0, #0x2
	bl	PlaySE
.L182:
	pop	{r0}
	bx	r0
.Lfe34:
	.size	 DebugAction_Flags_SwitchPokeNav,.Lfe34-DebugAction_Flags_SwitchPokeNav
	.align	2, 0
	.type	 DebugAction_Flags_SwitchDexNav,function
	.thumb_func
DebugAction_Flags_SwitchDexNav:
	push	{r4, lr}
	ldr	r4, .L186
	add	r0, r4, #0
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L184	@cond_branch
	add	r0, r4, #0
	bl	FlagClear
	ldr	r0, .L186+0x4
	bl	FlagClear
	mov	r0, #0x3
	bl	PlaySE
	b	.L185
.L187:
	.align	2, 0
.L186:
	.word	0x88f
	.word	0x88e
.L184:
	add	r0, r4, #0
	bl	FlagSet
	ldr	r0, .L188
	bl	FlagSet
	mov	r0, #0x2
	bl	PlaySE
.L185:
	pop	{r4}
	pop	{r0}
	bx	r0
.L189:
	.align	2, 0
.L188:
	.word	0x88e
.Lfe35:
	.size	 DebugAction_Flags_SwitchDexNav,.Lfe35-DebugAction_Flags_SwitchDexNav
	.align	2, 0
	.type	 DebugAction_Flags_ToggleFlyFlags,function
	.thumb_func
DebugAction_Flags_ToggleFlyFlags:
	push	{r4, lr}
	ldr	r4, .L193
	add	r0, r4, #0
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2716
	b	.L191	@long jump
.LCB2716:
	mov	r0, #0x3
	bl	PlaySE
	ldr	r0, .L193+0x4
	bl	FlagClear
	mov	r0, #0x87
	lsl	r0, r0, #0x4
	bl	FlagClear
	ldr	r0, .L193+0x8
	bl	FlagClear
	ldr	r0, .L193+0xc
	bl	FlagClear
	ldr	r0, .L193+0x10
	bl	FlagClear
	ldr	r0, .L193+0x14
	bl	FlagClear
	ldr	r0, .L193+0x18
	bl	FlagClear
	ldr	r0, .L193+0x1c
	bl	FlagClear
	ldr	r0, .L193+0x20
	bl	FlagClear
	ldr	r0, .L193+0x24
	bl	FlagClear
	ldr	r0, .L193+0x28
	bl	FlagClear
	ldr	r0, .L193+0x2c
	bl	FlagClear
	ldr	r0, .L193+0x30
	bl	FlagClear
	ldr	r0, .L193+0x34
	bl	FlagClear
	ldr	r0, .L193+0x38
	bl	FlagClear
	ldr	r0, .L193+0x3c
	bl	FlagClear
	ldr	r0, .L193+0x40
	bl	FlagClear
	add	r0, r4, #0
	bl	FlagClear
	ldr	r0, .L193+0x44
	bl	FlagClear
	ldr	r0, .L193+0x48
	bl	FlagClear
	ldr	r0, .L193+0x4c
	bl	FlagClear
	ldr	r0, .L193+0x50
	bl	FlagClear
	ldr	r0, .L193+0x54
	bl	FlagClear
	ldr	r0, .L193+0x58
	bl	FlagClear
	ldr	r0, .L193+0x5c
	bl	FlagClear
	ldr	r0, .L193+0x60
	bl	FlagClear
	ldr	r0, .L193+0x64
	bl	FlagClear
	ldr	r0, .L193+0x68
	bl	FlagClear
	ldr	r0, .L193+0x6c
	bl	FlagClear
	mov	r0, #0x8f
	lsl	r0, r0, #0x4
	bl	FlagClear
	ldr	r0, .L193+0x70
	bl	FlagClear
	ldr	r0, .L193+0x74
	bl	FlagClear
	ldr	r0, .L193+0x78
	bl	FlagClear
	ldr	r0, .L193+0x7c
	bl	FlagClear
	ldr	r0, .L193+0x80
	bl	FlagClear
	ldr	r0, .L193+0x84
	bl	FlagClear
	ldr	r0, .L193+0x88
	bl	FlagClear
	ldr	r0, .L193+0x8c
	bl	FlagClear
	ldr	r0, .L193+0x90
	bl	FlagClear
	ldr	r0, .L193+0x94
	bl	FlagClear
	ldr	r0, .L193+0x98
	bl	FlagClear
	ldr	r0, .L193+0x9c
	bl	FlagClear
	ldr	r0, .L193+0xa0
	bl	FlagClear
	ldr	r0, .L193+0xa4
	bl	FlagClear
	mov	r0, #0x90
	lsl	r0, r0, #0x4
	bl	FlagClear
	ldr	r0, .L193+0xa8
	bl	FlagClear
	ldr	r0, .L193+0xac
	bl	FlagClear
	ldr	r0, .L193+0xb0
	bl	FlagClear
	ldr	r0, .L193+0xb4
	bl	FlagClear
	b	.L192
.L194:
	.align	2, 0
.L193:
	.word	0x8a8
	.word	0x86f
	.word	0x871
	.word	0x872
	.word	0x873
	.word	0x874
	.word	0x875
	.word	0x876
	.word	0x877
	.word	0x878
	.word	0x879
	.word	0x87a
	.word	0x87b
	.word	0x87c
	.word	0x87d
	.word	0x87e
	.word	0x8b4
	.word	0x8e5
	.word	0x8e6
	.word	0x8e7
	.word	0x8e8
	.word	0x8e9
	.word	0x8ea
	.word	0x8eb
	.word	0x8ec
	.word	0x8ed
	.word	0x8ee
	.word	0x8ef
	.word	0x8f1
	.word	0x8f2
	.word	0x8f3
	.word	0x8f4
	.word	0x8f5
	.word	0x8f6
	.word	0x8f7
	.word	0x8f8
	.word	0x8f9
	.word	0x8fa
	.word	0x8fb
	.word	0x8fc
	.word	0x8fd
	.word	0x8ff
	.word	0x904
	.word	0x905
	.word	0x906
	.word	0x907
.L191:
	mov	r0, #0x2
	bl	PlaySE
	ldr	r0, .L195
	bl	FlagSet
	mov	r0, #0x87
	lsl	r0, r0, #0x4
	bl	FlagSet
	ldr	r0, .L195+0x4
	bl	FlagSet
	ldr	r0, .L195+0x8
	bl	FlagSet
	ldr	r0, .L195+0xc
	bl	FlagSet
	ldr	r0, .L195+0x10
	bl	FlagSet
	ldr	r0, .L195+0x14
	bl	FlagSet
	ldr	r0, .L195+0x18
	bl	FlagSet
	ldr	r0, .L195+0x1c
	bl	FlagSet
	ldr	r0, .L195+0x20
	bl	FlagSet
	ldr	r0, .L195+0x24
	bl	FlagSet
	ldr	r0, .L195+0x28
	bl	FlagSet
	ldr	r0, .L195+0x2c
	bl	FlagSet
	ldr	r0, .L195+0x30
	bl	FlagSet
	ldr	r0, .L195+0x34
	bl	FlagSet
	ldr	r0, .L195+0x38
	bl	FlagSet
	ldr	r0, .L195+0x3c
	bl	FlagSet
	add	r0, r4, #0
	bl	FlagSet
	ldr	r0, .L195+0x40
	bl	FlagSet
	ldr	r0, .L195+0x44
	bl	FlagSet
	ldr	r0, .L195+0x48
	bl	FlagSet
	ldr	r0, .L195+0x4c
	bl	FlagSet
	ldr	r0, .L195+0x50
	bl	FlagSet
	ldr	r0, .L195+0x54
	bl	FlagSet
	ldr	r0, .L195+0x58
	bl	FlagSet
	ldr	r0, .L195+0x5c
	bl	FlagSet
	ldr	r0, .L195+0x60
	bl	FlagSet
	ldr	r0, .L195+0x64
	bl	FlagSet
	ldr	r0, .L195+0x68
	bl	FlagSet
	mov	r0, #0x8f
	lsl	r0, r0, #0x4
	bl	FlagSet
	ldr	r0, .L195+0x6c
	bl	FlagSet
	ldr	r0, .L195+0x70
	bl	FlagSet
	ldr	r0, .L195+0x74
	bl	FlagSet
	ldr	r0, .L195+0x78
	bl	FlagSet
	ldr	r0, .L195+0x7c
	bl	FlagSet
	ldr	r0, .L195+0x80
	bl	FlagSet
	ldr	r0, .L195+0x84
	bl	FlagSet
	ldr	r0, .L195+0x88
	bl	FlagSet
	ldr	r0, .L195+0x8c
	bl	FlagSet
	ldr	r0, .L195+0x90
	bl	FlagSet
	ldr	r0, .L195+0x94
	bl	FlagSet
	ldr	r0, .L195+0x98
	bl	FlagSet
	ldr	r0, .L195+0x9c
	bl	FlagSet
	ldr	r0, .L195+0xa0
	bl	FlagSet
	mov	r0, #0x90
	lsl	r0, r0, #0x4
	bl	FlagSet
	ldr	r0, .L195+0xa4
	bl	FlagSet
	ldr	r0, .L195+0xa8
	bl	FlagSet
	ldr	r0, .L195+0xac
	bl	FlagSet
	ldr	r0, .L195+0xb0
	bl	FlagSet
.L192:
	pop	{r4}
	pop	{r0}
	bx	r0
.L196:
	.align	2, 0
.L195:
	.word	0x86f
	.word	0x871
	.word	0x872
	.word	0x873
	.word	0x874
	.word	0x875
	.word	0x876
	.word	0x877
	.word	0x878
	.word	0x879
	.word	0x87a
	.word	0x87b
	.word	0x87c
	.word	0x87d
	.word	0x87e
	.word	0x8b4
	.word	0x8e5
	.word	0x8e6
	.word	0x8e7
	.word	0x8e8
	.word	0x8e9
	.word	0x8ea
	.word	0x8eb
	.word	0x8ec
	.word	0x8ed
	.word	0x8ee
	.word	0x8ef
	.word	0x8f1
	.word	0x8f2
	.word	0x8f3
	.word	0x8f4
	.word	0x8f5
	.word	0x8f6
	.word	0x8f7
	.word	0x8f8
	.word	0x8f9
	.word	0x8fa
	.word	0x8fb
	.word	0x8fc
	.word	0x8fd
	.word	0x8ff
	.word	0x904
	.word	0x905
	.word	0x906
	.word	0x907
.Lfe36:
	.size	 DebugAction_Flags_ToggleFlyFlags,.Lfe36-DebugAction_Flags_ToggleFlyFlags
	.align	2, 0
	.type	 DebugAction_Flags_ToggleBadgeFlags,function
	.thumb_func
DebugAction_Flags_ToggleBadgeFlags:
	push	{lr}
	ldr	r0, .L200
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L198	@cond_branch
	mov	r0, #0x3
	bl	PlaySE
	b	.L199
.L201:
	.align	2, 0
.L200:
	.word	0x86e
.L198:
	mov	r0, #0x2
	bl	PlaySE
.L199:
	ldr	r0, .L202
	bl	FlagToggle
	ldr	r0, .L202+0x4
	bl	FlagToggle
	ldr	r0, .L202+0x8
	bl	FlagToggle
	ldr	r0, .L202+0xc
	bl	FlagToggle
	ldr	r0, .L202+0x10
	bl	FlagToggle
	ldr	r0, .L202+0x14
	bl	FlagToggle
	ldr	r0, .L202+0x18
	bl	FlagToggle
	ldr	r0, .L202+0x1c
	bl	FlagToggle
	pop	{r0}
	bx	r0
.L203:
	.align	2, 0
.L202:
	.word	0x867
	.word	0x868
	.word	0x869
	.word	0x86a
	.word	0x86b
	.word	0x86c
	.word	0x86d
	.word	0x86e
.Lfe37:
	.size	 DebugAction_Flags_ToggleBadgeFlags,.Lfe37-DebugAction_Flags_ToggleBadgeFlags
	.align	2, 0
	.type	 DebugAction_Flags_CollisionOnOff,function
	.thumb_func
DebugAction_Flags_CollisionOnOff:
	push	{r4, lr}
	ldr	r4, .L207
	add	r0, r4, #0
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L205	@cond_branch
	add	r0, r4, #0
	bl	FlagClear
	mov	r0, #0x3
	bl	PlaySE
	b	.L206
.L208:
	.align	2, 0
.L207:
	.word	0x885
.L205:
	add	r0, r4, #0
	bl	FlagSet
	mov	r0, #0x2
	bl	PlaySE
.L206:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe38:
	.size	 DebugAction_Flags_CollisionOnOff,.Lfe38-DebugAction_Flags_CollisionOnOff
	.align	2, 0
	.type	 DebugAction_Flags_EncounterOnOff,function
	.thumb_func
DebugAction_Flags_EncounterOnOff:
	push	{lr}
	mov	r0, #0x21
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L210	@cond_branch
	mov	r0, #0x21
	bl	FlagClear
	mov	r0, #0x3
	bl	PlaySE
	b	.L211
.L210:
	mov	r0, #0x21
	bl	FlagSet
	mov	r0, #0x2
	bl	PlaySE
.L211:
	pop	{r0}
	bx	r0
.Lfe39:
	.size	 DebugAction_Flags_EncounterOnOff,.Lfe39-DebugAction_Flags_EncounterOnOff
	.align	2, 0
	.type	 DebugAction_Flags_TrainerSeeOnOff,function
	.thumb_func
DebugAction_Flags_TrainerSeeOnOff:
	push	{lr}
	mov	r0, #0x22
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L213	@cond_branch
	mov	r0, #0x22
	bl	FlagClear
	mov	r0, #0x3
	bl	PlaySE
	b	.L214
.L213:
	mov	r0, #0x22
	bl	FlagSet
	mov	r0, #0x2
	bl	PlaySE
.L214:
	pop	{r0}
	bx	r0
.Lfe40:
	.size	 DebugAction_Flags_TrainerSeeOnOff,.Lfe40-DebugAction_Flags_TrainerSeeOnOff
	.align	2, 0
	.type	 DebugAction_Flags_BagUseOnOff,function
	.thumb_func
DebugAction_Flags_BagUseOnOff:
	push	{lr}
	mov	r0, #0x23
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L216	@cond_branch
	mov	r0, #0x23
	bl	FlagClear
	mov	r0, #0x3
	bl	PlaySE
	b	.L217
.L216:
	mov	r0, #0x23
	bl	FlagSet
	mov	r0, #0x2
	bl	PlaySE
.L217:
	pop	{r0}
	bx	r0
.Lfe41:
	.size	 DebugAction_Flags_BagUseOnOff,.Lfe41-DebugAction_Flags_BagUseOnOff
	.align	2, 0
	.type	 DebugAction_Flags_CatchingOnOff,function
	.thumb_func
DebugAction_Flags_CatchingOnOff:
	push	{lr}
	mov	r0, #0x24
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L219	@cond_branch
	mov	r0, #0x24
	bl	FlagClear
	mov	r0, #0x3
	bl	PlaySE
	b	.L220
.L219:
	mov	r0, #0x24
	bl	FlagSet
	mov	r0, #0x2
	bl	PlaySE
.L220:
	pop	{r0}
	bx	r0
.Lfe42:
	.size	 DebugAction_Flags_CatchingOnOff,.Lfe42-DebugAction_Flags_CatchingOnOff
	.align	2, 0
	.type	 DebugAction_Vars_Vars,function
	.thumb_func
DebugAction_Vars_Vars:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L222
	lsl	r5, r0, #0x2
	add	r5, r5, r0
	lsl	r5, r5, #0x3
	add	r5, r5, r1
	ldrb	r0, [r5, #0xa]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r5, #0xa]
	bl	RemoveWindow
	bl	HideMapNamePopUpWindow
	bl	LoadMessageBoxAndBorderGfx
	ldr	r0, .L222+0x4
	bl	AddWindow
	add	r6, r0, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	add	r0, r6, #0
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	add	r0, r6, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r4, .L222+0x8
	mov	r0, #0x80
	lsl	r0, r0, #0x7
	mov	r9, r0
	add	r0, r4, #0
	mov	r1, r9
	mov	r2, #0x2
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L222+0xc
	mov	r8, r0
	mov	r1, r9
	mov	r2, #0x0
	mov	r3, #0x4
	bl	ConvertIntToHexStringN
	ldr	r1, .L222+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldr	r4, .L222+0x14
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	add	r0, r4, #0
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	ldr	r0, .L222+0x18
	ldr	r1, [r0]
	mov	r0, r8
	bl	StringCopy
	ldr	r0, .L222+0x1c
	mov	r8, r0
	ldr	r1, .L222+0x20
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	str	r0, [sp]
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	add	r0, r6, #0
	mov	r1, #0x1
	mov	r2, r8
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
	ldr	r0, .L222+0x24
	str	r0, [r5]
	strh	r6, [r5, #0xc]
	mov	r0, r9
	strh	r0, [r5, #0xe]
	strh	r4, [r5, #0x10]
	strh	r4, [r5, #0x12]
	add	sp, sp, #0xc
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L223:
	.align	2, 0
.L222:
	.word	gTasks
	.word	sDebugNumberDisplayWindowTemplate
	.word	gStringVar1
	.word	gStringVar2
	.word	gDebugText_VariableHex
	.word	gStringVar3
	.word	gText_DigitIndicator
	.word	gStringVar4
	.word	gDebugText_Variable
	.word	DebugAction_Vars_Select
.Lfe43:
	.size	 DebugAction_Vars_Vars,.Lfe43-DebugAction_Vars_Vars
	.align	2, 0
	.type	 DebugAction_Vars_Select,function
	.thumb_func
DebugAction_Vars_Select:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r2, .L243
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L225	@cond_branch
	ldr	r1, .L243+0x4
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r3, r0, r1
	ldr	r1, .L243+0x8
	mov	r4, #0x10
	ldrsh	r0, [r3, r4]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r3, #0xe]
	add	r0, r0, r1
	strh	r0, [r3, #0xe]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	ldr	r1, .L243+0xc
	cmp	r0, r1
	ble	.L225	@cond_branch
	strh	r1, [r3, #0xe]
.L225:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L227	@cond_branch
	ldr	r1, .L243+0x4
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r3, r0, r1
	ldr	r1, .L243+0x8
	mov	r4, #0x10
	ldrsh	r0, [r3, r4]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r3, #0xe]
	sub	r0, r0, r1
	strh	r0, [r3, #0xe]
	lsl	r0, r0, #0x10
	ldr	r1, .L243+0x10
	cmp	r0, r1
	bgt	.L227	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x7
	strh	r0, [r3, #0xe]
.L227:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L229	@cond_branch
	ldr	r0, .L243+0x4
	lsl	r1, r7, #0x2
	add	r1, r1, r7
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x10]
	sub	r0, r0, #0x1
	strh	r0, [r1, #0x10]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L229	@cond_branch
	mov	r0, #0x0
	strh	r0, [r1, #0x10]
.L229:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L231	@cond_branch
	ldr	r1, .L243+0x4
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r1, r0, r1
	ldrh	r0, [r1, #0x10]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x10]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x4
	ble	.L231	@cond_branch
	mov	r0, #0x4
	strh	r0, [r1, #0x10]
.L231:
	ldr	r0, .L243
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L233	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r4, .L243+0x14
	ldr	r1, .L243+0x4
	lsl	r5, r7, #0x2
	add	r0, r5, r7
	lsl	r0, r0, #0x3
	add	r6, r0, r1
	mov	r0, #0xe
	ldrsh	r1, [r6, r0]
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L243+0x18
	mov	r2, #0xe
	ldrsh	r1, [r6, r2]
	mov	r2, #0x0
	mov	r3, #0x4
	bl	ConvertIntToHexStringN
	ldr	r1, .L243+0x1c
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldrh	r0, [r6, #0xe]
	bl	VarGetIfExist
	lsl	r0, r0, #0x10
	ldr	r1, .L243+0x20
	add	r4, r5, #0
	cmp	r0, r1
	bne	.L234	@cond_branch
	mov	r0, #0x0
	b	.L241
.L244:
	.align	2, 0
.L243:
	.word	gMain
	.word	gTasks
	.word	sPowersOfTen
	.word	0x40ff
	.word	0x3fff0000
	.word	gStringVar1
	.word	gStringVar2
	.word	gDebugText_VariableHex
	.word	-0x10000
.L234:
	ldrh	r0, [r6, #0xe]
	bl	VarGet
.L241:
	strh	r0, [r6, #0x12]
	ldr	r0, .L245
	ldr	r1, .L245+0x4
	add	r4, r4, r7
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	mov	r3, #0x12
	ldrsh	r1, [r4, r3]
	mov	r2, #0x2
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L245+0x8
	ldr	r2, .L245+0xc
	mov	r3, #0x10
	ldrsh	r1, [r4, r3]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r5, .L245+0x10
	ldr	r1, .L245+0x14
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r4, #0xc]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
.L233:
	ldr	r0, .L245+0x18
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB3735
	b	.L236	@long jump
.LCB3735:
	ldr	r1, .L245+0x4
	lsl	r5, r7, #0x2
	add	r0, r5, r7
	lsl	r0, r0, #0x3
	add	r6, r0, r1
	mov	r4, #0x0
	mov	r8, r4
	mov	r0, r8
	strh	r0, [r6, #0x10]
	mov	r0, #0x5
	bl	PlaySE
	ldr	r4, .L245+0x1c
	mov	r2, #0xe
	ldrsh	r1, [r6, r2]
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L245+0x8
	mov	r3, #0xe
	ldrsh	r1, [r6, r3]
	mov	r2, #0x0
	mov	r3, #0x4
	bl	ConvertIntToHexStringN
	ldr	r1, .L245+0x20
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldrh	r0, [r6, #0xe]
	bl	VarGetIfExist
	lsl	r0, r0, #0x10
	ldr	r1, .L245+0x24
	add	r4, r5, #0
	cmp	r0, r1
	bne	.L237	@cond_branch
	mov	r0, r8
	b	.L242
.L246:
	.align	2, 0
.L245:
	.word	gStringVar3
	.word	gTasks
	.word	gStringVar2
	.word	gText_DigitIndicator
	.word	gStringVar4
	.word	gDebugText_Variable
	.word	gMain
	.word	gStringVar1
	.word	gDebugText_VariableHex
	.word	-0x10000
.L237:
	ldrh	r0, [r6, #0xe]
	bl	VarGet
.L242:
	strh	r0, [r6, #0x12]
	ldr	r5, .L247
	ldr	r0, .L247+0x4
	add	r4, r4, r7
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	mov	r2, #0x12
	ldrsh	r1, [r4, r2]
	add	r0, r5, #0
	mov	r2, #0x2
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	add	r0, r5, #0
	add	r1, r5, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	ldr	r0, .L247+0x8
	ldr	r2, .L247+0xc
	mov	r3, #0x10
	ldrsh	r1, [r4, r3]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r5, .L247+0x10
	ldr	r1, .L247+0x14
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r4, #0xc]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
	ldrh	r0, [r4, #0x12]
	strh	r0, [r4, #0x14]
	ldr	r0, .L247+0x18
	str	r0, [r4]
	b	.L239
.L248:
	.align	2, 0
.L247:
	.word	gStringVar3
	.word	gTasks
	.word	gStringVar2
	.word	gText_DigitIndicator
	.word	gStringVar4
	.word	gDebugText_VariableValueSet
	.word	DebugAction_Vars_SetValue
.L236:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L239	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r7, #0
	bl	DebugAction_DestroyExtraWindow
.L239:
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe44:
	.size	 DebugAction_Vars_Select,.Lfe44-DebugAction_Vars_Select
	.align	2, 0
	.type	 DebugAction_Vars_SetValue,function
	.thumb_func
DebugAction_Vars_SetValue:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r2, .L263
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L250	@cond_branch
	ldr	r1, .L263+0x4
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r3, r0, r1
	ldr	r1, .L263+0x8
	mov	r4, #0x10
	ldrsh	r0, [r3, r4]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r3, #0x14]
	add	r0, r0, r1
	strh	r0, [r3, #0x14]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x63
	ble	.L250	@cond_branch
	mov	r0, #0x63
	strh	r0, [r3, #0x14]
.L250:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L252	@cond_branch
	ldr	r1, .L263+0x4
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r3, r0, r1
	ldr	r1, .L263+0x8
	mov	r4, #0x10
	ldrsh	r0, [r3, r4]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r3, #0x14]
	sub	r0, r0, r1
	strh	r0, [r3, #0x14]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L252	@cond_branch
	mov	r0, #0x0
	strh	r0, [r3, #0x14]
.L252:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L254	@cond_branch
	ldr	r0, .L263+0x4
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x10]
	sub	r0, r0, #0x1
	strh	r0, [r1, #0x10]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L254	@cond_branch
	mov	r0, #0x0
	strh	r0, [r1, #0x10]
.L254:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L256	@cond_branch
	ldr	r1, .L263+0x4
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r1, r0, r1
	ldrh	r0, [r1, #0x10]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x10]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2
	ble	.L256	@cond_branch
	mov	r0, #0x2
	strh	r0, [r1, #0x10]
.L256:
	ldrh	r2, [r2, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r2
	cmp	r0, #0
	bne	.L258	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L259	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r6, #0
	bl	DebugAction_DestroyExtraWindow
	b	.L249
.L264:
	.align	2, 0
.L263:
	.word	gMain
	.word	gTasks
	.word	sPowersOfTen
.L258:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L265
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0xe]
	ldrh	r1, [r1, #0x12]
	bl	VarSet
.L259:
	ldr	r0, .L265+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L262	@cond_branch
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L249	@cond_branch
.L262:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r4, .L265+0x8
	ldr	r0, .L265
	lsl	r5, r6, #0x2
	add	r5, r5, r6
	lsl	r5, r5, #0x3
	add	r5, r5, r0
	mov	r0, #0xe
	ldrsh	r1, [r5, r0]
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	ldr	r6, .L265+0xc
	mov	r2, #0xe
	ldrsh	r1, [r5, r2]
	add	r0, r6, #0
	mov	r2, #0x0
	mov	r3, #0x4
	bl	ConvertIntToHexStringN
	ldr	r1, .L265+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	ldr	r4, .L265+0x14
	mov	r0, #0x14
	ldrsh	r1, [r5, r0]
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	add	r0, r4, #0
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	ldr	r1, .L265+0x18
	mov	r2, #0x10
	ldrsh	r0, [r5, r2]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r6, #0
	bl	StringCopy
	ldr	r4, .L265+0x1c
	ldr	r1, .L265+0x20
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r5, #0xc]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
.L249:
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L266:
	.align	2, 0
.L265:
	.word	gTasks
	.word	gMain
	.word	gStringVar1
	.word	gStringVar2
	.word	gDebugText_VariableHex
	.word	gStringVar3
	.word	gText_DigitIndicator
	.word	gStringVar4
	.word	gDebugText_VariableValueSet
.Lfe45:
	.size	 DebugAction_Vars_SetValue,.Lfe45-DebugAction_Vars_SetValue
	.align	2, 0
	.type	 DebugAction_Give_Item,function
	.thumb_func
DebugAction_Give_Item:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L268
	lsl	r5, r0, #0x2
	add	r5, r5, r0
	lsl	r5, r5, #0x3
	add	r5, r5, r1
	ldrb	r0, [r5, #0xa]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r5, #0xa]
	bl	RemoveWindow
	bl	HideMapNamePopUpWindow
	bl	LoadMessageBoxAndBorderGfx
	ldr	r0, .L268+0x4
	bl	AddWindow
	add	r6, r0, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	add	r0, r6, #0
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	add	r0, r6, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r0, .L268+0x8
	ldr	r1, .L268+0xc
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, .L268+0x10
	mov	r1, #0x1
	mov	r2, #0x2
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L268+0x14
	mov	r0, #0x1
	add	r1, r4, #0
	bl	CopyItemName
	add	r0, r4, #0
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	ldr	r0, .L268+0x18
	mov	r8, r0
	ldr	r1, .L268+0x1c
	bl	StringExpandPlaceholders
	mov	r1, #0x1
	mov	r9, r1
	str	r1, [sp]
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	add	r0, r6, #0
	mov	r2, r8
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
	ldr	r0, .L268+0x20
	str	r0, [r5]
	strh	r6, [r5, #0xc]
	mov	r0, r9
	strh	r0, [r5, #0xe]
	strh	r4, [r5, #0x10]
	ldr	r1, .L268+0x24
	add	r0, r1, #0
	mov	r2, #0x1
	bl	AddItemIconSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0x14]
	ldr	r2, .L268+0x28
	mov	r0, #0x14
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r1, #0xdc
	strh	r1, [r0, #0x24]
	mov	r0, #0x14
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	mov	r1, #0x3c
	strh	r1, [r0, #0x26]
	mov	r1, #0x14
	ldrsh	r0, [r5, r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x5]
	add	sp, sp, #0xc
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L269:
	.align	2, 0
.L268:
	.word	gTasks
	.word	sDebugNumberDisplayWindowTemplate
	.word	gStringVar2
	.word	gText_DigitIndicator
	.word	gStringVar3
	.word	gStringVar1
	.word	gStringVar4
	.word	gDebugText_ItemID
	.word	DebugAction_Give_Item_SelectId
	.word	0xfdf3
	.word	gSprites
.Lfe46:
	.size	 DebugAction_Give_Item,.Lfe46-DebugAction_Give_Item
	.align	2, 0
	.type	 DebugAction_Give_Item_SelectId,function
	.thumb_func
DebugAction_Give_Item_SelectId:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r4, .L283
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB4325
	b	.L271	@long jump
.LCB4325:
	mov	r0, #0x5
	bl	PlaySE
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	lsl	r5, r7, #0x2
	cmp	r0, #0
	beq	.L272	@cond_branch
	ldr	r1, .L283+0x4
	add	r0, r5, r7
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	ldr	r1, .L283+0x8
	mov	r3, #0x10
	ldrsh	r0, [r2, r3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r2, #0xe]
	add	r0, r0, r1
	strh	r0, [r2, #0xe]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, #0xc1
	lsl	r1, r1, #0x2
	cmp	r0, r1
	ble	.L272	@cond_branch
	strh	r1, [r2, #0xe]
.L272:
	ldr	r2, .L283
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x80
	and	r0, r0, r1
	ldr	r4, .L283+0x4
	cmp	r0, #0
	beq	.L274	@cond_branch
	add	r0, r5, r7
	lsl	r0, r0, #0x3
	add	r3, r0, r4
	ldr	r1, .L283+0x8
	mov	r6, #0x10
	ldrsh	r0, [r3, r6]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r3, #0xe]
	sub	r0, r0, r1
	strh	r0, [r3, #0xe]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bgt	.L274	@cond_branch
	mov	r0, #0x1
	strh	r0, [r3, #0xe]
.L274:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L276	@cond_branch
	add	r0, r5, r7
	lsl	r0, r0, #0x3
	add	r1, r0, r4
	ldrh	r2, [r1, #0x10]
	mov	r3, #0x10
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	ble	.L276	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1, #0x10]
.L276:
	ldr	r0, .L283
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L278	@cond_branch
	add	r0, r5, r7
	lsl	r0, r0, #0x3
	add	r1, r0, r4
	ldrh	r2, [r1, #0x10]
	mov	r6, #0x10
	ldrsh	r0, [r1, r6]
	cmp	r0, #0x2
	bgt	.L278	@cond_branch
	add	r0, r2, #0x1
	strh	r0, [r1, #0x10]
.L278:
	ldr	r0, .L283+0xc
	ldr	r2, .L283+0x10
	add	r5, r5, r7
	lsl	r5, r5, #0x3
	add	r5, r5, r4
	mov	r3, #0x10
	ldrsh	r1, [r5, r3]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldrh	r0, [r5, #0xe]
	ldr	r4, .L283+0x14
	add	r1, r4, #0
	bl	CopyItemName
	add	r0, r4, #0
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	ldr	r0, .L283+0x18
	mov	r6, #0xe
	ldrsh	r1, [r5, r6]
	mov	r2, #0x2
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L283+0x1c
	ldr	r1, .L283+0x20
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r5, #0xc]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
	ldr	r4, .L283+0x24
	add	r0, r4, #0
	bl	FreeSpriteTilesByTag
	add	r0, r4, #0
	bl	FreeSpritePaletteByTag
	mov	r0, #0x14
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r6, .L283+0x28
	add	r0, r0, r6
	bl	FreeSpriteOamMatrix
	mov	r2, #0x14
	ldrsh	r1, [r5, r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	bl	DestroySprite
	ldrh	r2, [r5, #0xe]
	add	r0, r4, #0
	add	r1, r4, #0
	bl	AddItemIconSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0x14]
	mov	r3, #0x14
	ldrsh	r1, [r5, r3]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	mov	r1, #0xdc
	strh	r1, [r0, #0x24]
	mov	r0, #0x14
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	mov	r1, #0x3c
	strh	r1, [r0, #0x26]
	mov	r1, #0x14
	ldrsh	r0, [r5, r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x5]
.L271:
	ldr	r0, .L283
	ldrh	r1, [r0, #0x2e]
	mov	r2, #0x1
	mov	r8, r2
	mov	r0, r8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L280	@cond_branch
	ldr	r0, .L283+0x4
	lsl	r4, r7, #0x2
	add	r4, r4, r7
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	ldrh	r0, [r4, #0xe]
	mov	r6, #0x0
	strh	r0, [r4, #0x12]
	mov	r3, r8
	strh	r3, [r4, #0xe]
	strh	r6, [r4, #0x10]
	ldr	r0, .L283+0xc
	ldr	r1, .L283+0x10
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r5, .L283+0x14
	mov	r0, #0xe
	ldrsh	r1, [r4, r0]
	add	r0, r5, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	add	r0, r5, #0
	add	r1, r5, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	ldr	r5, .L283+0x1c
	ldr	r1, .L283+0x2c
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r4, #0xc]
	mov	r1, r8
	str	r1, [sp]
	str	r6, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
	ldr	r0, .L283+0x30
	str	r0, [r4]
	b	.L281
.L284:
	.align	2, 0
.L283:
	.word	gMain
	.word	gTasks
	.word	sPowersOfTen
	.word	gStringVar2
	.word	gText_DigitIndicator
	.word	gStringVar1
	.word	gStringVar3
	.word	gStringVar4
	.word	gDebugText_ItemID
	.word	0xfdf3
	.word	gSprites
	.word	gDebugText_ItemQuantity
	.word	DebugAction_Give_Item_SelectQuantity
.L280:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L281	@cond_branch
	ldr	r4, .L285
	add	r0, r4, #0
	bl	FreeSpriteTilesByTag
	add	r0, r4, #0
	bl	FreeSpritePaletteByTag
	ldr	r0, .L285+0x4
	lsl	r4, r7, #0x2
	add	r4, r4, r7
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	mov	r2, #0x14
	ldrsh	r1, [r4, r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r5, .L285+0x8
	add	r0, r0, r5
	bl	FreeSpriteOamMatrix
	mov	r3, #0x14
	ldrsh	r1, [r4, r3]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	bl	DestroySprite
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r7, #0
	bl	DebugAction_DestroyExtraWindow
.L281:
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L286:
	.align	2, 0
.L285:
	.word	0xfdf3
	.word	gTasks
	.word	gSprites
.Lfe47:
	.size	 DebugAction_Give_Item_SelectId,.Lfe47-DebugAction_Give_Item_SelectId
	.align	2, 0
	.type	 DebugAction_Give_Item_SelectQuantity,function
	.thumb_func
DebugAction_Give_Item_SelectQuantity:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r4, .L300
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L288	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	lsl	r5, r6, #0x2
	cmp	r0, #0
	beq	.L289	@cond_branch
	ldr	r1, .L300+0x4
	add	r0, r5, r6
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	ldr	r1, .L300+0x8
	mov	r3, #0x10
	ldrsh	r0, [r2, r3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r2, #0xe]
	add	r0, r0, r1
	strh	r0, [r2, #0xe]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x63
	ble	.L289	@cond_branch
	mov	r0, #0x63
	strh	r0, [r2, #0xe]
.L289:
	ldr	r2, .L300
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x80
	and	r0, r0, r1
	ldr	r4, .L300+0x4
	cmp	r0, #0
	beq	.L291	@cond_branch
	add	r0, r5, r6
	lsl	r0, r0, #0x3
	add	r3, r0, r4
	ldr	r1, .L300+0x8
	mov	r7, #0x10
	ldrsh	r0, [r3, r7]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r3, #0xe]
	sub	r0, r0, r1
	strh	r0, [r3, #0xe]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bgt	.L291	@cond_branch
	mov	r0, #0x1
	strh	r0, [r3, #0xe]
.L291:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L293	@cond_branch
	add	r0, r5, r6
	lsl	r0, r0, #0x3
	add	r1, r0, r4
	ldrh	r2, [r1, #0x10]
	mov	r3, #0x10
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	ble	.L293	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1, #0x10]
.L293:
	ldr	r0, .L300
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L295	@cond_branch
	add	r0, r5, r6
	lsl	r0, r0, #0x3
	add	r1, r0, r4
	ldrh	r2, [r1, #0x10]
	mov	r7, #0x10
	ldrsh	r0, [r1, r7]
	cmp	r0, #0x1
	bgt	.L295	@cond_branch
	add	r0, r2, #0x1
	strh	r0, [r1, #0x10]
.L295:
	ldr	r0, .L300+0xc
	ldr	r2, .L300+0x10
	add	r5, r5, r6
	lsl	r5, r5, #0x3
	add	r5, r5, r4
	mov	r3, #0x10
	ldrsh	r1, [r5, r3]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r4, .L300+0x14
	mov	r7, #0xe
	ldrsh	r1, [r5, r7]
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	add	r0, r4, #0
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	ldr	r4, .L300+0x18
	ldr	r1, .L300+0x1c
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r5, #0xc]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
.L288:
	ldr	r0, .L300
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L297	@cond_branch
	ldr	r4, .L300+0x20
	add	r0, r4, #0
	bl	FreeSpriteTilesByTag
	add	r0, r4, #0
	bl	FreeSpritePaletteByTag
	ldr	r0, .L300+0x4
	lsl	r4, r6, #0x2
	add	r4, r4, r6
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	mov	r0, #0x14
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r5, .L300+0x24
	add	r0, r0, r5
	bl	FreeSpriteOamMatrix
	mov	r3, #0x14
	ldrsh	r1, [r4, r3]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	bl	DestroySprite
	ldr	r0, .L300+0x28
	bl	PlaySE
	ldrh	r0, [r4, #0x12]
	ldrh	r1, [r4, #0xe]
	bl	AddBagItem
	add	r0, r6, #0
	bl	DebugAction_DestroyExtraWindow
	b	.L298
.L301:
	.align	2, 0
.L300:
	.word	gMain
	.word	gTasks
	.word	sPowersOfTen
	.word	gStringVar2
	.word	gText_DigitIndicator
	.word	gStringVar1
	.word	gStringVar4
	.word	gDebugText_ItemQuantity
	.word	0xfdf3
	.word	gSprites
	.word	0x155
.L297:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L298	@cond_branch
	ldr	r4, .L302
	add	r0, r4, #0
	bl	FreeSpriteTilesByTag
	add	r0, r4, #0
	bl	FreeSpritePaletteByTag
	ldr	r0, .L302+0x4
	lsl	r4, r6, #0x2
	add	r4, r4, r6
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	mov	r7, #0x14
	ldrsh	r1, [r4, r7]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r5, .L302+0x8
	add	r0, r0, r5
	bl	FreeSpriteOamMatrix
	mov	r0, #0x14
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	bl	DestroySprite
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r6, #0
	bl	DebugAction_DestroyExtraWindow
.L298:
	add	sp, sp, #0xc
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L303:
	.align	2, 0
.L302:
	.word	0xfdf3
	.word	gTasks
	.word	gSprites
.Lfe48:
	.size	 DebugAction_Give_Item_SelectQuantity,.Lfe48-DebugAction_Give_Item_SelectQuantity
	.align	2, 0
	.type	 DebugAction_Give_AllTMs,function
	.thumb_func
DebugAction_Give_AllTMs:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L317
	bl	PlayFanfare
	mov	r4, #0xf1
	lsl	r4, r4, #0x1
	ldr	r5, .L317+0x4
.L308:
	add	r0, r4, #0
	mov	r1, #0x1
	bl	CheckBagHasItem
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L307	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x1
	bl	AddBagItem
.L307:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, r5
	bls	.L308	@cond_branch
	ldr	r4, .L317+0x8
	ldr	r5, .L317+0xc
.L314:
	add	r0, r4, #0
	mov	r1, #0x1
	bl	CheckBagHasItem
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L313	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x1
	bl	AddBagItem
.L313:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, r5
	bls	.L314	@cond_branch
	add	r0, r6, #0
	bl	Debug_DestroyMenu
	bl	EnableBothScriptContexts
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L318:
	.align	2, 0
.L317:
	.word	0x157
	.word	0x213
	.word	0x2aa
	.word	0x2b1
.Lfe49:
	.size	 DebugAction_Give_AllTMs,.Lfe49-DebugAction_Give_AllTMs
	.align	2, 0
	.type	 ResetMonDataStruct,function
	.thumb_func
ResetMonDataStruct:
	push	{r4, lr}
	mov	r2, #0x0
	mov	r4, #0x0
	mov	r3, #0x1
	mov	r1, #0x1
	strh	r1, [r0]
	strb	r3, [r0, #0x2]
	strb	r2, [r0, #0x3]
	strh	r4, [r0, #0x4]
	strh	r4, [r0, #0x6]
	strb	r2, [r0, #0x8]
	strb	r2, [r0, #0x9]
	strb	r2, [r0, #0xa]
	strb	r2, [r0, #0xb]
	strb	r2, [r0, #0xc]
	strb	r2, [r0, #0xd]
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe50:
	.size	 ResetMonDataStruct,.Lfe50-ResetMonDataStruct
	.align	2, 0
	.type	 DebugAction_Give_PokemonSimple,function
	.thumb_func
DebugAction_Give_PokemonSimple:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	sp, sp, #-0x10
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L321
	mov	r0, #0x18
	bl	AllocZeroed
	str	r0, [r5]
	bl	ResetMonDataStruct
	ldr	r0, .L321+0x4
	lsl	r5, r4, #0x2
	add	r5, r5, r4
	lsl	r5, r5, #0x3
	add	r5, r5, r0
	ldrb	r0, [r5, #0xa]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r5, #0xa]
	bl	RemoveWindow
	bl	HideMapNamePopUpWindow
	bl	LoadMessageBoxAndBorderGfx
	ldr	r0, .L321+0x8
	bl	AddWindow
	add	r6, r0, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	add	r0, r6, #0
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	add	r0, r6, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r0, .L321+0xc
	ldr	r1, .L321+0x10
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, .L321+0x14
	mov	r1, #0x1
	mov	r2, #0x2
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L321+0x18
	ldr	r1, .L321+0x1c
	add	r0, r4, #0
	bl	StringCopy
	add	r0, r4, #0
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	ldr	r0, .L321+0x20
	mov	r9, r0
	ldr	r1, .L321+0x24
	bl	StringExpandPlaceholders
	mov	r1, #0x1
	mov	r8, r1
	str	r1, [sp]
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	add	r0, r6, #0
	mov	r2, r9
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
	ldr	r0, .L321+0x28
	str	r0, [r5]
	strh	r6, [r5, #0xc]
	mov	r2, r8
	strh	r2, [r5, #0xe]
	strh	r4, [r5, #0x10]
	strh	r4, [r5, #0x12]
	bl	FreeMonIconPalettes
	ldrh	r0, [r5, #0xe]
	bl	LoadMonIconPalette
	ldrh	r0, [r5, #0xe]
	ldr	r1, .L321+0x2c
	mov	r2, #0x4
	str	r2, [sp]
	str	r4, [sp, #0x4]
	mov	r2, r8
	str	r2, [sp, #0x8]
	str	r4, [sp, #0xc]
	mov	r2, #0xd2
	mov	r3, #0x32
	bl	CreateMonIcon
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0x14]
	ldr	r2, .L321+0x30
	mov	r1, #0x14
	ldrsh	r0, [r5, r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x5]
	add	sp, sp, #0x10
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L322:
	.align	2, 0
.L321:
	.word	sDebugMonData
	.word	gTasks
	.word	sDebugNumberDisplayWindowTemplate
	.word	gStringVar2
	.word	gText_DigitIndicator
	.word	gStringVar3
	.word	gStringVar1
	.word	gSpeciesNames+0xb
	.word	gStringVar4
	.word	gDebugText_PokemonID
	.word	DebugAction_Give_Pokemon_SelectId
	.word	SpriteCB_MonIcon
	.word	gSprites
.Lfe51:
	.size	 DebugAction_Give_PokemonSimple,.Lfe51-DebugAction_Give_PokemonSimple
	.align	2, 0
	.type	 DebugAction_Give_PokemonComplex,function
	.thumb_func
DebugAction_Give_PokemonComplex:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	sp, sp, #-0x10
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L324
	mov	r0, #0x18
	bl	AllocZeroed
	str	r0, [r5]
	bl	ResetMonDataStruct
	ldr	r0, .L324+0x4
	lsl	r5, r4, #0x2
	add	r5, r5, r4
	lsl	r5, r5, #0x3
	add	r5, r5, r0
	ldrb	r0, [r5, #0xa]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r5, #0xa]
	bl	RemoveWindow
	bl	HideMapNamePopUpWindow
	bl	LoadMessageBoxAndBorderGfx
	ldr	r0, .L324+0x8
	bl	AddWindow
	add	r6, r0, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	add	r0, r6, #0
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	add	r0, r6, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r0, .L324+0xc
	ldr	r1, .L324+0x10
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, .L324+0x14
	mov	r1, #0x1
	mov	r2, #0x2
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L324+0x18
	ldr	r1, .L324+0x1c
	add	r0, r4, #0
	bl	StringCopy
	add	r0, r4, #0
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	ldr	r0, .L324+0x20
	mov	r8, r0
	ldr	r1, .L324+0x24
	bl	StringExpandPlaceholders
	mov	r4, #0x1
	str	r4, [sp]
	mov	r1, #0x0
	mov	r9, r1
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	add	r0, r6, #0
	mov	r1, #0x1
	mov	r2, r8
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
	ldr	r0, .L324+0x28
	str	r0, [r5]
	strh	r6, [r5, #0xc]
	strh	r4, [r5, #0xe]
	mov	r2, r9
	strh	r2, [r5, #0x10]
	strh	r4, [r5, #0x12]
	bl	FreeMonIconPalettes
	ldrh	r0, [r5, #0xe]
	bl	LoadMonIconPalette
	ldrh	r0, [r5, #0xe]
	bl	GetFormIdFromFormSpeciesId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r3, [r5, #0xe]
	ldr	r1, .L324+0x2c
	mov	r2, #0x4
	str	r2, [sp]
	mov	r2, r9
	str	r2, [sp, #0x4]
	str	r4, [sp, #0x8]
	str	r0, [sp, #0xc]
	add	r0, r3, #0
	mov	r2, #0xd2
	mov	r3, #0x32
	bl	CreateMonIcon
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0x14]
	ldr	r2, .L324+0x30
	mov	r1, #0x14
	ldrsh	r0, [r5, r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x5]
	mov	r2, r9
	strh	r2, [r5, #0x16]
	add	sp, sp, #0x10
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L325:
	.align	2, 0
.L324:
	.word	sDebugMonData
	.word	gTasks
	.word	sDebugNumberDisplayWindowTemplate
	.word	gStringVar2
	.word	gText_DigitIndicator
	.word	gStringVar3
	.word	gStringVar1
	.word	gSpeciesNames+0xb
	.word	gStringVar4
	.word	gDebugText_PokemonID
	.word	DebugAction_Give_Pokemon_SelectId
	.word	SpriteCB_MonIcon
	.word	gSprites
.Lfe52:
	.size	 DebugAction_Give_PokemonComplex,.Lfe52-DebugAction_Give_PokemonComplex
	.align	2, 0
	.type	 DebugAction_Give_Pokemon_SelectId,function
	.thumb_func
DebugAction_Give_Pokemon_SelectId:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r4, .L341
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB5409
	b	.L327	@long jump
.LCB5409:
	mov	r0, #0x5
	bl	PlaySE
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	lsl	r5, r7, #0x2
	cmp	r0, #0
	beq	.L328	@cond_branch
	ldr	r1, .L341+0x4
	add	r0, r5, r7
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	ldr	r1, .L341+0x8
	mov	r3, #0x10
	ldrsh	r0, [r2, r3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r2, #0xe]
	add	r0, r0, r1
	strh	r0, [r2, #0xe]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	ldr	r1, .L341+0xc
	cmp	r0, r1
	ble	.L328	@cond_branch
	strh	r1, [r2, #0xe]
.L328:
	ldr	r2, .L341
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x80
	and	r0, r0, r1
	ldr	r4, .L341+0x4
	cmp	r0, #0
	beq	.L331	@cond_branch
	add	r0, r5, r7
	lsl	r0, r0, #0x3
	add	r3, r0, r4
	ldr	r1, .L341+0x8
	mov	r6, #0x10
	ldrsh	r0, [r3, r6]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r3, #0xe]
	sub	r0, r0, r1
	strh	r0, [r3, #0xe]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bgt	.L331	@cond_branch
	mov	r0, #0x1
	strh	r0, [r3, #0xe]
.L331:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L334	@cond_branch
	add	r0, r5, r7
	lsl	r0, r0, #0x3
	add	r1, r0, r4
	ldrh	r2, [r1, #0x10]
	mov	r3, #0x10
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	ble	.L334	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1, #0x10]
.L334:
	ldr	r0, .L341
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L336	@cond_branch
	add	r0, r5, r7
	lsl	r0, r0, #0x3
	add	r1, r0, r4
	ldrh	r2, [r1, #0x10]
	mov	r6, #0x10
	ldrsh	r0, [r1, r6]
	cmp	r0, #0x2
	bgt	.L336	@cond_branch
	add	r0, r2, #0x1
	strh	r0, [r1, #0x10]
.L336:
	ldr	r0, .L341+0x10
	ldr	r2, .L341+0x14
	add	r5, r5, r7
	lsl	r5, r5, #0x3
	add	r5, r5, r4
	mov	r3, #0x10
	ldrsh	r1, [r5, r3]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r4, .L341+0x18
	mov	r6, #0xe
	ldrsh	r1, [r5, r6]
	mov	r0, #0xb
	mul	r1, r1, r0
	ldr	r0, .L341+0x1c
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	add	r0, r4, #0
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	ldr	r0, .L341+0x20
	mov	r2, #0xe
	ldrsh	r1, [r5, r2]
	mov	r2, #0x2
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	ldr	r6, .L341+0x24
	ldr	r1, .L341+0x28
	add	r0, r6, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r5, #0xc]
	mov	r3, #0x1
	mov	r8, r3
	str	r3, [sp]
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r6, #0
	bl	AddTextPrinterParameterized
	mov	r6, #0x14
	ldrsh	r1, [r5, r6]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r6, .L341+0x2c
	add	r0, r0, r6
	bl	FreeAndDestroyMonIconSprite
	bl	FreeMonIconPalettes
	ldrh	r0, [r5, #0xe]
	bl	LoadMonIconPalette
	ldrh	r0, [r5, #0xe]
	bl	GetFormIdFromFormSpeciesId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r3, [r5, #0xe]
	ldr	r1, .L341+0x30
	mov	r2, #0x4
	str	r2, [sp]
	str	r4, [sp, #0x4]
	mov	r2, r8
	str	r2, [sp, #0x8]
	str	r0, [sp, #0xc]
	add	r0, r3, #0
	mov	r2, #0xd2
	mov	r3, #0x32
	bl	CreateMonIcon
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0x14]
	mov	r3, #0x14
	ldrsh	r0, [r5, r3]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x5]
.L327:
	ldr	r0, .L341
	ldrh	r1, [r0, #0x2e]
	mov	r6, #0x1
	mov	r8, r6
	mov	r0, r8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L338	@cond_branch
	ldr	r0, .L341+0x34
	ldr	r1, [r0]
	ldr	r0, .L341+0x4
	lsl	r5, r7, #0x2
	add	r5, r5, r7
	lsl	r5, r5, #0x3
	add	r5, r5, r0
	ldrh	r0, [r5, #0xe]
	mov	r6, #0x0
	strh	r0, [r1]
	mov	r0, r8
	strh	r0, [r5, #0xe]
	strh	r6, [r5, #0x10]
	ldr	r0, .L341+0x10
	ldr	r1, .L341+0x14
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r4, .L341+0x18
	mov	r2, #0xe
	ldrsh	r1, [r5, r2]
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	add	r0, r4, #0
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	ldr	r4, .L341+0x24
	ldr	r1, .L341+0x38
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r5, #0xc]
	mov	r3, r8
	str	r3, [sp]
	str	r6, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
	ldr	r0, .L341+0x3c
	str	r0, [r5]
	b	.L339
.L342:
	.align	2, 0
.L341:
	.word	gMain
	.word	gTasks
	.word	sPowersOfTen
	.word	0x4b5
	.word	gStringVar2
	.word	gText_DigitIndicator
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gStringVar3
	.word	gStringVar4
	.word	gDebugText_PokemonID
	.word	gSprites
	.word	SpriteCB_MonIcon
	.word	sDebugMonData
	.word	gDebugText_PokemonLevel
	.word	DebugAction_Give_Pokemon_SelectLevel
.L338:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L339	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L343
	ldr	r0, [r0]
	bl	Free
	bl	FreeMonIconPalettes
	ldr	r1, .L343+0x4
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r6, #0x14
	ldrsh	r1, [r0, r6]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L343+0x8
	add	r0, r0, r1
	bl	FreeAndDestroyMonIconSprite
	add	r0, r7, #0
	bl	DebugAction_DestroyExtraWindow
.L339:
	add	sp, sp, #0x10
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L344:
	.align	2, 0
.L343:
	.word	sDebugMonData
	.word	gTasks
	.word	gSprites
.Lfe53:
	.size	 DebugAction_Give_Pokemon_SelectId,.Lfe53-DebugAction_Give_Pokemon_SelectId
	.align	2, 0
	.type	 DebugAction_Give_Pokemon_SelectLevel,function
	.thumb_func
DebugAction_Give_Pokemon_SelectLevel:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r4, .L360
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L346	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	lsl	r5, r7, #0x2
	cmp	r0, #0
	beq	.L347	@cond_branch
	ldr	r1, .L360+0x4
	add	r0, r5, r7
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	ldr	r1, .L360+0x8
	mov	r3, #0x10
	ldrsh	r0, [r2, r3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r2, #0xe]
	add	r0, r0, r1
	strh	r0, [r2, #0xe]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x64
	ble	.L347	@cond_branch
	mov	r0, #0x64
	strh	r0, [r2, #0xe]
.L347:
	ldr	r2, .L360
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x80
	and	r0, r0, r1
	ldr	r4, .L360+0x4
	cmp	r0, #0
	beq	.L349	@cond_branch
	add	r0, r5, r7
	lsl	r0, r0, #0x3
	add	r3, r0, r4
	ldr	r1, .L360+0x8
	mov	r6, #0x10
	ldrsh	r0, [r3, r6]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r3, #0xe]
	sub	r0, r0, r1
	strh	r0, [r3, #0xe]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bgt	.L349	@cond_branch
	mov	r0, #0x1
	strh	r0, [r3, #0xe]
.L349:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L351	@cond_branch
	add	r0, r5, r7
	lsl	r0, r0, #0x3
	add	r1, r0, r4
	ldrh	r2, [r1, #0x10]
	mov	r3, #0x10
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	ble	.L351	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1, #0x10]
.L351:
	ldr	r0, .L360
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L353	@cond_branch
	add	r0, r5, r7
	lsl	r0, r0, #0x3
	add	r1, r0, r4
	ldrh	r2, [r1, #0x10]
	mov	r6, #0x10
	ldrsh	r0, [r1, r6]
	cmp	r0, #0x1
	bgt	.L353	@cond_branch
	add	r0, r2, #0x1
	strh	r0, [r1, #0x10]
.L353:
	ldr	r0, .L360+0xc
	ldr	r2, .L360+0x10
	add	r5, r5, r7
	lsl	r5, r5, #0x3
	add	r5, r5, r4
	mov	r3, #0x10
	ldrsh	r1, [r5, r3]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r4, .L360+0x14
	mov	r6, #0xe
	ldrsh	r1, [r5, r6]
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	add	r0, r4, #0
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	ldr	r4, .L360+0x18
	ldr	r1, .L360+0x1c
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r5, #0xc]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
.L346:
	ldr	r0, .L360
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	mov	r8, r0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L355	@cond_branch
	bl	FreeMonIconPalettes
	ldr	r1, .L360+0x4
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r6, r0, r1
	mov	r2, #0x14
	ldrsh	r1, [r6, r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L360+0x20
	add	r0, r0, r1
	bl	FreeAndDestroyMonIconSprite
	mov	r3, #0x12
	ldrsh	r5, [r6, r3]
	cmp	r5, #0
	bne	.L356	@cond_branch
	mov	r0, #0xa9
	lsl	r0, r0, #0x1
	bl	PlaySE
	ldr	r4, .L360+0x24
	ldr	r0, [r4]
	ldrh	r0, [r0]
	ldrb	r1, [r6, #0xe]
	str	r5, [sp]
	str	r5, [sp, #0x4]
	mov	r2, #0x0
	mov	r3, #0x0
	bl	ScriptGiveMon
	ldr	r0, [r4]
	bl	Free
	add	r0, r7, #0
	bl	DebugAction_DestroyExtraWindow
	b	.L358
.L361:
	.align	2, 0
.L360:
	.word	gMain
	.word	gTasks
	.word	sPowersOfTen
	.word	gStringVar2
	.word	gText_DigitIndicator
	.word	gStringVar1
	.word	gStringVar4
	.word	gDebugText_PokemonLevel
	.word	gSprites
	.word	sDebugMonData
.L356:
	ldr	r0, .L362
	ldr	r1, [r0]
	ldrh	r0, [r6, #0xe]
	mov	r5, #0x0
	strb	r0, [r1, #0x2]
	strh	r5, [r6, #0xe]
	strh	r5, [r6, #0x10]
	ldr	r4, .L362+0x4
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x0
	bl	ConvertIntToDecimalStringN
	add	r0, r4, #0
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	ldr	r0, .L362+0x8
	ldr	r1, .L362+0xc
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	ldr	r4, .L362+0x10
	ldr	r1, .L362+0x14
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r6, #0xc]
	mov	r1, r8
	str	r1, [sp]
	str	r5, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
	ldr	r0, .L362+0x18
	str	r0, [r6]
	b	.L358
.L363:
	.align	2, 0
.L362:
	.word	sDebugMonData
	.word	gStringVar3
	.word	gStringVar2
	.word	gDebugText_FlagUnset
	.word	gStringVar4
	.word	gDebugText_PokemonShiny
	.word	DebugAction_Give_Pokemon_SelectShiny
.L355:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L358	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L364
	ldr	r0, [r0]
	bl	Free
	bl	FreeMonIconPalettes
	ldr	r1, .L364+0x4
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r2, #0x14
	ldrsh	r1, [r0, r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L364+0x8
	add	r0, r0, r1
	bl	FreeAndDestroyMonIconSprite
	add	r0, r7, #0
	bl	DebugAction_DestroyExtraWindow
.L358:
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L365:
	.align	2, 0
.L364:
	.word	sDebugMonData
	.word	gTasks
	.word	gSprites
.Lfe54:
	.size	 DebugAction_Give_Pokemon_SelectLevel,.Lfe54-DebugAction_Give_Pokemon_SelectLevel
	.align	2, 0
	.type	 DebugAction_Give_Pokemon_SelectShiny,function
	.thumb_func
DebugAction_Give_Pokemon_SelectShiny:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r4, .L377
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L367	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	lsl	r4, r6, #0x2
	cmp	r0, #0
	beq	.L368	@cond_branch
	ldr	r1, .L377+0x4
	add	r0, r4, r6
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	ldr	r1, .L377+0x8
	mov	r3, #0x10
	ldrsh	r0, [r2, r3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r2, #0xe]
	add	r0, r0, r1
	strh	r0, [r2, #0xe]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x1
	ble	.L368	@cond_branch
	mov	r0, #0x1
	strh	r0, [r2, #0xe]
.L368:
	ldr	r0, .L377
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L370	@cond_branch
	ldr	r1, .L377+0x4
	add	r0, r4, r6
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	ldr	r1, .L377+0x8
	mov	r3, #0x10
	ldrsh	r0, [r2, r3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r2, #0xe]
	sub	r0, r0, r1
	strh	r0, [r2, #0xe]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L370	@cond_branch
	mov	r0, #0x0
	strh	r0, [r2, #0xe]
.L370:
	ldr	r0, .L377+0x4
	add	r1, r4, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r2, #0xe
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x1
	bne	.L372	@cond_branch
	ldr	r0, .L377+0xc
	ldr	r1, .L377+0x10
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	b	.L373
.L378:
	.align	2, 0
.L377:
	.word	gMain
	.word	gTasks
	.word	sPowersOfTen
	.word	gStringVar2
	.word	gDebugText_FlagSet
.L372:
	ldr	r0, .L379
	ldr	r1, .L379+0x4
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
.L373:
	ldr	r5, .L379+0x8
	ldr	r0, .L379+0xc
	add	r4, r4, r6
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	mov	r3, #0xe
	ldrsh	r1, [r4, r3]
	add	r0, r5, #0
	mov	r2, #0x2
	mov	r3, #0x0
	bl	ConvertIntToDecimalStringN
	add	r0, r5, #0
	add	r1, r5, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	ldr	r5, .L379+0x10
	ldr	r1, .L379+0x14
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r4, #0xc]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r5, #0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
.L367:
	ldr	r0, .L379+0x18
	ldrh	r1, [r0, #0x2e]
	mov	r7, #0x1
	add	r0, r7, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L374	@cond_branch
	ldr	r0, .L379+0x1c
	ldr	r1, [r0]
	ldr	r0, .L379+0xc
	lsl	r5, r6, #0x2
	add	r5, r5, r6
	lsl	r5, r5, #0x3
	add	r5, r5, r0
	ldrh	r0, [r5, #0xe]
	mov	r6, #0x0
	strb	r0, [r1, #0x3]
	strh	r6, [r5, #0xe]
	strh	r6, [r5, #0x10]
	ldr	r0, .L379
	ldr	r1, .L379+0x20
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r4, .L379+0x8
	mov	r0, #0xe
	ldrsh	r1, [r5, r0]
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	add	r0, r4, #0
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	ldr	r0, .L379+0x24
	ldr	r1, .L379+0x28
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r4, .L379+0x10
	ldr	r1, .L379+0x2c
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r5, #0xc]
	str	r7, [sp]
	str	r6, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
	ldr	r0, .L379+0x30
	str	r0, [r5]
	b	.L375
.L380:
	.align	2, 0
.L379:
	.word	gStringVar2
	.word	gDebugText_FlagUnset
	.word	gStringVar3
	.word	gTasks
	.word	gStringVar4
	.word	gDebugText_PokemonShiny
	.word	gMain
	.word	sDebugMonData
	.word	gText_DigitIndicator
	.word	gStringVar1
	.word	gNatureNamePointers
	.word	gDebugText_PokemonNature
	.word	DebugAction_Give_Pokemon_SelectNature
.L374:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L375	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L381
	ldr	r0, [r0]
	bl	Free
	add	r0, r6, #0
	bl	DebugAction_DestroyExtraWindow
.L375:
	add	sp, sp, #0xc
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L382:
	.align	2, 0
.L381:
	.word	sDebugMonData
.Lfe55:
	.size	 DebugAction_Give_Pokemon_SelectShiny,.Lfe55-DebugAction_Give_Pokemon_SelectShiny
	.align	2, 0
	.type	 DebugAction_Give_Pokemon_SelectNature,function
	.thumb_func
DebugAction_Give_Pokemon_SelectNature:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r4, .L392
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L384	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	lsl	r5, r6, #0x2
	cmp	r0, #0
	beq	.L385	@cond_branch
	ldr	r1, .L392+0x4
	add	r0, r5, r6
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	ldr	r1, .L392+0x8
	mov	r3, #0x10
	ldrsh	r0, [r2, r3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r2, #0xe]
	add	r0, r0, r1
	strh	r0, [r2, #0xe]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x18
	ble	.L385	@cond_branch
	mov	r0, #0x18
	strh	r0, [r2, #0xe]
.L385:
	ldr	r0, .L392
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x80
	and	r0, r0, r1
	ldr	r3, .L392+0x4
	cmp	r0, #0
	beq	.L387	@cond_branch
	add	r0, r5, r6
	lsl	r0, r0, #0x3
	add	r2, r0, r3
	ldr	r1, .L392+0x8
	mov	r4, #0x10
	ldrsh	r0, [r2, r4]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r2, #0xe]
	sub	r0, r0, r1
	strh	r0, [r2, #0xe]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L387	@cond_branch
	mov	r0, #0x0
	strh	r0, [r2, #0xe]
.L387:
	ldr	r0, .L392+0xc
	ldr	r2, .L392+0x10
	add	r5, r5, r6
	lsl	r5, r5, #0x3
	add	r5, r5, r3
	mov	r3, #0x10
	ldrsh	r1, [r5, r3]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r4, .L392+0x14
	mov	r0, #0xe
	ldrsh	r1, [r5, r0]
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	add	r0, r4, #0
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	ldr	r0, .L392+0x18
	ldr	r2, .L392+0x1c
	mov	r3, #0xe
	ldrsh	r1, [r5, r3]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r4, .L392+0x20
	ldr	r1, .L392+0x24
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r5, #0xc]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
.L384:
	ldr	r0, .L392
	ldrh	r1, [r0, #0x2e]
	mov	r7, #0x1
	add	r0, r7, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L389	@cond_branch
	ldr	r4, .L392+0x28
	mov	r8, r4
	ldr	r1, [r4]
	ldr	r0, .L392+0x4
	lsl	r5, r6, #0x2
	add	r5, r5, r6
	lsl	r5, r5, #0x3
	add	r5, r5, r0
	ldrh	r0, [r5, #0xe]
	mov	r6, #0x0
	strh	r0, [r1, #0x4]
	strh	r6, [r5, #0xe]
	strh	r6, [r5, #0x10]
	ldr	r0, .L392+0xc
	ldr	r1, .L392+0x10
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r4, .L392+0x14
	mov	r0, #0xe
	ldrsh	r1, [r5, r0]
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	add	r0, r4, #0
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	mov	r1, r8
	ldr	r0, [r1]
	ldrh	r4, [r0]
	add	r0, r4, #0
	bl	GetFormIdFromFormSpeciesId
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetAbilityBySpecies
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L392+0x18
	mov	r1, #0xd
	mul	r1, r1, r0
	ldr	r0, .L392+0x2c
	add	r1, r1, r0
	add	r0, r2, #0
	bl	StringCopy
	ldr	r4, .L392+0x20
	ldr	r1, .L392+0x30
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r5, #0xc]
	str	r7, [sp]
	str	r6, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
	ldr	r0, .L392+0x34
	str	r0, [r5]
	b	.L390
.L393:
	.align	2, 0
.L392:
	.word	gMain
	.word	gTasks
	.word	sPowersOfTen
	.word	gStringVar2
	.word	gText_DigitIndicator
	.word	gStringVar3
	.word	gStringVar1
	.word	gNatureNamePointers
	.word	gStringVar4
	.word	gDebugText_PokemonNature
	.word	sDebugMonData
	.word	gAbilityNames
	.word	gDebugText_PokemonAbility
	.word	DebugAction_Give_Pokemon_SelectAbility
.L389:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L390	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L394
	ldr	r0, [r0]
	bl	Free
	add	r0, r6, #0
	bl	DebugAction_DestroyExtraWindow
.L390:
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L395:
	.align	2, 0
.L394:
	.word	sDebugMonData
.Lfe56:
	.size	 DebugAction_Give_Pokemon_SelectNature,.Lfe56-DebugAction_Give_Pokemon_SelectNature
	.align	2, 0
	.type	 DebugAction_Give_Pokemon_SelectAbility,function
	.thumb_func
DebugAction_Give_Pokemon_SelectAbility:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r2, .L407
	ldr	r0, .L407+0x4
	ldr	r0, [r0]
	ldrh	r0, [r0]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrh	r2, [r1, #0x1a]
	neg	r0, r2
	orr	r0, r0, r2
	lsr	r4, r0, #0x1f
	ldrh	r0, [r1, #0x1c]
	cmp	r0, #0
	beq	.L398	@cond_branch
	add	r4, r4, #0x1
.L398:
	ldr	r5, .L407+0x8
	ldrh	r1, [r5, #0x2e]
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L399	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldrh	r1, [r5, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	lsl	r5, r7, #0x2
	cmp	r0, #0
	beq	.L400	@cond_branch
	ldr	r1, .L407+0xc
	add	r0, r5, r7
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	ldr	r1, .L407+0x10
	mov	r3, #0x10
	ldrsh	r0, [r2, r3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r2, #0xe]
	add	r0, r0, r1
	strh	r0, [r2, #0xe]
	mov	r1, #0xe
	ldrsh	r0, [r2, r1]
	cmp	r0, r4
	ble	.L400	@cond_branch
	strh	r4, [r2, #0xe]
.L400:
	ldr	r0, .L407+0x8
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x80
	and	r0, r0, r1
	ldr	r3, .L407+0xc
	cmp	r0, #0
	beq	.L402	@cond_branch
	add	r0, r5, r7
	lsl	r0, r0, #0x3
	add	r2, r0, r3
	ldr	r1, .L407+0x10
	mov	r4, #0x10
	ldrsh	r0, [r2, r4]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r2, #0xe]
	sub	r0, r0, r1
	strh	r0, [r2, #0xe]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L402	@cond_branch
	mov	r0, #0x0
	strh	r0, [r2, #0xe]
.L402:
	ldr	r0, .L407+0x4
	ldr	r0, [r0]
	ldrh	r4, [r0]
	add	r5, r5, r7
	lsl	r5, r5, #0x3
	add	r5, r5, r3
	ldrb	r6, [r5, #0xe]
	add	r0, r4, #0
	bl	GetFormIdFromFormSpeciesId
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r4, #0
	add	r1, r6, #0
	bl	GetAbilityBySpecies
	add	r6, r0, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	ldr	r0, .L407+0x14
	ldr	r2, .L407+0x18
	mov	r3, #0x10
	ldrsh	r1, [r5, r3]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r4, .L407+0x1c
	mov	r0, #0xe
	ldrsh	r1, [r5, r0]
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	add	r0, r4, #0
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	ldr	r0, .L407+0x20
	mov	r1, #0xd
	mul	r1, r1, r6
	ldr	r2, .L407+0x24
	add	r1, r1, r2
	bl	StringCopy
	ldr	r4, .L407+0x28
	ldr	r1, .L407+0x2c
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r5, #0xc]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
.L399:
	ldr	r0, .L407+0x8
	ldrh	r1, [r0, #0x2e]
	mov	r3, #0x1
	mov	r8, r3
	mov	r0, r8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L404	@cond_branch
	ldr	r0, .L407+0x4
	ldr	r1, [r0]
	ldr	r0, .L407+0xc
	lsl	r5, r7, #0x2
	add	r5, r5, r7
	lsl	r5, r5, #0x3
	add	r5, r5, r0
	ldrh	r0, [r5, #0xe]
	mov	r6, #0x0
	strh	r0, [r1, #0x6]
	strh	r6, [r5, #0xe]
	strh	r6, [r5, #0x10]
	ldr	r0, .L407+0x14
	ldr	r1, .L407+0x18
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r4, .L407+0x1c
	mov	r0, #0xe
	ldrsh	r1, [r5, r0]
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	add	r0, r4, #0
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	ldr	r4, .L407+0x28
	ldr	r1, .L407+0x30
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r5, #0xc]
	mov	r1, r8
	str	r1, [sp]
	str	r6, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r4, #0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
	ldr	r0, .L407+0x34
	str	r0, [r5]
	b	.L405
.L408:
	.align	2, 0
.L407:
	.word	gBaseStats
	.word	sDebugMonData
	.word	gMain
	.word	gTasks
	.word	sPowersOfTen
	.word	gStringVar2
	.word	gText_DigitIndicator
	.word	gStringVar3
	.word	gStringVar1
	.word	gAbilityNames
	.word	gStringVar4
	.word	gDebugText_PokemonAbility
	.word	gDebugText_PokemonIV_0
	.word	DebugAction_Give_Pokemon_SelectIVs
.L404:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L405	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L409
	ldr	r0, [r0]
	bl	Free
	add	r0, r7, #0
	bl	DebugAction_DestroyExtraWindow
.L405:
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L410:
	.align	2, 0
.L409:
	.word	sDebugMonData
.Lfe57:
	.size	 DebugAction_Give_Pokemon_SelectAbility,.Lfe57-DebugAction_Give_Pokemon_SelectAbility
	.align	2, 0
	.type	 DebugAction_Give_Pokemon_SelectIVs,function
	.thumb_func
DebugAction_Give_Pokemon_SelectIVs:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r4, .L453
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB6984
	b	.L412	@long jump
.LCB6984:
	mov	r0, #0x5
	bl	PlaySE
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	mov	r1, r8
	lsl	r7, r1, #0x2
	cmp	r0, #0
	beq	.L413	@cond_branch
	ldr	r1, .L453+0x4
	mov	r2, r8
	add	r0, r7, r2
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	ldr	r1, .L453+0x8
	mov	r3, #0x10
	ldrsh	r0, [r2, r3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r2, #0xe]
	add	r0, r0, r1
	strh	r0, [r2, #0xe]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x1f
	ble	.L413	@cond_branch
	mov	r0, #0x1f
	strh	r0, [r2, #0xe]
.L413:
	ldr	r2, .L453
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x80
	and	r0, r0, r1
	ldr	r4, .L453+0x4
	cmp	r0, #0
	beq	.L415	@cond_branch
	mov	r5, r8
	add	r0, r7, r5
	lsl	r0, r0, #0x3
	add	r3, r0, r4
	ldr	r1, .L453+0x8
	mov	r5, #0x10
	ldrsh	r0, [r3, r5]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r3, #0xe]
	sub	r0, r0, r1
	strh	r0, [r3, #0xe]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L415	@cond_branch
	mov	r0, #0x0
	strh	r0, [r3, #0xe]
.L415:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L417	@cond_branch
	mov	r1, r8
	add	r0, r7, r1
	lsl	r0, r0, #0x3
	add	r1, r0, r4
	ldrh	r2, [r1, #0x10]
	mov	r3, #0x10
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	ble	.L417	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1, #0x10]
.L417:
	ldr	r0, .L453
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L419	@cond_branch
	mov	r5, r8
	add	r0, r7, r5
	lsl	r0, r0, #0x3
	add	r1, r0, r4
	ldrh	r2, [r1, #0x10]
	mov	r3, #0x10
	ldrsh	r0, [r1, r3]
	cmp	r0, #0x1
	bgt	.L419	@cond_branch
	add	r0, r2, #0x1
	strh	r0, [r1, #0x10]
.L419:
	ldr	r0, .L453+0xc
	ldr	r2, .L453+0x10
	ldr	r1, .L453+0x4
	mov	r5, r8
	add	r4, r7, r5
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	mov	r3, #0x10
	ldrsh	r1, [r4, r3]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r5, .L453+0x14
	mov	r0, #0xe
	ldrsh	r1, [r4, r0]
	add	r0, r5, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	add	r0, r5, #0
	add	r1, r5, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	mov	r1, #0x16
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x5
	bhi	.L421	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L453+0x18
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L454:
	.align	2, 0
.L453:
	.word	gMain
	.word	gTasks
	.word	sPowersOfTen
	.word	gStringVar2
	.word	gText_DigitIndicator
	.word	gStringVar3
	.word	.L428
	.align	2, 0
	.align	2, 0
.L428:
	.word	.L422
	.word	.L423
	.word	.L424
	.word	.L425
	.word	.L426
	.word	.L427
.L422:
	ldr	r0, .L455
	ldr	r1, .L455+0x4
	bl	StringExpandPlaceholders
	b	.L421
.L456:
	.align	2, 0
.L455:
	.word	gStringVar4
	.word	gDebugText_PokemonIV_0
.L423:
	ldr	r0, .L457
	ldr	r1, .L457+0x4
	bl	StringExpandPlaceholders
	b	.L421
.L458:
	.align	2, 0
.L457:
	.word	gStringVar4
	.word	gDebugText_PokemonIV_1
.L424:
	ldr	r0, .L459
	ldr	r1, .L459+0x4
	bl	StringExpandPlaceholders
	b	.L421
.L460:
	.align	2, 0
.L459:
	.word	gStringVar4
	.word	gDebugText_PokemonIV_2
.L425:
	ldr	r0, .L461
	ldr	r1, .L461+0x4
	bl	StringExpandPlaceholders
	b	.L421
.L462:
	.align	2, 0
.L461:
	.word	gStringVar4
	.word	gDebugText_PokemonIV_3
.L426:
	ldr	r0, .L463
	ldr	r1, .L463+0x4
	bl	StringExpandPlaceholders
	b	.L421
.L464:
	.align	2, 0
.L463:
	.word	gStringVar4
	.word	gDebugText_PokemonIV_4
.L427:
	ldr	r0, .L465
	ldr	r1, .L465+0x4
	bl	StringExpandPlaceholders
.L421:
	ldr	r1, .L465+0x8
	mov	r2, r8
	add	r0, r7, r2
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0, #0xc]
	ldr	r2, .L465
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
.L412:
	ldr	r0, .L465+0xc
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB7269
	b	.L430	@long jump
.LCB7269:
	ldr	r0, .L465+0x8
	mov	r3, r8
	lsl	r2, r3, #0x2
	add	r1, r2, r3
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r5, #0x16
	ldrsh	r1, [r1, r5]
	add	r4, r0, #0
	add	r7, r2, #0
	cmp	r1, #0x5
	bhi	.L431	@cond_branch
	lsl	r0, r1, #0x2
	ldr	r1, .L465+0x10
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L466:
	.align	2, 0
.L465:
	.word	gStringVar4
	.word	gDebugText_PokemonIV_5
	.word	gTasks
	.word	gMain
	.word	.L438
	.align	2, 0
	.align	2, 0
.L438:
	.word	.L432
	.word	.L433
	.word	.L434
	.word	.L435
	.word	.L436
	.word	.L437
.L432:
	ldr	r0, .L467
	ldr	r1, [r0]
	mov	r2, r8
	add	r0, r7, r2
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	ldrh	r0, [r0, #0xe]
	strb	r0, [r1, #0x8]
	b	.L431
.L468:
	.align	2, 0
.L467:
	.word	sDebugMonData
.L433:
	ldr	r0, .L469
	ldr	r1, [r0]
	mov	r3, r8
	add	r0, r7, r3
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	ldrh	r0, [r0, #0xe]
	strb	r0, [r1, #0x9]
	b	.L431
.L470:
	.align	2, 0
.L469:
	.word	sDebugMonData
.L434:
	ldr	r0, .L471
	ldr	r1, [r0]
	mov	r5, r8
	add	r0, r7, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	ldrh	r0, [r0, #0xe]
	strb	r0, [r1, #0xa]
	b	.L431
.L472:
	.align	2, 0
.L471:
	.word	sDebugMonData
.L435:
	ldr	r0, .L473
	ldr	r1, [r0]
	mov	r2, r8
	add	r0, r7, r2
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	ldrh	r0, [r0, #0xe]
	strb	r0, [r1, #0xb]
	b	.L431
.L474:
	.align	2, 0
.L473:
	.word	sDebugMonData
.L436:
	ldr	r0, .L475
	ldr	r1, [r0]
	mov	r3, r8
	add	r0, r7, r3
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	ldrh	r0, [r0, #0xe]
	strb	r0, [r1, #0xc]
	b	.L431
.L476:
	.align	2, 0
.L475:
	.word	sDebugMonData
.L437:
	ldr	r0, .L477
	ldr	r1, [r0]
	mov	r5, r8
	add	r0, r7, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	ldrh	r0, [r0, #0xe]
	strb	r0, [r1, #0xd]
.L431:
	mov	r1, r8
	add	r0, r7, r1
	lsl	r0, r0, #0x3
	add	r6, r0, r4
	ldrh	r1, [r6, #0x16]
	mov	r2, #0x16
	ldrsh	r0, [r6, r2]
	cmp	r0, #0x5
	bne	.LCB7420
	b	.L440	@long jump
.LCB7420:
	add	r0, r1, #0x1
	mov	r1, #0x0
	strh	r0, [r6, #0x16]
	strh	r1, [r6, #0xe]
	strh	r1, [r6, #0x10]
	ldr	r0, .L477+0x4
	ldr	r1, .L477+0x8
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r4, .L477+0xc
	mov	r3, #0xe
	ldrsh	r1, [r6, r3]
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	add	r0, r4, #0
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	mov	r5, #0x16
	ldrsh	r0, [r6, r5]
	cmp	r0, #0x5
	bhi	.L441	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L477+0x10
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L478:
	.align	2, 0
.L477:
	.word	sDebugMonData
	.word	gStringVar2
	.word	gText_DigitIndicator
	.word	gStringVar3
	.word	.L448
	.align	2, 0
	.align	2, 0
.L448:
	.word	.L442
	.word	.L443
	.word	.L444
	.word	.L445
	.word	.L446
	.word	.L447
.L442:
	ldr	r0, .L479
	ldr	r1, .L479+0x4
	bl	StringExpandPlaceholders
	b	.L441
.L480:
	.align	2, 0
.L479:
	.word	gStringVar4
	.word	gDebugText_PokemonIV_0
.L443:
	ldr	r0, .L481
	ldr	r1, .L481+0x4
	bl	StringExpandPlaceholders
	b	.L441
.L482:
	.align	2, 0
.L481:
	.word	gStringVar4
	.word	gDebugText_PokemonIV_1
.L444:
	ldr	r0, .L483
	ldr	r1, .L483+0x4
	bl	StringExpandPlaceholders
	b	.L441
.L484:
	.align	2, 0
.L483:
	.word	gStringVar4
	.word	gDebugText_PokemonIV_2
.L445:
	ldr	r0, .L485
	ldr	r1, .L485+0x4
	bl	StringExpandPlaceholders
	b	.L441
.L486:
	.align	2, 0
.L485:
	.word	gStringVar4
	.word	gDebugText_PokemonIV_3
.L446:
	ldr	r0, .L487
	ldr	r1, .L487+0x4
	bl	StringExpandPlaceholders
	b	.L441
.L488:
	.align	2, 0
.L487:
	.word	gStringVar4
	.word	gDebugText_PokemonIV_4
.L447:
	ldr	r0, .L489
	ldr	r1, .L489+0x4
	bl	StringExpandPlaceholders
.L441:
	ldr	r0, .L489+0x8
	mov	r1, r8
	add	r4, r7, r1
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	ldrb	r0, [r4, #0xc]
	ldr	r2, .L489
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
	ldr	r0, .L489+0xc
	str	r0, [r4]
	b	.L451
.L490:
	.align	2, 0
.L489:
	.word	gStringVar4
	.word	gDebugText_PokemonIV_5
	.word	gTasks
	.word	DebugAction_Give_Pokemon_SelectIVs
.L440:
	mov	r5, #0x0
	strh	r5, [r6, #0xe]
	strh	r5, [r6, #0x10]
	strh	r5, [r6, #0x16]
	ldr	r0, .L491
	ldr	r1, .L491+0x4
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r4, .L491+0x8
	mov	r2, #0xe
	ldrsh	r0, [r6, r2]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	ldr	r0, .L491+0xc
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	add	r0, r4, #0
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	ldr	r0, .L491+0x10
	mov	r3, #0xe
	ldrsh	r1, [r6, r3]
	mov	r2, #0x2
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L491+0x14
	ldr	r1, .L491+0x18
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	ldrb	r0, [r6, #0xc]
	mov	r1, #0x1
	str	r1, [sp]
	str	r5, [sp, #0x4]
	str	r5, [sp, #0x8]
	add	r2, r4, #0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
	ldr	r0, .L491+0x1c
	str	r0, [r6]
	b	.L451
.L492:
	.align	2, 0
.L491:
	.word	gStringVar2
	.word	gText_DigitIndicator
	.word	gStringVar1
	.word	gMoveNames
	.word	gStringVar3
	.word	gStringVar4
	.word	gDebugText_PokemonMove_0
	.word	DebugAction_Give_Pokemon_Move
.L430:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L451	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L493
	ldr	r0, [r0]
	bl	Free
	mov	r0, r8
	bl	DebugAction_DestroyExtraWindow
.L451:
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L494:
	.align	2, 0
.L493:
	.word	sDebugMonData
.Lfe58:
	.size	 DebugAction_Give_Pokemon_SelectIVs,.Lfe58-DebugAction_Give_Pokemon_SelectIVs
	.align	2, 0
	.type	 DebugAction_Give_Pokemon_Move,function
	.thumb_func
DebugAction_Give_Pokemon_Move:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r4, .L535
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB7707
	b	.L496	@long jump
.LCB7707:
	mov	r0, #0x5
	bl	PlaySE
	ldrh	r1, [r4, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	lsl	r7, r6, #0x2
	cmp	r0, #0
	beq	.L497	@cond_branch
	ldr	r1, .L535+0x4
	add	r0, r7, r6
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	ldr	r1, .L535+0x8
	mov	r3, #0x10
	ldrsh	r0, [r2, r3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r2, #0xe]
	add	r0, r0, r1
	strh	r0, [r2, #0xe]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	ldr	r1, .L535+0xc
	cmp	r0, r1
	ble	.L497	@cond_branch
	strh	r1, [r2, #0xe]
.L497:
	ldr	r2, .L535
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x80
	and	r0, r0, r1
	ldr	r4, .L535+0x4
	cmp	r0, #0
	beq	.L499	@cond_branch
	add	r0, r7, r6
	lsl	r0, r0, #0x3
	add	r3, r0, r4
	ldr	r1, .L535+0x8
	mov	r5, #0x10
	ldrsh	r0, [r3, r5]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r0, [r3, #0xe]
	sub	r0, r0, r1
	strh	r0, [r3, #0xe]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L499	@cond_branch
	mov	r0, #0x0
	strh	r0, [r3, #0xe]
.L499:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L501	@cond_branch
	add	r0, r7, r6
	lsl	r0, r0, #0x3
	add	r1, r0, r4
	ldrh	r2, [r1, #0x10]
	mov	r3, #0x10
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	ble	.L501	@cond_branch
	sub	r0, r2, #0x1
	strh	r0, [r1, #0x10]
.L501:
	ldr	r0, .L535
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L503	@cond_branch
	add	r0, r7, r6
	lsl	r0, r0, #0x3
	add	r1, r0, r4
	ldrh	r2, [r1, #0x10]
	mov	r4, #0x10
	ldrsh	r0, [r1, r4]
	cmp	r0, #0x2
	bgt	.L503	@cond_branch
	add	r0, r2, #0x1
	strh	r0, [r1, #0x10]
.L503:
	ldr	r0, .L535+0x10
	ldr	r2, .L535+0x14
	ldr	r1, .L535+0x4
	add	r4, r7, r6
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	mov	r5, #0x10
	ldrsh	r1, [r4, r5]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r5, .L535+0x18
	mov	r1, #0xe
	ldrsh	r0, [r4, r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	ldr	r0, .L535+0x1c
	add	r1, r1, r0
	add	r0, r5, #0
	bl	StringCopy
	add	r0, r5, #0
	add	r1, r5, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	ldr	r0, .L535+0x20
	mov	r2, #0xe
	ldrsh	r1, [r4, r2]
	mov	r2, #0x2
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r3, #0x16
	ldrsh	r0, [r4, r3]
	cmp	r0, #0x1
	beq	.L507	@cond_branch
	cmp	r0, #0x1
	bgt	.L512	@cond_branch
	cmp	r0, #0
	beq	.L506	@cond_branch
	b	.L505
.L536:
	.align	2, 0
.L535:
	.word	gMain
	.word	gTasks
	.word	sPowersOfTen
	.word	0x2f3
	.word	gStringVar2
	.word	gText_DigitIndicator
	.word	gStringVar1
	.word	gMoveNames
	.word	gStringVar3
.L512:
	cmp	r0, #0x2
	beq	.L508	@cond_branch
	cmp	r0, #0x3
	beq	.L509	@cond_branch
	b	.L505
.L506:
	ldr	r0, .L537
	ldr	r1, .L537+0x4
	bl	StringExpandPlaceholders
	b	.L505
.L538:
	.align	2, 0
.L537:
	.word	gStringVar4
	.word	gDebugText_PokemonMove_0
.L507:
	ldr	r0, .L539
	ldr	r1, .L539+0x4
	bl	StringExpandPlaceholders
	b	.L505
.L540:
	.align	2, 0
.L539:
	.word	gStringVar4
	.word	gDebugText_PokemonMove_1
.L508:
	ldr	r0, .L541
	ldr	r1, .L541+0x4
	bl	StringExpandPlaceholders
	b	.L505
.L542:
	.align	2, 0
.L541:
	.word	gStringVar4
	.word	gDebugText_PokemonMove_2
.L509:
	ldr	r0, .L543
	ldr	r1, .L543+0x4
	bl	StringExpandPlaceholders
.L505:
	ldr	r1, .L543+0x8
	add	r0, r7, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0, #0xc]
	ldr	r2, .L543
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
.L496:
	ldr	r0, .L543+0xc
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB7972
	b	.L513	@long jump
.LCB7972:
	ldr	r1, .L543+0x8
	lsl	r2, r6, #0x2
	add	r0, r2, r6
	lsl	r0, r0, #0x3
	add	r3, r0, r1
	mov	r4, #0xe
	ldrsh	r0, [r3, r4]
	add	r4, r1, #0
	add	r7, r2, #0
	cmp	r0, #0
	bne	.L514	@cond_branch
	mov	r0, #0x4
	strh	r0, [r3, #0x16]
.L514:
	mov	r5, #0x16
	ldrsh	r0, [r3, r5]
	cmp	r0, #0x1
	beq	.L517	@cond_branch
	cmp	r0, #0x1
	bgt	.L522	@cond_branch
	cmp	r0, #0
	beq	.L516	@cond_branch
	b	.L515
.L544:
	.align	2, 0
.L543:
	.word	gStringVar4
	.word	gDebugText_PokemonMove_3
	.word	gTasks
	.word	gMain
.L522:
	cmp	r0, #0x2
	beq	.L518	@cond_branch
	cmp	r0, #0x3
	beq	.L519	@cond_branch
	b	.L515
.L516:
	ldr	r0, .L545
	ldr	r1, [r0]
	ldrh	r0, [r3, #0xe]
	strh	r0, [r1, #0xe]
	b	.L515
.L546:
	.align	2, 0
.L545:
	.word	sDebugMonData
.L517:
	ldr	r0, .L547
	ldr	r1, [r0]
	ldrh	r0, [r3, #0xe]
	strh	r0, [r1, #0x10]
	b	.L515
.L548:
	.align	2, 0
.L547:
	.word	sDebugMonData
.L518:
	ldr	r0, .L549
	ldr	r1, [r0]
	ldrh	r0, [r3, #0xe]
	strh	r0, [r1, #0x12]
	b	.L515
.L550:
	.align	2, 0
.L549:
	.word	sDebugMonData
.L519:
	ldr	r0, .L551
	ldr	r1, [r0]
	ldrh	r0, [r3, #0xe]
	strh	r0, [r1, #0x14]
.L515:
	add	r0, r7, r6
	lsl	r0, r0, #0x3
	add	r5, r0, r4
	ldrh	r1, [r5, #0x16]
	mov	r2, #0x16
	ldrsh	r0, [r5, r2]
	cmp	r0, #0x2
	bgt	.L523	@cond_branch
	add	r0, r1, #0x1
	mov	r1, #0x0
	strh	r0, [r5, #0x16]
	strh	r1, [r5, #0xe]
	strh	r1, [r5, #0x10]
	ldr	r0, .L551+0x4
	ldr	r1, .L551+0x8
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r4, .L551+0xc
	mov	r3, #0xe
	ldrsh	r0, [r5, r3]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	ldr	r0, .L551+0x10
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	add	r0, r4, #0
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0xf
	bl	StringCopyPadded
	ldr	r0, .L551+0x14
	mov	r4, #0xe
	ldrsh	r1, [r5, r4]
	mov	r2, #0x2
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r1, #0x16
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	beq	.L526	@cond_branch
	cmp	r0, #0x1
	bgt	.L531	@cond_branch
	cmp	r0, #0
	beq	.L525	@cond_branch
	b	.L524
.L552:
	.align	2, 0
.L551:
	.word	sDebugMonData
	.word	gStringVar2
	.word	gText_DigitIndicator
	.word	gStringVar1
	.word	gMoveNames
	.word	gStringVar3
.L531:
	cmp	r0, #0x2
	beq	.L527	@cond_branch
	cmp	r0, #0x3
	beq	.L528	@cond_branch
	b	.L524
.L525:
	ldr	r0, .L553
	ldr	r1, .L553+0x4
	bl	StringExpandPlaceholders
	b	.L524
.L554:
	.align	2, 0
.L553:
	.word	gStringVar4
	.word	gDebugText_PokemonMove_0
.L526:
	ldr	r0, .L555
	ldr	r1, .L555+0x4
	bl	StringExpandPlaceholders
	b	.L524
.L556:
	.align	2, 0
.L555:
	.word	gStringVar4
	.word	gDebugText_PokemonMove_1
.L527:
	ldr	r0, .L557
	ldr	r1, .L557+0x4
	bl	StringExpandPlaceholders
	b	.L524
.L558:
	.align	2, 0
.L557:
	.word	gStringVar4
	.word	gDebugText_PokemonMove_2
.L528:
	ldr	r0, .L559
	ldr	r1, .L559+0x4
	bl	StringExpandPlaceholders
.L524:
	ldr	r0, .L559+0x8
	add	r4, r7, r6
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	ldrb	r0, [r4, #0xc]
	ldr	r2, .L559
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x1
	bl	AddTextPrinterParameterized
	ldr	r0, .L559+0xc
	str	r0, [r4]
	b	.L533
.L560:
	.align	2, 0
.L559:
	.word	gStringVar4
	.word	gDebugText_PokemonMove_3
	.word	gTasks
	.word	DebugAction_Give_Pokemon_Move
.L523:
	mov	r0, #0x0
	strh	r0, [r5, #0xe]
	strh	r0, [r5, #0x10]
	mov	r0, #0xa9
	lsl	r0, r0, #0x1
	bl	PlaySE
	ldr	r0, .L561
	str	r0, [r5]
	b	.L533
.L562:
	.align	2, 0
.L561:
	.word	DebugAction_Give_Pokemon_ComplexCreateMon
.L513:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L533	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L563
	ldr	r0, [r0]
	bl	Free
	add	r0, r6, #0
	bl	DebugAction_DestroyExtraWindow
.L533:
	add	sp, sp, #0xc
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L564:
	.align	2, 0
.L563:
	.word	sDebugMonData
.Lfe59:
	.size	 DebugAction_Give_Pokemon_Move,.Lfe59-DebugAction_Give_Pokemon_Move
	.align	2, 0
	.type	 DebugAction_Give_Pokemon_ComplexCreateMon,function
	.thumb_func
DebugAction_Give_Pokemon_ComplexCreateMon:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x98
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x8c]
	ldr	r4, .L610
	ldr	r0, [r4]
	ldrh	r0, [r0]
	bl	GetBaseFormSpeciesId
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp, #0x90]
	ldr	r0, [r4]
	ldrh	r0, [r0]
	bl	GetFormIdFromFormSpeciesId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x2]
	str	r0, [sp, #0x94]
	ldrb	r5, [r1, #0x3]
	ldrb	r7, [r1, #0x4]
	ldrb	r0, [r1, #0x6]
	mov	r4, sp
	add	r4, r4, #0x89
	strb	r0, [r4]
	add	r3, sp, #0x78
	ldrh	r0, [r1, #0xe]
	strh	r0, [r3]
	ldrh	r0, [r1, #0x10]
	strh	r0, [r3, #0x2]
	ldrh	r0, [r1, #0x12]
	strh	r0, [r3, #0x4]
	ldrh	r0, [r1, #0x14]
	strh	r0, [r3, #0x6]
	add	r2, sp, #0x80
	ldrb	r0, [r1, #0x8]
	strb	r0, [r2]
	ldrb	r0, [r1, #0x9]
	strb	r0, [r2, #0x1]
	ldrb	r0, [r1, #0xa]
	strb	r0, [r2, #0x2]
	ldrb	r0, [r1, #0xb]
	strb	r0, [r2, #0x3]
	ldrb	r0, [r1, #0xc]
	strb	r0, [r2, #0x4]
	ldrb	r0, [r1, #0xd]
	strb	r0, [r2, #0x5]
	cmp	r7, #0x19
	beq	.L567	@cond_branch
	cmp	r7, #0xff
	bne	.L566	@cond_branch
.L567:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x19
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
.L566:
	cmp	r5, #0x1
	bne	.L568	@cond_branch
	ldr	r0, .L610+0x4
	ldr	r1, [r0]
	ldrb	r5, [r1, #0xa]
	ldrb	r0, [r1, #0xb]
	lsl	r0, r0, #0x8
	orr	r5, r5, r0
	ldrb	r0, [r1, #0xc]
	lsl	r0, r0, #0x10
	orr	r5, r5, r0
	ldrb	r0, [r1, #0xd]
	lsl	r0, r0, #0x18
	orr	r5, r5, r0
	add	r1, sp, #0x88
	mov	sl, r1
	lsr	r6, r5, #0x10
	ldr	r0, .L610+0x8
	mov	r8, r0
	add	r0, r5, #0
	mov	r1, r8
	and	r0, r0, r1
	eor	r6, r6, r0
.L569:
	bl	Random
	add	r4, r0, #0
	bl	Random
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r0, r0, #0x10
	orr	r4, r4, r0
	bl	Random
	lsl	r0, r0, #0x10
	mov	r1, #0xe0
	lsl	r1, r1, #0xb
	and	r1, r1, r0
	lsr	r1, r1, #0x10
	eor	r1, r1, r6
	mov	r0, r8
	and	r0, r0, r4
	eor	r1, r1, r0
	lsl	r4, r1, #0x10
	orr	r4, r4, r0
	add	r0, r4, #0
	bl	GetNatureFromPersonality
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r7, r0
	bne	.L569	@cond_branch
	mov	r0, #0x1
	str	r0, [sp]
	str	r4, [sp, #0x4]
	str	r0, [sp, #0x8]
	str	r5, [sp, #0xc]
	mov	r0, r9
	str	r0, [sp, #0x10]
	add	r0, sp, #0x14
	ldr	r1, [sp, #0x90]
	ldr	r2, [sp, #0x94]
	mov	r3, #0x20
	bl	CreateMon
	b	.L574
.L611:
	.align	2, 0
.L610:
	.word	sDebugMonData
	.word	gSaveBlock2Ptr
	.word	0xffff
.L568:
	str	r7, [sp]
	mov	r1, r9
	str	r1, [sp, #0x4]
	add	r0, sp, #0x14
	ldr	r1, [sp, #0x90]
	ldr	r2, [sp, #0x94]
	mov	r3, #0x20
	bl	CreateMonWithNature
	add	r0, sp, #0x88
	mov	sl, r0
.L574:
	mov	r4, #0x0
	mov	r5, sl
.L578:
	mov	r0, sp
	add	r0, r0, r4
	add	r0, r0, #0x80
	ldrb	r0, [r0]
	strb	r0, [r5]
	ldrb	r0, [r5]
	cmp	r0, #0x20
	beq	.L577	@cond_branch
	cmp	r0, #0xff
	beq	.L577	@cond_branch
	add	r1, r4, #0
	add	r1, r1, #0x27
	add	r0, sp, #0x14
	add	r2, r5, #0
	bl	SetMonData
.L577:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x5
	bls	.L578	@cond_branch
	add	r0, sp, #0x14
	bl	CalculateMonStats
	mov	r4, #0x0
	ldr	r5, .L612
.L584:
	lsl	r0, r4, #0x1
	mov	r1, sp
	add	r1, r1, r0
	add	r1, r1, #0x78
	ldrh	r0, [r1]
	cmp	r0, #0
	beq	.L583	@cond_branch
	cmp	r0, #0xff
	beq	.L583	@cond_branch
	cmp	r0, r5
	bhi	.L583	@cond_branch
	add	r1, r0, #0
	add	r0, sp, #0x14
	add	r2, r4, #0
	bl	SetMonMoveSlot
.L583:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L584	@cond_branch
	mov	r0, #0x89
	add	r0, r0, sp
	ldrb	r1, [r0]
	cmp	r1, #0xff
	beq	.L589	@cond_branch
	ldr	r0, [sp, #0x90]
	mov	r2, r9
	bl	GetAbilityBySpecies
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L588	@cond_branch
.L589:
	mov	r4, sp
	add	r4, r4, #0x89
.L590:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	bl	__umodsi3
	strb	r0, [r4]
	ldr	r0, [sp, #0x90]
	ldrb	r1, [r4]
	mov	r2, r9
	bl	GetAbilityBySpecies
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L590	@cond_branch
.L588:
	add	r0, sp, #0x14
	mov	r1, #0x2e
	mov	r2, sp
	add	r2, r2, #0x89
	bl	SetMonData
	ldr	r4, .L612+0x4
	ldr	r2, [r4]
	add	r0, sp, #0x14
	mov	r1, #0x7
	bl	SetMonData
	ldr	r2, [r4]
	add	r2, r2, #0x8
	add	r0, sp, #0x14
	mov	r1, #0x31
	bl	SetMonData
	mov	r4, #0x0
	b	.L595
.L613:
	.align	2, 0
.L612:
	.word	0x2f3
	.word	gSaveBlock2Ptr
.L597:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L595:
	cmp	r4, #0x5
	bhi	.L609	@cond_branch
	mov	r0, #0x64
	mov	r1, r4
	mul	r1, r1, r0
	ldr	r0, .L614
	add	r5, r1, r0
	add	r0, r5, #0
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	cmp	r0, #0
	bne	.L597	@cond_branch
	mov	r6, #0x0
	add	r0, r5, #0
	add	r1, sp, #0x14
	mov	r2, #0x64
	bl	CopyMon
	ldr	r1, .L614+0x4
	add	r0, r4, #0x1
	strb	r0, [r1]
	b	.L602
.L615:
	.align	2, 0
.L614:
	.word	gPlayerParty
	.word	gPlayerPartyCount
.L609:
	add	r0, sp, #0x14
	bl	SendMonToPC
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
.L602:
	ldr	r0, [sp, #0x90]
	bl	SpeciesToNationalPokedexNum
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r6, #0
	blt	.L603	@cond_branch
	cmp	r6, #0x1
	bgt	.L603	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x2
	bl	GetSetPokedexFlag
	add	r0, r4, #0
	mov	r1, #0x3
	bl	GetSetPokedexFlag
.L603:
	ldr	r0, .L616
	ldr	r0, [r0]
	bl	Free
	ldr	r0, [sp, #0x8c]
	bl	DebugAction_DestroyExtraWindow
	add	sp, sp, #0x98
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L617:
	.align	2, 0
.L616:
	.word	sDebugMonData
.Lfe60:
	.size	 DebugAction_Give_Pokemon_ComplexCreateMon,.Lfe60-DebugAction_Give_Pokemon_ComplexCreateMon
	.align	2, 0
	.type	 DebugAction_Give_CHEAT,function
	.thumb_func
DebugAction_Give_CHEAT:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	Debug_DestroyMenu
	bl	ScriptContext2_Enable
	ldr	r0, .L619
	bl	ScriptContext1_SetupScript
	pop	{r0}
	bx	r0
.L620:
	.align	2, 0
.L619:
	.word	Debug_CheatStart
.Lfe61:
	.size	 DebugAction_Give_CHEAT,.Lfe61-DebugAction_Give_CHEAT
	.align	2, 0
	.type	 DebugAction_GiveAllTMs,function
	.thumb_func
DebugAction_GiveAllTMs:
	push	{r4, r5, lr}
	ldr	r0, .L627
	bl	PlayFanfare
	mov	r4, #0xf1
	lsl	r4, r4, #0x1
	ldr	r5, .L627+0x4
.L625:
	add	r0, r4, #0
	mov	r1, #0x1
	bl	AddBagItem
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, r5
	bls	.L625	@cond_branch
	ldr	r0, .L627+0x8
	mov	r1, #0x1
	bl	AddBagItem
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L628:
	.align	2, 0
.L627:
	.word	0x157
	.word	0x213
	.word	0x221
.Lfe62:
	.size	 DebugAction_GiveAllTMs,.Lfe62-DebugAction_GiveAllTMs
.text
	.align	2, 0

